<template>
	<view class="container">
		<view class="title">
			<text class="title-text">个人信息</text>
		</view>
		<view class="info">
			<view class="info-item">
				<text>账号</text>
				<text>18888888888</text>
			</view>
			<view class="info-item nobottom" @click="changePhoneNumber">
				<text>手机号</text>
				<view class="phone">
					<text>18888888888</text>
					<image class="icon" src="@/static/mine/right.png" mode="aspectFit" />
				</view>
			</view>
		</view>
		<view class="title">
			<text>安全信息</text>
		</view>
		<view class="info">
			<view class="info-item" @click="editPassword">
				<text>修改密码</text>
				<image class="icon" src="@/static/mine/right.png" mode="aspectFit" />
			</view>
			<view class="info-item nobottom" @click="cancelAnAccount">
				<text>注销账号</text>
				<image class="icon" src="@/static/mine/right.png" mode="aspectFit" />
			</view>
		</view>
		<view class="title">
			<text>第三方账号</text>
		</view>
		<view class="info">
			<view class="info-item nobottom">
				<text>微信</text>
				<view class="switch-state">
					<text style="margin-right: 10rpx;">{{switchVal ? '已绑定' : '未绑定'}}</text>
					<fui-switch :checked="switchVal" color="#1296db" @change="change"></fui-switch>
				</view>
			</view>
		</view>
		<view class="btn-box">
			<fui-button color="#fff" text="退出登陆" background="#1296db" @onclick="logout"></fui-button>
		</view>
	</view>
</template>

<script setup lang="uts">
	import { ref } from 'vue'
	const switchVal = ref(false)
	const change = () => {
		const isCurrentlyBound = switchVal.value
		if (isCurrentlyBound) {
			uni.showModal({
				title: '确认解绑',
				content: '确定要解除微信绑定吗？',
				cancelText: '取消',
				confirmText: '确定',
				success: (res) => {
					console.log(res)
					if (res.confirm) {
						console.log('调用解绑API...')

						switchVal.value = false
						uni.showToast({
							title: '已成功解绑微信',
							icon: 'none'
						})
					}
					else if (res.cancel) {
						console.log('用户点击取消',isCurrentlyBound);
						switchVal.value = isCurrentlyBound
					}
				},
			})
		} else {
			uni.showModal({
				title: '确认绑定',
				content: '确定要绑定微信账号吗？',
				cancelText: '取消',
				confirmText: '确定',
				success: (res) => {
					if (res.confirm) {
						console.log('调用绑定API...')

						switchVal.value = true
						uni.showToast({
							title: '已成功绑定微信',
							icon: 'none'
						})
					}else if (res.cancel) {
						console.log('用户点击取消',isCurrentlyBound);
						switchVal.value = isCurrentlyBound
					}
				}
			})
		}
	}
	const logout = () => {
		uni.showModal({
			content: '确定退出登陆吗？',
			cancelText: '取消',
			confirmText: '确定',
			success(res) {
				if (res.confirm) {
					uni.showToast({
						title: '退出成功',
						icon: 'none',
						duration: 500,
					})
				}
			}
		})
	}

	//修改手机号
	const changePhoneNumber = () => {
		uni.navigateTo({
			url: '/pages/mine/userInfo/changePhoneNumber/changePhoneNumber'
		})
	}

	//注销账号
	const cancelAnAccount = () => {
		uni.navigateTo({
			url: '/pages/mine/userInfo/CancelAnAccount/CancelAnAccount'
		})
	}
	
	//修改密码
	const editPassword = () => {
		//通过接口返回类型判断是去找回密码还是修改密码
		if(true){
			uni.navigateTo({
				url: '/pages/mine/userInfo/changePassword/changePassword'
			})
		}
	}
</script>

<style lang="scss">
	.container {
		height: 100%;
		background: #f3f3f3;
		padding: 0 20rpx;

		.title {
			padding: 50rpx 0 10rpx 20rpx;
			.title-text{
				font-size: 30rpx;
				color: #333;
			}
		}

		.info {
			background: #fff;
			padding: 10rpx 30rpx;
			border-radius: 10rpx;

			.info-item {
				display: flex;
				flex-direction: row;
				justify-content: space-between;
				;
				align-items: center;
				padding: 20rpx 0;
				border-bottom: 1rpx solid #f1f1f1;

				.icon {
					width: 30rpx;
					height: 30rpx;
				}

				.switch-state {
					display: flex;
					flex-direction: row;
					justify-content: flex-end;
					align-items: center;
				}

				.phone {
					display: flex;
					flex-direction: row;
					justify-content: flex-end;
					align-items: center;
				}
			}

			.nobottom {
				border-bottom: none;
			}
		}

		.btn-box {
			margin-top: 200rpx;
		}
	}
</style>