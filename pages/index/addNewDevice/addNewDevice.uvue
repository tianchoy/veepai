<template>
	<view class="container">
		<TopNavBar title="添加新设备" :showBack="true" @back="goback" :isText="true" rightText="常见问题"/>
		<view class="content">
			<view class="camera-box">
				<camera style="width: 100%; height: 300px;" :resolution="'medium'" :device-position="devicePosition" mode="scanCode"
					:flash="flash" :frame-size="frameSize" @error="handleError" @initdone="handleInitDone">
				</camera>
				<view class="tips">请扫描机身上的二维码</view>
				<view class="tools">
					<view class="icon-container">
						 <image class="icons" src="/static/device/flashlight.png"  mode="aspectFit" @click="switchFlash" />
					</view>
					<view class="icon-container">
						<image class="icons" src="/static/device/picture.png" mode="aspectFit" @click="scanImg" />
					</view>
				</view>
			</view>
		</view>
		<view class="other-ways">找不到二维码时，请选择以下方式</view>
		<view class="ways-box">
			<view class="ways-item">
				<text class="ways-title">WIFI摄像机</text>
				<text class="ways-desc">使用扫APP二维码的配网方式</text>
			</view>
			<view class="ways-item">
				<text class="ways-title">4G摄像机</text>
				<text class="ways-desc">使用4G网络的摄像机</text>
			</view>
		</view>
	</view>
</template>

<script setup lang="uts">
	import	{ ref } from 'vue'
	import TopNavBar from '@/components/TopNavBar.uvue'


	const flash = ref<string>('off')
	const devicePosition = ref<string>('back')
	const frameSize = ref<string>('medium')
	
	const goback = () => {
		uni.navigateBack()
	}

	const handleError = (err: any) => {
		uni.showToast({
			title: '请允许使用摄像头',
		})
	}

	const handleInitDone = () => {
		uni.showToast({
			title: '初始化成功',
		})

		uni.scanCode({
			success(res) {
				console.log("扫描结果：", res.result);
			},
			fail(err) {
				console.error("扫描失败：", err);
			}
		});
	}

	const switchFlash = () => {
		flash.value = flash.value == 'off' ? 'on' : 'off'
	}

	const scanImg = () => {
		uni.chooseImage({
			count: 1,
			sourceType: ['album'],
			success: (res) => {
				uni.scanCode({
				onlyFromCamera: false,
				scanType: ['qrCode'],
				success: (scanRes) => {
					console.log('识别结果:', scanRes.result);
				},
				fail: (err) => {
					console.error('识别失败:', err);
				}
				});
			}
		});
	}
</script>

<style lang="scss" scoped>
	.container{
		height: 100%;
		background-color: #f5f5f5;
		.content{
			background-color: #fff;
			padding:50rpx 100rpx 30rpx;
			.tips{
				padding: 50rpx 0 20rpx 0;
				display: flex;
				flex-direction: row;
				justify-content: center;
			}
			.tools{
				display: flex;
				flex-direction: row;
				justify-content: center;
				align-items: center;
				.icon-container {
					display: flex;
					justify-content: center;
					align-items: center;
					width: 50%;
					.icons{
						width: 80rpx;
						height: 80rpx;
					}
				}
			}
		}
		.other-ways{
			display: flex;
			flex-direction: row;
			justify-content: center;
			align-items: center;
			margin: 30rpx 0;
			
		}
		.ways-box{
			padding: 0 30rpx;
			.ways-item{
				padding:30rpx;
				background-color: #fff;
				margin-bottom: 30rpx;
				border-radius: 20rpx;
				.ways-title{
					font-size: 35rpx;
					margin-bottom: 15rpx;
				}
				.ways-desc{
					font-size: 25rpx;
					color:#999;
				}
			}
		}
	}	
</style>
