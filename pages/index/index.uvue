<template>
	<view class="container">
		<view class="content">
			<view class="video-container" style="border-radius: 15rpx; overflow: hidden;">
				<video class="video" :title="deviceTitle" :src="videoSrc" :controls="false" @click="vedioClick"></video>
			</view>
			<view class="video-right-control">
				<view class="vedio-control">
					<image class="vedio-control-icon" :src="forward" @click="toDeviceDetail"></image>
				</view>
				<view class="vedio-control">
					<image class="vedio-control-icon" :src="errIcon" @click="errClick"></image>
				</view>
				<view class="vedio-control">
					<image class="vedio-control-icon" :src="transfer" @click="transferClick"></image>
				</view>
				<view class="vedio-control">
					<image class="vedio-control-icon" :src="replayIcon" @click="replay"></image>
				</view>
			</view>
			<view class="video-bottom-control">
				<view class="vedio-control">
					<image class="vedio-control-icon" @click="pauseClick" :src="pauseIcon"></image>
				</view>
			</view>
		</view>

	</view>
</template>

<script setup lang="uts">
	import { ref } from 'vue'

	const deviceTitle = ref('设备名称')
	const forward = '/static/video/forward.png'
	const errIcon = '/static/video/error.png'
	const transfer = '/static/video/transfer.png'
	const replayIcon = '/static/video/replay.png'
	const playIcon = '/static/video/play.png'
	const pauseIcon = '/static/video/pause.png'
	const addIcon = '/static/tabbar/add.png'

	const videoSrc = "https://qiniu-web-assets.dcloud.net.cn/video/sample/2minute-demo.mp4"

	const addDevices = () => {
		uni.showToast({
			title: '添加',
			icon: 'none'
		})
	}

	const replay = () => {
		uni.showToast({
			title: '重播',
			icon: 'none'
		})
	}

	const transferClick = () => {
		uni.showToast({
			title: '传输',
			icon: 'none'
		})
	}

	const errClick = () => {
		uni.showToast({
			title: '警报',
			icon: 'none'
		})
	}

	const toDeviceDetail = () => {
		uni.showToast({
			title: '设备详情',
			icon: 'none'
		})
	}

	const pauseClick = () => {
		uni.showToast({
			title: '暂停',
			icon: 'none'
		})
	}

	const vedioClick = () => {
		uni.showToast({
			title: '播放',
			icon: 'none'
		})
	}
</script>

<style lang="scss" scoped>
	.container {
		width: 100%;
		height: 100%;
		padding: 0 20rpx;
		display: flex;
		flex-direction: column;

		.content {
			position: relative;
			border-radius: 15rpx;
			width: 100%;
			height: 400rpx;
			overflow: hidden;

			.video-container {
				width: 100%;
				height: 100%;
			}

			.video {
				width: 100%;
				height: 100%;
				object-fit: cover; // 使视频充满容器并保持比例
				margin-bottom: 0; // 移除底部边距
			}

			.video-top-title {
				position: absolute;
				top: 0;
				height: 60rpx;
				width: 80%;
				padding: 15rpx 0 0 20rpx;
				background: linear-gradient(to right,
						rgba(255, 255, 255, 0.5),
						rgba(255, 255, 255, 0));
				z-index: 3; // 确保标题显示在视频上方
			}

			.video-right-control {
				position: absolute;
				top: 0;
				right: 10rpx;
				display: flex;
				flex-direction: column;
				justify-content: space-around;
				height: 100%;
				align-items: center;
				z-index: 2;

				.vedio-control {
					width: 50rpx;
					height: 50rpx;
					padding: 10rpx;
					border-radius: 25rpx;
					background: rgba(255, 255, 255, .7);

					.vedio-control-icon {
						width: 100%;
						height: 100%;
					}
				}
			}

			.video-bottom-control {
				position: absolute;
				bottom: 10rpx;
				left: 0;
				width: 100%;
				height: 50rpx;
				z-index: 1;

				.vedio-control {
					margin: 0 auto;
					width: 50rpx;
					height: 50rpx;
					padding: 10rpx;
					border-radius: 25rpx;
					background: rgba(255, 255, 255, .7);

					.vedio-control-icon {
						width: 100%;
						height: 100%;
					}
				}
			}
		}
	}
</style>