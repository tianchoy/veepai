// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios9-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name unimoduleLimeFileUtils
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import DCloudUTSFoundation
import DCloudUniappRuntime
import Foundation
import MobileCoreServices
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import unimoduleLimeFileUtils
public typealias NullableString = Swift.String?
public typealias ConversionType = Swift.String
@_inheritsConvenienceInitializers @objc(UTSSDKModulesLimeFileUtilsProcessFileOptions) @objcMembers public class ProcessFileOptions : ObjectiveC.NSObject, DCloudUTSFoundation.UTSObject, DCloudUTSFoundation.IUTSSourceMap {
  @objc public func __$getOriginalPosition() -> DCloudUTSFoundation.UTSSourceMapPosition?
  @objc public var type: unimoduleLimeFileUtils.ConversionType!
  @objc public var path: Swift.String!
  @objc public var filename: Swift.String?
  @objc public var success: ((_ res: Swift.String) -> Swift.Void)?
  @objc public var fail: ((_ res: Any) -> Swift.Void)?
  @objc public var complete: ((_ res: Any) -> Swift.Void)?
  @objc public subscript(key: Swift.String) -> Any? {
    @objc get
    @objc set
  }
  @objc override dynamic public init()
  @objc public init(_ obj: DCloudUTSFoundation.UTSJSONObject)
  public typealias Element = Swift.String
  public typealias Iterator = DCloudUTSFoundation.DCUniIterator
  @objc deinit
}
public func getResourcePath(_ filePath: Swift.String) -> Swift.String
public func checkExistence(_ filePath: Swift.String) -> [Swift.Bool]
public func isFile(_ filePath: Swift.String) -> Swift.Bool
public func isExists(_ filePath: Swift.String) -> Swift.Bool
public func isDirectory(_ filePath: Swift.String) -> Swift.Bool
public func getMimeType(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
public func fileToBase64(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
public func fileToDataURL(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
public func getFileExtensionFromDataURL(_ dataURL: Swift.String) -> Swift.String
public func dataURLToFile(_ dataURL: Swift.String, _ filename: unimoduleLimeFileUtils.NullableString = nil) -> unimoduleLimeFileUtils.NullableString
public func processFile(_ options: unimoduleLimeFileUtils.ProcessFileOptions)
@_inheritsConvenienceInitializers @objc(UTSSDKModulesLimeFileUtilsProcessFileOptionsJSONObject) @objcMembers public class ProcessFileOptionsJSONObject : ObjectiveC.NSObject {
  @objc public var type: unimoduleLimeFileUtils.ConversionType!
  @objc public var path: Swift.String!
  @objc public var filename: Swift.String?
  @objc public var success: DCloudUTSFoundation.UTSCallback?
  @objc public var fail: DCloudUTSFoundation.UTSCallback?
  @objc public var complete: DCloudUTSFoundation.UTSCallback?
  @objc override dynamic public init()
  @objc deinit
}
public func getResourcePathByJs(_ filePath: Swift.String) -> Swift.String
public func checkExistenceByJs(_ filePath: Swift.String) -> [Swift.Bool]
public func isFileByJs(_ filePath: Swift.String) -> Swift.Bool
public func isExistsByJs(_ filePath: Swift.String) -> Swift.Bool
public func isDirectoryByJs(_ filePath: Swift.String) -> Swift.Bool
public func fileToBase64ByJs(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
public func fileToDataURLByJs(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
public func dataURLToFileByJs(_ dataURL: Swift.String, _ filename: unimoduleLimeFileUtils.NullableString = nil) -> unimoduleLimeFileUtils.NullableString
public func processFileByJs(_ options: unimoduleLimeFileUtils.ProcessFileOptionsJSONObject)
@_inheritsConvenienceInitializers @objc(UTSSDKModulesLimeFileUtilsIndexSwift) @objcMembers public class UTSSDKModulesLimeFileUtilsIndexSwift : ObjectiveC.NSObject {
  @objc public static func s_getResourcePathByJs(_ filePath: Swift.String) -> Swift.String
  @objc public static func s_checkExistenceByJs(_ filePath: Swift.String) -> [Swift.Bool]
  @objc public static func s_isFileByJs(_ filePath: Swift.String) -> Swift.Bool
  @objc public static func s_isExistsByJs(_ filePath: Swift.String) -> Swift.Bool
  @objc public static func s_isDirectoryByJs(_ filePath: Swift.String) -> Swift.Bool
  @objc public static func s_fileToBase64ByJs(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
  @objc public static func s_fileToDataURLByJs(_ filePath: Swift.String) -> unimoduleLimeFileUtils.NullableString
  @objc public static func s_dataURLToFileByJs(_ dataURL: Swift.String, _ filename: unimoduleLimeFileUtils.NullableString = nil) -> unimoduleLimeFileUtils.NullableString
  @objc public static func s_processFileByJs(_ options: unimoduleLimeFileUtils.ProcessFileOptionsJSONObject)
  @objc override dynamic public init()
  @objc deinit
}
