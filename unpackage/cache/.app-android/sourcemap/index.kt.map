{"version":3,"sources":["uni_modules/lime-color/common/util.uts","../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-console/src/runtime/app/socket.ts","App.uvue","uni_modules/lime-daily-punch/components/l-daily-punch/calender.uts","uni_modules/lime-icon/components/l-icon/icons.uts","uni_modules/lime-progress/components/l-progress/progress.uts","uni_modules/lime-shared/unitConvert/index.uts","uni_modules/lime-shared/unitConvert/index.ts","../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-console/src/runtime/app/index.ts","uni_modules/lime-clipboard/utssdk/interface.uts","static/dot1.png.uts","static/dot1.png.ts","uni_modules/lime-date-strip/components/l-date-strip/type.uts","uni_modules/lime-date-strip/components/l-date-strip/type.ts","uni_modules/lime-date-strip/components/l-date-strip-item/type.uts","uni_modules/lime-date-strip/components/l-date-strip-item/type.ts","uni_modules/lime-date-strip/components/l-date-strip/utils.uts","uni_modules/lime-shared/isString/index.uts","uni_modules/lime-shared/isString/index.ts","uni_modules/lime-shared/isNumber/index.uts","uni_modules/lime-shared/isNumber/index.ts","uni_modules/lime-shared/isNumeric/index.uts","uni_modules/lime-shared/isNumeric/index.ts","uni_modules/lime-shared/isDef/index.uts","uni_modules/lime-shared/isDef/index.ts","uni_modules/lime-shared/addUnit/index.uts","uni_modules/lime-shared/addUnit/index.ts","uni_modules/lime-icon/components/l-icon/types.uts","uni_modules/lime-icon/components/l-icon/types.ts","uni_modules/lime-daily-punch/index.uts","uni_modules/lime-daily-punch/index.ts","uni_modules/firstui-unix/components/fui-icon/fui-icon.uts","static/notice.png.uts","static/notice.png.ts","static/vedio.png.uts","static/vedio.png.ts","static/people.png.uts","static/people.png.ts","static/mobile.png.uts","static/mobile.png.ts","uni_modules/lime-dayuts/common/constant.uts","uni_modules/lime-dayuts/common/constant.ts","uni_modules/lime-dayuts/utssdk/interface.uts","uni_modules/lime-dayuts/common/locale/en/index.uts","uni_modules/lime-dayuts/common/locale/en/index.ts","uni_modules/lime-dayuts/common/locale/zh-cn/index.uts","uni_modules/lime-dayuts/common/locale/zh-cn/index.ts","uni_modules/lime-dayuts/common/use.uts","uni_modules/lime-dayuts/common/use.ts","uni_modules/lime-dayuts/common/index.uts","uni_modules/lime-dayuts/common/index.ts","uni_modules/lime-dayuts/common/utils.uts","uni_modules/lime-dayuts/common/utils.ts","pages/message/message.uvue?type=page","pages/message/message.uvue","static/mine/right.png.uts","static/mine/right.png.ts","static/error_big.png.uts","static/error_big.png.ts","uni_modules/lime-progress/components/l-progress/types.uts","uni_modules/lime-progress/components/l-progress/types.ts","uni_modules/lime-shared/animation/bezier.uts","uni_modules/lime-shared/animation/bezier.ts","uni_modules/lime-shared/animation/ease.uts","uni_modules/lime-shared/animation/ease.ts","uni_modules/lime-shared/raf/uvue.uts","uni_modules/lime-shared/animation/uvue.uts","uni_modules/lime-shared/animation/useTransition.uts","uni_modules/lime-shared/animation/useTransition.ts","pages/mine/rechargeDataTraffic/rechargeDataTraffic.uvue?type=page","pages/mine/rechargeDataTraffic/rechargeDataTraffic.uvue","uni_modules/lime-loading/components/l-loading/type.uts","uni_modules/lime-loading/components/l-loading/type.ts","uni_modules/lime-color/utssdk/interface.uts","uni_modules/lime-color/common/conversion.uts","uni_modules/lime-color/common/css-color-names.uts","uni_modules/lime-color/common/format-input.uts","uni_modules/lime-color/common/color.uts","uni_modules/lime-loading/index.uts","uni_modules/lime-button/components/l-button/type.uts","uni_modules/lime-button/components/l-button/type.ts","uni_modules/lime-search/components/l-search/type.uts","uni_modules/lime-search/components/l-search/type.ts","uni_modules/lime-shared/characterLimit/index.uts","uni_modules/lime-shared/characterLimit/index.ts","uni_modules/lime-tabs/components/l-tab-panel/type.uts","uni_modules/lime-tabs/components/l-tab-panel/type.ts","uni_modules/lime-tabs/components/l-tabs/type.uts","uni_modules/lime-tabs/components/l-tabs/type.ts","uni_modules/lime-tabs/components/l-tab-panel/l-tab-panel.uvue","uni_modules/lime-shared/toBoolean/index.uts","uni_modules/lime-shared/toBoolean/index.ts","uni_modules/lime-badge/components/l-badge/utils.uts","uni_modules/lime-badge/components/l-badge/utils.ts","uni_modules/lime-badge/components/l-badge/type.uts","uni_modules/lime-badge/components/l-badge/type.ts","uni_modules/lime-tabs/components/l-tabs/utils.uts","uni_modules/lime-tabs/components/l-tabs/utils.ts","uni_modules/lime-shared/clamp/index.uts","uni_modules/lime-shared/clamp/index.ts","uni_modules/lime-tabs/components/l-tabs/touch.uts","uni_modules/lime-tabs/components/l-tabs/touch.ts","uni_modules/lime-tabs/components/l-tabs/l-tabs.uvue","uni_modules/firstui-unix/components/fui-types/index.uts","static/login_banner.png.uts","static/login_banner.png.ts","pages/message/messageSystem/messageSystem.uvue?type=page","pages/message/messageSystem/messageSystem.uvue","pages/mine/myOrders/myOrders.uvue?type=page","pages/mine/myOrders/myOrders.uvue","uni_modules/lime-textarea/components/l-textarea/type.uts","uni_modules/lime-textarea/components/l-textarea/type.ts","uni_modules/lime-style/hairline.uts","uni_modules/lime-picker/components/l-picker/type.uts","uni_modules/lime-picker/components/l-picker/type.ts","uni_modules/lime-picker/components/l-picker/utils.uts","uni_modules/lime-picker/components/l-picker-item/type.uts","uni_modules/lime-picker/components/l-picker-item/type.ts","uni_modules/lime-picker/components/l-picker/l-picker.uvue","uni_modules/lime-picker/components/l-picker-item/l-picker-item.uvue","uni_modules/lime-upload/index.uts","uni_modules/lime-upload/index.ts","main.uts"],"sourcesContent":["// import {isNumber} from '@/uni_modules/lime-shared/isNumber'\r\n// import {isString} from '@/uni_modules/lime-shared/isString'\r\n// import {isNumeric} from '@/uni_modules/lime-shared/isNumeric'\r\n\r\nimport BigDecimal from 'java.math.BigDecimal'\r\n\r\nexport function isNumber(value: any|null):boolean{\r\n\r\n\treturn ['Byte', 'UByte','Short','UShort','Int','UInt','Long','ULong','Float','Double','number'].includes(typeof value)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport function isString(value: any|null):boolean{\r\n\treturn typeof value == 'string';\r\n}\r\nexport function isNumeric(value: any|null):boolean{\r\n\tif(isNumber(value)) {\r\n\t\treturn true\r\n\t} else if(isString(value)) {\r\n\t\t// const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\r\n\t\tconst regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\")\r\n\t\treturn  regex.test(value as string) //regex.matches(value as string) \r\n\t}\r\n\treturn false\r\n}\r\n\r\n\r\nexport function toBoolean(value: any|null):boolean{\r\n\r\n\t// 根据输入值的类型，返回相应的布尔值\r\n\tif(isNumber(value)){\r\n\t\treturn (value as number) != 0;\r\n\t}\r\n\tif(isString(value)){\r\n\t\treturn `${value}`.length > 0;\r\n\t}\r\n\tif(typeof value == 'boolean'){\r\n\t\treturn value as boolean;\r\n\t}\r\n\t\r\n\treturn value != null\r\n\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Check to see if string passed in is a percentage\r\n * 检查传入的字符串是否为百分比\r\n * @hidden\r\n */\r\nexport function isPercentage(n : any) : boolean {\r\n\treturn isString(n) && (n as string).indexOf('%') != -1;\r\n}\r\n\r\n/**\r\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n * 需要处理 1.0 为 100%，因为一旦它是数字，它与 1 没有区别\r\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n * @hidden\r\n */\r\nexport function isOnePointZero(n : any) : boolean {\r\n\treturn isString(n) && (n as string).indexOf('.') != -1 && parseFloat(n as string) == 1;\r\n}\r\n\r\n\r\n/**\r\n * Take input from [0, n] and return it as [0, 1]\r\n * 将输入值从 [0, n] 转换为 [0, 1]\r\n * @hidden\r\n */\r\nfunction bound01(n: string, max: number): number \r\nfunction bound01(n: number, max: number): number \r\n\r\n\r\n\r\nfunction bound01(n : any, max : number) : number {\r\n\tif(!(isNumber(n) || isString(n))){\r\n\t\treturn 1\r\n\t}\r\n\tif (isOnePointZero(n)) {\r\n\t\tn = '100%';\r\n\t}\r\n\r\n\tconst isPercent = isPercentage(n);\r\n\tn = (isNumber(n) ? n : parseFloat(n as string)) as number\r\n\tn = max == 360 ? n : Math.min(max, Math.max(0, n));\r\n\r\n\t// Automatically convert percentage into number\r\n\t// 自动将百分比转换为数字\r\n\tif (isPercent) {\r\n\t\tn = parseInt(`${Math.min(n, 100) * max}`, 10) / 100;\r\n\t}\r\n\r\n\t// Handle floating point rounding errors\r\n\t//  处理浮点数舍入误差\r\n\t\r\n\tif ( Math.abs(n - max) < 0.000001) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t// Convert into [0, 1] range if it isn't already\r\n\t// 如果它还不是，将其转换为 [0, 1] 范围\r\n\tif (max == 360) {\r\n\t\t// If n is a hue given in degrees,\r\n\t\t// wrap around out-of-range values into [0, 360] range\r\n\t\t// then convert into [0, 1].\r\n\t\t// 如果 n 是以度为单位的色调，\r\n\t\t// 将超出范围的值环绕到 [0, 360] 范围内\r\n\t\t// 然后将其转换为 [0, 1]。\r\n\t\tn = (n < 0 ? (n % max) + max : n % max) / max // parseFloat(`${max}`);\r\n\t} else {\r\n\t\t// If n not a hue given in degrees\r\n\t\t// Convert into [0, 1] range if it isn't already.\r\n\t\t// 如果 n 不是以度为单位的色调\r\n\t\t// 如果它还不是，将其转换为 [0, 1] 范围。\r\n\t\tn = (n % max) / max //parseFloat(`${max}`);\r\n\t}\r\n\r\n\treturn n;\r\n}\r\nexport {bound01}\r\n\r\n\r\n/**\r\n * Force a number between 0 and 1\r\n * 在 0 和 1 之间强制一个数字\r\n * @hidden\r\n */\r\nexport function clamp01(val : number) : number {\r\n\treturn Math.min(1, Math.max(0, val));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Return a valid alpha value [0,1] with all invalid values being set to 1\r\n * 返回一个有效的 alpha 值 [0,1]，将所有无效值设置为 1\r\n * @hidden\r\n */\r\nfunction boundAlpha(a: number):number\r\nfunction boundAlpha(a: string):number\r\n\r\n\r\n\r\nfunction boundAlpha(a: any|null) : number {\r\n\tlet n = a == null ? 1 : (isString(a) ? parseFloat(a as string) : a as number)\r\n\r\n\tif (isNaN(n) || n < 0 || n > 1) {\r\n\t\tn = 1;\r\n\t}\r\n\r\n\treturn n;\r\n}\r\nexport {\r\n\tboundAlpha\r\n}\r\n/**\r\n * Replace a decimal with it's percentage value\r\n * 用百分比值替换小数\r\n * number | string\r\n * @hidden\r\n */\r\nfunction convertToPercentage(n:number):number\r\nfunction convertToPercentage(n:string):string\r\n\r\n\r\n\r\nfunction convertToPercentage(n:any): any{\r\n\r\n\tn = isNumeric(n) ? parseFloat(typeof n == 'string' ? n as string : BigDecimal.valueOf((n as number).toDouble()).toPlainString()) : n// as number\r\n\r\n\r\n\r\n\r\n\tif(isNumber(n) &&  (n as number) <= 1){\r\n\t\treturn `${n * 100}%`.replace('.0%','%');\r\n\t}\r\n\treturn n;\r\n}\r\n\r\nexport {convertToPercentage}\r\n\r\n/**\r\n * Force a hex value to have 2 characters\r\n * 强制使十六进制值具有 2 个字符\r\n * @hidden\r\n */\r\nexport function pad2(c : string) : string {\r\n\t//c.padStart(2, '0');//\r\n\treturn c.length == 1 ? '0' + c : `${c}`;\r\n}","/// <reference types=\"@dcloudio/uni-app-x/types/uni/global\" />\n// 之所以又写了一份，是因为外层的socket，connectSocket的时候必须传入multiple:true\n// 但是android又不能传入，目前代码里又不能写条件编译之类的。\nexport function initRuntimeSocket(\n  hosts: string,\n  port: string,\n  id: string\n): Promise<SocketTask | null> {\n  if (hosts == '' || port == '' || id == '') return Promise.resolve(null)\n  return hosts\n    .split(',')\n    .reduce<Promise<SocketTask | null>>(\n      (\n        promise: Promise<SocketTask | null>,\n        host: string\n      ): Promise<SocketTask | null> => {\n        return promise.then((socket): Promise<SocketTask | null> => {\n          if (socket != null) return Promise.resolve(socket)\n          return tryConnectSocket(host, port, id)\n        })\n      },\n      Promise.resolve(null)\n    )\n}\n\nconst SOCKET_TIMEOUT = 500\nfunction tryConnectSocket(\n  host: string,\n  port: string,\n  id: string\n): Promise<SocketTask | null> {\n  return new Promise((resolve, reject) => {\n    const socket = uni.connectSocket({\n      url: `ws://${host}:${port}/${id}`,\n      fail() {\n        resolve(null)\n      },\n    })\n    const timer = setTimeout(() => {\n      // @ts-expect-error\n      socket.close({\n        code: 1006,\n        reason: 'connect timeout',\n      } as CloseSocketOptions)\n      resolve(null)\n    }, SOCKET_TIMEOUT)\n\n    socket.onOpen((e) => {\n      clearTimeout(timer)\n      resolve(socket)\n    })\n    socket.onClose((e) => {\n      clearTimeout(timer)\n      resolve(null)\n    })\n    socket.onError((e) => {\n      clearTimeout(timer)\n      resolve(null)\n    })\n  })\n}\n","<script lang=\"uts\">\r\n\tlet firstBackTime = 0\r\n\texport default {\r\n\t\tonLaunch: function () {\r\n\t\t\tconsole.log('App Launch')\r\n\t\t},\r\n\t\tonShow: function () {\r\n\t\t\tconsole.log('App Show')\r\n\t\t},\r\n\t\tonHide: function () {\r\n\t\t\tconsole.log('App Hide')\r\n\t\t},\r\n\r\n\t\tonLastPageBackPress: function () {\r\n\t\t\tconsole.log('App LastPageBackPress')\r\n\t\t\tif (firstBackTime == 0) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '再按一次退出应用',\r\n\t\t\t\t\tposition: 'bottom',\r\n\t\t\t\t})\r\n\t\t\t\tfirstBackTime = Date.now()\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfirstBackTime = 0\r\n\t\t\t\t}, 2000)\r\n\t\t\t} else if (Date.now() - firstBackTime < 2000) {\r\n\t\t\t\tfirstBackTime = Date.now()\r\n\t\t\t\tuni.exit()\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonExit: function () {\r\n\t\t\tconsole.log('App Exit')\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t/*每个页面公共css */\r\n\t.uni-row {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.uni-column {\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>","import { LDay, LYearMonth, LGridSize, LMonthData, LOptions } from '../../index'\r\n// import { LDay } from '../../utssdk/interface';\r\n\r\n\r\nexport class ArrowIcon {\r\n\tx : number = 0\r\n\ty : number = 0\r\n\tsize : number = 0\r\n\ttype : string = ''\r\n\tcolor : string = ''\r\n\tconstructor(x : number, y : number, size : number, type : string, color : string) {\r\n\t\tthis.x = x\r\n\t\tthis.y = y\r\n\t\tthis.size = size\r\n\t\tthis.type = type\r\n\t\tthis.color = color\r\n\t}\r\n\tdraw(ctx : CanvasRenderingContext2D) {\r\n\t\tconst { x, y, size, color, type } = this\r\n\t\t// 设置绘图的填充颜色\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.beginPath();\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.lineWidth = 2\r\n\t\t// 根据箭头类型绘制不同的形状\r\n\t\tif (type === 'left') {\r\n\t\t\tctx.moveTo(x + size * 0.6042, y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * 0.3542, y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * 0.6042, y + size * 0.75);\r\n\r\n\t\t} else if (type === 'right') {\r\n\t\t\tctx.moveTo(x + size * (1 - 0.6042), y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.3542), y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.6042), y + size * 0.75);\r\n\t\t}\r\n\r\n\t\tctx.stroke()\r\n\t}\r\n\tisCoordinateInside(x : number, y : number) : boolean {\r\n\t\treturn x >= this.x && x <= this.x + this.size && y >= this.y && y <= this.y + this.size;\r\n\t}\r\n}\r\n\r\nexport class Day implements LDay {\r\n\tday : number = 0;\r\n\tmonth : number = 0;\r\n\tyear : number = 0;\r\n\tfullDay : string = '00';\r\n\tfullMonth : string = '00';\r\n\tfullDate : string = '';\r\n\tisBeforeToday : boolean = false;\r\n\tisToday : boolean = false\r\n\t// isCheckedIn: boolean = false;\r\n\tisCurrentMonth : boolean = false;\r\n\tprivate x : number = 0;\r\n\tprivate y : number = 0;\r\n\tprivate calendar : Calendar\r\n\twidth : number = 0;\r\n\theight : number = 0;\r\n\toriginalMonth : number = 0;\r\n\ttype : string = 'current'\r\n\tfontSize : number = 20\r\n\ttimestamp : number = 0\r\n\tconstructor(day : number, month : number, year : number, isCurrentMonth : boolean, isToday : boolean, isBeforeToday : boolean, calendar : Calendar) {\r\n\t\tthis.day = day;\r\n\t\tthis.month = month\r\n\t\tthis.year = year;\r\n\t\tthis.originalMonth = month - 1;\r\n\t\tthis.fullMonth = this.formatMonth(month)\r\n\t\tthis.fullDay = this.formatDay(day)\r\n\t\tthis.fullDate = `${year}-${this.fullMonth}-${this.fullDay}`;\r\n\t\tthis.isCurrentMonth = isCurrentMonth;\r\n\t\tthis.isBeforeToday = isBeforeToday;\r\n\t\tthis.isToday = isToday\r\n\t\tthis.calendar = calendar\r\n\t\tthis.timestamp = new Date(year, month - 1, day).getTime()\r\n\t}\r\n\r\n\tprivate formatDay(day : number) : string {\r\n\t\treturn `${day}`.padStart(2, '0');\r\n\t}\r\n\r\n\tprivate formatMonth(month : number) : string {\r\n\t\treturn `${month}`.padStart(2, '0');\r\n\t}\r\n\t\r\n\tisCoordinateInside(x : number, y : number) : boolean {\r\n\t\treturn x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\r\n\t}\r\n\r\n\tsetPosition(x : number, y : number) : void {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tsetDimensions(width : number, height : number) : void {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\tprivate get opt(): LOptions{\r\n\t\treturn this.calendar.opt\r\n\t}\r\n\tget selectDate() : LDay | null {\r\n\t\treturn this.calendar.selectDate\r\n\t}\r\n\tset selectDate(_val: LDay| null) {\r\n\t\t\r\n\t}\r\n\tget canSupplement() : boolean {\r\n\t\t// 在今日之前 并且 未签到 并且 支持补签\r\n\t\treturn this.opt.canSupplement! && this.isBeforeToday && !this.isCheckedIn\r\n\t}\r\n\tset canSupplement(_v: boolean) {\r\n\t\t\r\n\t}\r\n\tget isCheckedIn() : boolean {\r\n\t\treturn this.calendar.signedDates.includes(this.timestamp)\r\n\t\t// return true\r\n\t\t// if (this.calendar.opt.signedDates == null) return false\r\n\t\t// return this.calendar.opt.signedDates.some((dateString : string) : boolean => {\r\n\t\t// \tconst [year, month, day] = dateString.split('-').map((v : string) : number => parseInt(v));\r\n\t\t// \treturn year == this.year && month == this.month && day == this.day\r\n\t\t// })\r\n\t}\r\n\tset isCheckedIn(_v:boolean) {\r\n\t\t\r\n\t}\r\n\tprivate drawCircle(ctx : CanvasRenderingContext2D, x : number, y : number, radius : number, color : string, border : boolean = false) {\r\n\t\tctx.beginPath();\r\n\t\tif (border) {\r\n\t\t\tctx.lineWidth = 1\r\n\t\t\tctx.strokeStyle = 'white'\r\n\t\t}\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\tctx.fill();\r\n\t\tif (border) {\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\t}\r\n\tdraw(ctx : CanvasRenderingContext2D) {\r\n\t\tconst size = Math.min(this.width, this.height) * 0.9\r\n\t\tconst centerX = this.x + this.width / 2\r\n\t\tconst centerY = this.y + this.height / 2\r\n\t\tconst color = this.opt.color!\r\n\t\tconst unsignedColor = this.opt.unsignedColor!\r\n\t\tconst selectedDayBgColor = this.opt.selectedDayBgColor!\r\n\t\tconst textColor = this.opt.textColor!\r\n\t\tconst disabledColor = this.opt.disabledColor!\r\n\t\tconst dayFontSize = this.opt.dayFontSize!\r\n\t\t\r\n\t\t\r\n\t\tctx.textAlign = 'center';\r\n\t\tctx.font = this.isToday ? `${dayFontSize - 2}px Arial` : `${dayFontSize}px Arial`;\r\n\t\tctx.textBaseline = 'middle';\r\n\r\n\t\t// 判断是否是当前选中日期\r\n\t\tconst isSelectedDate = this.selectDate == null || this.selectDate == this;\r\n\r\n\t\t// 设置字体颜色\r\n\t\tlet txtColor = this.type == 'current' ? textColor : disabledColor;\r\n\t\tif (this.isToday && !isSelectedDate) {\r\n\t\t\ttxtColor = color;\r\n\t\t}\r\n\r\n\t\t// 绘制选中效果\r\n\t\tif (this.selectDate != null && this.selectDate == this) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = selectedDayBgColor;\r\n\t\t\tctx.arc(centerX, centerY, size / 2, 0, Math.PI * 2);\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t\t\r\n\t\t// 绘制今日效果\r\n\t\tif (this.isToday && isSelectedDate) {\r\n\t\t\tthis.drawCircle(ctx, centerX, centerY, size / 2, color);\r\n\t\t\ttxtColor = 'white';\r\n\t\t\t\r\n\t\t}\r\n\t\t// 绘制已签到或可补签效果 小点\r\n\t\tif (this.type == 'current' && (this.isCheckedIn || this.canSupplement)) {\r\n\t\t\tthis.drawCircle(ctx, centerX, centerY + this.fontSize * 0.9, 4, this.isCheckedIn ? (this.isToday && isSelectedDate ? 'white' : color) : unsignedColor);\r\n\t\t}\r\n\r\n\t\t// 绘制文字\r\n\t\tctx.fillStyle = txtColor;\r\n\t\tctx.fillText(this.isToday ? '今天' : this.fullDay, centerX, centerY);\r\n\r\n\t}\r\n}\r\n\r\n\r\nexport class Calendar {\r\n\tprivate year : number = 0\r\n\tprivate month : number = 0\r\n\tprivate el : UniCanvasElement | null = null\r\n\tprivate ctx : CanvasRenderingContext2D | null = null\r\n\tprivate init : boolean = false\r\n\tprivate today : number = 0\r\n\tprivate currentMonth : number = 0\r\n\tprivate currentYear : number = 0\r\n\t// private headerHeight : number = 50\r\n\t// private weekHeight : number = 30\r\n\tprivate monthDateCache : Map<string, LMonthData>\r\n\tprivate week : string[] = []\r\n\tselectDate : LDay | null = null\r\n\tprivate containerHeight : number = 0\r\n\tprivate containerWidth : number = 0\r\n\tprivate arrowIcons : ArrowIcon[] = []\r\n\topt : LOptions = {\r\n\t\tcanSupplement: false,\r\n\t\tisFullCalendar: true,\r\n\t\tyearMonth: '',\r\n\t\tsignedDates: [],\r\n\t\tweek: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n\t\tweekStartsOn: 0,\r\n\t\tweekColor: '#BDC0C3',\r\n\t\tweekFontSize: 12,\r\n\t\tweekHeight: 40,\r\n\t\tselectedDayBgColor: 'rgba(0,0,0,0.06)',\r\n\t\tdayFontSize: 12,\r\n\t\ttextColor: '#1A1F24',\r\n\t\tdisabledColor: '#BDC0C3',\r\n\t\tmonthTitleHeight: 50,\r\n\t\tmonthTitleFontSize: 20,\r\n\t\tcolor: '#3B87F6',\r\n\t\tunsignedColor: '#F1A33A',\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tconst date = new Date()\r\n\t\tthis.currentYear = date.getFullYear()\r\n\t\tthis.currentMonth = date.getMonth() + 1\r\n\t\tthis.today = date.getDate()\r\n\t\tthis.monthDateCache = new Map<string, LMonthData>()\r\n\t\tthis.week = this.opt.week ?? []\r\n\t}\r\n\tget signedDates() : number[] {\r\n\t\tif (this.opt.signedDates == null) return []\r\n\t\tconst values : number[] = []\r\n\t\tthis.opt.signedDates!.forEach(item => {\r\n\t\t\tconst [year, month, day] = item.split('-').map((v : string) : number => parseInt(v));\r\n\t\t\tconst time = new Date(year, month - 1, day).getTime()\r\n\t\t\tif (!values.includes(time)) {\r\n\t\t\t\tvalues.push(time)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn values\r\n\t}\r\n\tget checkinDays() : number {\r\n\t\tif (this.signedDates.length == 0) return 0\r\n\t\tconst sortedDates = this.signedDates.sort((a, b):number => {\r\n\r\n\t\t\t// 这里的判断不能省略\r\n\t\t\tif (a.compareTo(b) == 0) {\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\r\n\t\t\treturn b - a\r\n\t\t})\r\n\t\treturn this.calculateContinuousCheckinDays(sortedDates);\r\n\t}\r\n\tprivate calculateContinuousCheckinDays(sortedDates : number[]) : number {\r\n\t\tconst dayInMillis = 24 * 60 * 60 * 1000;\r\n\t\tconst todayTime = new Date(this.currentYear, this.currentMonth - 1, this.today).getTime();\r\n\t\tlet count = 0;\r\n\t\tlet streak = 0;\r\n\r\n\t\tfor (let i = 0; i < sortedDates.length; i++) {\r\n\t\t\tif (i == 0) {\r\n\t\t\t\t// 大于1天，即隔了一天就已经中断签到 不再计算\r\n\t\t\t\tif (todayTime - sortedDates[i] > dayInMillis) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tif (sortedDates[i] == todayTime || todayTime - sortedDates[i] == dayInMillis) {\r\n\t\t\t\t\tstreak = 1;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (sortedDates[i - 1] - sortedDates[i] == dayInMillis) {\r\n\t\t\t\t\tstreak++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn streak;\r\n\t}\r\n\tsetCanvas(el : UniCanvasElement | null) {\r\n\t\tif (el == null) return\r\n\t\tthis.el = el\r\n\t\tthis.containerHeight = 6 * (this.opt.dayHeight ?? 0) + this.opt.weekHeight! + this.opt.monthTitleHeight! //6\r\n\t\tthis.containerWidth = this.el!.offsetWidth\r\n\t\tthis.el!.style.setProperty('height', this.containerHeight + 'px')\r\n\t\tthis.ctx = el.getContext('2d')!\r\n\t\tconst dpr = uni.getDeviceInfo().devicePixelRatio ?? 1;\r\n\t\t\r\n\t\tthis.el!.width = this.containerWidth * dpr;\r\n\t\tthis.el!.height = this.containerHeight * dpr;\r\n\t\tthis.ctx!.scale(dpr, dpr)\r\n\t\t// this.ctx = el.getDrawableContext()\r\n\t\t\r\n\t\t// this.ctx.fillStyle = 'red'\r\n\t\t// this.ctx.fillRect(0,0,100,100)\r\n\t}\r\n\tsetOptions(opt : LOptions) {\r\n\t\tlet datechange = false\r\n\t\tlet weekStartsOn = -1\r\n\t\tfor (let key in opt) {\r\n\t\t\tconst value = opt[key]\r\n\t\t\tif (key == 'yearMonth' && value != null && value != this.opt.yearMonth) {\r\n\t\t\t\tdatechange = true\r\n\t\t\t}\r\n\t\t\tif (key == 'weekStartsOn' && value != null && value != this.opt.weekStartsOn) {\r\n\t\t\t\tweekStartsOn = value as number\r\n\t\t\t}\r\n\t\t\tif (value != null) {\r\n\t\t\t\tthis.opt[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (weekStartsOn != -1) {\r\n\t\t\tconst normalWeek = [...this.opt.week!]\r\n\t\t\tconst sIndex = weekStartsOn < 0 ? 0 : weekStartsOn >= normalWeek.length ? normalWeek.length - 1 : weekStartsOn\r\n\t\t\tnormalWeek.unshift(...normalWeek.slice(-sIndex))\r\n\t\t\tnormalWeek.length = 6\r\n\t\t\tthis.week = normalWeek\r\n\t\t}\r\n\r\n\t\tif (this.opt.yearMonth != '' && !this.init || datechange) {\r\n\t\t\tconst arr = this.opt.yearMonth!.split('-')\r\n\t\t\tthis.year = parseInt(arr[0])\r\n\t\t\tthis.month = parseInt(arr[1])\r\n\t\t\tthis.init = true\r\n\t\t}\r\n\t}\r\n\r\n\t/** 获取当月共多少天，也就是获取月的最后一天 */\r\n\tgetMonthDayLength(year : number, month : number) : number {\r\n\t\treturn new Date(year, month, 0).getDate()\r\n\t}\r\n\t// 获取当月第一天星期几\r\n\tgetFirstDayOfWeek(year : number, month : number, day : number = 1) : number {\r\n\t\treturn new Date(year, month - 1, day).getDay();\r\n\t}\r\n\t// 获取加/减一个月的日期\r\n\tgetOperateMonthDate(nowYear : number, nowMonth:number, num : number) : LYearMonth {\r\n\t\tlet month = nowMonth + num\r\n\t\tlet year = nowYear;\r\n\t\tif (month > 12) {\r\n\t\t\tmonth = 1;\r\n\t\t\tyear++;\r\n\t\t} else if (month < 1) {\r\n\t\t\tmonth = 12;\r\n\t\t\tyear--;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tmonth,\r\n\t\t\tyear,\r\n\t\t} as LYearMonth\r\n\t}\r\n\r\n\tgenerateMonthDateCache(year : number = this.year, month : number = this.month) : LMonthData {\r\n\t\t// 检查是否可以切换到下个月\r\n\t\t// const canSwitchToNextMonth = this.currentYear > year || (this.currentYear == year && this.currentMonth > month + 1);\r\n\t\tconst key = `${year}-${month}`\r\n\t\tif (this.monthDateCache.has(key)) {\r\n\t\t\treturn this.monthDateCache.get(key)!\r\n\t\t}\r\n\t\tconst arr : LDay[] = []\r\n\t\tconst days = this.getMonthDayLength(year, month);\r\n\t\tconst firstday = this.getFirstDayOfWeek(year, month);\r\n\t\tconst beforeEmptyLength = (firstday + this.opt.weekStartsOn!) % 7 //this.getFirstDayOfWeek(year, month);\r\n\t\t// Math.ceil((days + beforeEmptyLength) / 7)\r\n\t\tconst afterEmptyLength = 5 * 7 - beforeEmptyLength - days //6 - this.getFirstDayOfWeek(year, month, days); //6\r\n\r\n\t\tconst last = this.getOperateMonthDate(year, month, -1);\r\n\t\tconst lastMonthEndDay = this.getMonthDayLength(last.year, last.month);\r\n\t\tconst next = this.getOperateMonthDate(year, month, 1);\r\n\t\tconst today = new Date(this.currentYear, this.currentMonth - 1, this.today).getTime();\r\n\t\tlet index = 0\r\n\t\tconst getGridSize = (i : number) : LGridSize => {\r\n\t\t\t// 确保this.el存在并且可以获取到边界矩形\r\n\t\t\tconst rect = this.el?.getBoundingClientRect();\r\n\r\n\r\n\t\t\tconst height = this.opt.dayHeight ?? 0;\r\n\r\n\t\t\tconst width = rect == null ? 0 : rect.width / 7;\r\n\r\n\t\t\t// 计算行和列\r\n\t\t\tconst row = Math.floor(i / 7);\r\n\t\t\tconst col = i % 7;\r\n\r\n\t\t\t// 计算网格单元的位置\r\n\t\t\tconst x = col * width;\r\n\t\t\tconst y = row * height + this.opt.monthTitleHeight! + this.opt.weekHeight!;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx, // 使用计算得到的x值\r\n\t\t\t\ty, // 使用计算得到的y值\r\n\t\t\t\twidth, // 使用计算得到的width值\r\n\t\t\t\theight // 使用正确的变量名height\r\n\t\t\t} as LGridSize;\r\n\t\t};\r\n\t\tfor (var i = 0; i < beforeEmptyLength; i++) {\r\n\t\t\tconst { x, y, width, height } = getGridSize(index);\r\n\t\t\tconst date = lastMonthEndDay - beforeEmptyLength + i + 1;\r\n\t\t\tconst time = new Date(last.year, last.month - 1, date).getTime()\r\n\t\t\tconst day = new Day(\r\n\t\t\t\tdate,\r\n\t\t\t\tlast.month,\r\n\t\t\t\tlast.year,\r\n\t\t\t\tlast.year == this.currentYear && last.month == this.currentMonth,\r\n\t\t\t\ttime == today,\r\n\t\t\t\ttime < today,\r\n\t\t\t\tthis\r\n\t\t\t)\r\n\t\t\tday.type = 'last'\r\n\t\t\tday.setPosition(x, y)\r\n\t\t\tday.setDimensions(width, height)\r\n\t\t\tarr.push(day)\r\n\t\t\tindex++\r\n\t\t}\r\n\t\tfor (var i = 0; i < days; i++) {\r\n\t\t\tconst { x, y, width, height } = getGridSize(index)\r\n\t\t\tconst date = i + 1;\r\n\t\t\tconst time = new Date(year, month - 1, date).getTime()\r\n\t\t\tconst day = new Day(\r\n\t\t\t\tdate,\r\n\t\t\t\tmonth,\r\n\t\t\t\tyear,\r\n\t\t\t\tyear == this.currentYear && month == this.currentMonth,\r\n\t\t\t\ttime == today,\r\n\t\t\t\ttime < today,\r\n\t\t\t\tthis)\r\n\t\t\tday.setPosition(x, y)\r\n\t\t\tday.setDimensions(width, height)\r\n\t\t\tarr.push(day)\r\n\t\t\tindex++\r\n\t\t}\r\n\t\tfor (var i = 0; i < afterEmptyLength; i++) {\r\n\t\t\tconst { x, y, width, height } = getGridSize(index)\r\n\t\t\tconst date = i + 1;\r\n\t\t\tconst time = new Date(next.year, next.month - 1, date).getTime()\r\n\t\t\tconst day = new Day(date,\r\n\t\t\t\tnext.month,\r\n\t\t\t\tnext.year,\r\n\t\t\t\tnext.year == this.currentYear && next.month == this.currentMonth,\r\n\t\t\t\ttime == today,\r\n\t\t\t\ttime < today,\r\n\t\t\t\tthis)\r\n\t\t\tday.type = 'next'\r\n\t\t\tday.setPosition(x, y)\r\n\t\t\tday.setDimensions(width, height)\r\n\t\t\tarr.push(day)\r\n\t\t\tindex++\r\n\t\t}\r\n\r\n\t\tconst monthData : LMonthData = {\r\n\t\t\tyear,\r\n\t\t\tmonth,\r\n\t\t\tdays: arr,\r\n\t\t}\r\n\t\tthis.monthDateCache.set(key, monthData)\r\n\t\treturn monthData\r\n\t}\r\n\tnext() {\r\n\t\tconst { year, month } = this.getOperateMonthDate(this.year, this.month, 1)\r\n\t\t// 检查是否可以切换到下个月\r\n\t\tconst canSwitchToNextMonth = this.currentYear > year || (this.currentYear == year && month - this.currentMonth <= 1);\r\n\t\tif (canSwitchToNextMonth) {\r\n\t\t\tthis.year = year\r\n\t\t\tthis.month = month\r\n\t\t\tthis.render(year, month)\r\n\t\t} else {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttitle: '往后最多查看一个月'\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tlast() {\r\n\t\tconst { year, month } = this.getOperateMonthDate(this.year, this.month, -1)\r\n\t\tthis.year = year\r\n\t\tthis.month = month\r\n\t\tthis.render(year, month)\r\n\t}\r\n\t/**\r\n\t* 前往某一天 \r\n\t* @param {string} date 格式 YYYY-MM-DD\r\n\t*/ \r\n\tgoToDate(date : string | null = null) {\r\n\t\tif (date == null) {\r\n\t\t\tthis.render(this.currentYear, this.currentMonth, this.today)\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst [year, month, day] = date.split('-').map((item) : number => parseInt(item))\r\n\t\t\t\tthis.render(year, month, day)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow new Error('参数有误')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate drawIcon(ctx : CanvasRenderingContext2D, size : number, x : number, y : number, arrow : string, color : string) {\r\n\t\t// 设置绘图的填充颜色\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.beginPath();\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.lineWidth = 2\r\n\t\t// 根据箭头类型绘制不同的形状\r\n\t\tif (arrow === 'left') {\r\n\t\t\tctx.moveTo(x + size * 0.6042, y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * 0.3542, y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * 0.6042, y + size * 0.75);\r\n\r\n\t\t} else if (arrow === 'right') {\r\n\t\t\tctx.moveTo(x + size * (1 - 0.6042), y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.3542), y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.6042), y + size * 0.75);\r\n\t\t}\r\n\r\n\t\tctx.stroke()\r\n\t}\r\n\tprivate drawHead(monthData : LMonthData) {\r\n\t\tconst width = this.containerWidth\r\n\t\tif (this.ctx == null) return\r\n\t\tconst ctx = this.ctx!\r\n\t\tconst height = this.opt.monthTitleHeight!\r\n\t\t// ctx.fillStyle = 'rgba(0,0,0,0.1)'\r\n\t\t// ctx.rect(0,0,width, this.opt.monthTitleHeight!)\r\n\t\t// ctx.fill()\r\n\t\tctx.textAlign = 'center'\r\n\t\tctx.fillStyle = this.opt.textColor!\r\n\t\tctx.font = ` ${this.opt.monthTitleFontSize!}px sans-serif`\r\n\t\tctx.textBaseline = 'middle'\r\n\t\tctx.fillText(`${monthData.year}年` + `${monthData.month}`.padStart(2, '0') + '月', width * 0.5, height * 0.55)\r\n\t\tif (this.arrowIcons.length == 0) {\r\n\t\t\tconst offsetTop = (height - 30) / 2\r\n\t\t\tthis.arrowIcons.push(new ArrowIcon(0, offsetTop, 30, 'left', `#A0A5AA`))\r\n\t\t\tthis.arrowIcons.push(new ArrowIcon(width - 30, offsetTop, 30, 'right', `#A0A5AA`))\r\n\t\t}\r\n\t\tthis.arrowIcons.forEach(icon => {\r\n\t\t\ticon.draw(ctx)\r\n\t\t})\r\n\t}\r\n\tprivate drawWeek() {\r\n\t\tif (this.ctx == null) return\r\n\t\tconst ctx = this.ctx!\r\n\t\tctx.textAlign = 'center'\r\n\t\tctx.font = `${this.opt.weekFontSize}px Arial`\r\n\t\tctx.textBaseline = 'middle'\r\n\t\tctx.fillStyle = this.opt.weekColor!\r\n\t\tthis.week.forEach((week, index) => {\r\n\t\t\tctx.fillText(`${week}`, this.containerWidth / 7 * (index + 0.5), this.opt.monthTitleHeight! + this.opt.weekHeight! * 0.5)\r\n\t\t})\r\n\t}\r\n\trender(year : number = this.year, month : number = this.month, day : number | null = null) {\r\n\t\tconst monthData = this.generateMonthDateCache(year, month);\r\n\t\tif (day != null) {\r\n\t\t\tthis.selectDate = monthData.days.find((item) : boolean => item.day == day)\r\n\t\t}\r\n\t\tif (this.el != null && this.ctx != null) {\r\n\t\t\tthis.ctx!.clearRect(0, 0, this.containerWidth, this.containerHeight)\r\n\t\t\tthis.drawHead(monthData)\r\n\t\t\tthis.drawWeek()\r\n\r\n\t\t\tmonthData.days.forEach(day => {\r\n\t\t\t\tday.draw(this.ctx!)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn\r\n\t}\r\n\ttouch(e : UniPointerEvent) {\r\n\t\tif (this.el == null) return\r\n\t\tconst rect = this.el!.getBoundingClientRect()\r\n\t\tconst x = e.clientX - rect.left\r\n\t\tconst y = e.clientY - rect.top\r\n\r\n\t\t// 判断 是点了左右\r\n\t\tconst icon = this.arrowIcons.find((icon) : boolean => icon.isCoordinateInside(x, y))\r\n\r\n\t\tif (icon != null) {\r\n\t\t\tif (icon.type == 'left') {\r\n\t\t\t\tthis.last()\r\n\t\t\t} else {\r\n\t\t\t\tthis.next()\r\n\t\t\t}\r\n\t\t\tthis.opt.panelChange?.({\r\n\t\t\t\tyear: this.year,\r\n\t\t\t\tmonth: this.month\r\n\t\t\t} as LYearMonth)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// 判断是点了日历\r\n\t\tconst month = this.monthDateCache.get(`${this.year}-${this.month}`)\r\n\t\tif (month == null) return\r\n\t\tconst day = month.days.find((day) : boolean => day.isCoordinateInside(x, y))\r\n\t\t// 只有点击当前月的\r\n\t\tif (day != null && day.type == 'current') {\r\n\t\t\t// if(this.selectDate != day) {\r\n\t\t\t\tthis.selectDate = day\r\n\t\t\t\tthis.render()\r\n\t\t\t// }\r\n\t\t\tthis.opt.select?.(day)\r\n\t\t}\r\n\t}\r\n}","\r\n\r\n\r\n\r\n\r\nexport const icons = ref<Map<string, any | null>>(new Map<string, any | null>())\r\n\r\nif (icons.value.size == 0) {\r\n\tuni.getFileSystemManager().readFile({\r\n\t\tfilePath: '/uni_modules/lime-icon/static/icons.json',\r\n\t\tencoding: 'utf-8',\r\n\t\tsuccess: (res) => {\r\n\t\t\tconst obj = JSON.parseObject(res.data as string)\r\n\t\t\tif (obj == null) return\r\n\t\t\ticons.value = obj.toMap();\r\n\t\t},\r\n\t\tfail(err) {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: `lime-icon:${err.errMsg}`\r\n\t\t\t})\r\n\t\t}\r\n\t} as ReadFileOptions);\r\n}\r\n","\r\nimport { measureText } from '@/uni_modules/lime-progress'\r\nimport { LProgressOptions } from './types';\r\n\r\n\r\nfunction calculateBorderRadius(width : number, height : number, radius : number[]) : number[] {\r\n\r\n\t// 验证半径是否为非负数\r\n\tif (radius.some((r) : boolean => r < 0)) {\r\n\t\tthrow new Error('Radius values must be non-negative numbers.');\r\n\t}\r\n\r\n\t// 将 radius 扩展到 4 位\r\n\twhile (radius.length < 4) {\r\n\t\tradius.push(radius[radius.length > 2 ? radius.length - 2 : 0]);\r\n\t}\r\n\r\n\r\n\tconst factors = [\r\n\t\twidth / (radius[0] + radius[1]),\r\n\t\theight / (radius[1] + radius[2]),\r\n\t\twidth / (radius[2] + radius[3]),\r\n\t\theight / (radius[0] + radius[3]),\r\n\t]\r\n\tconst minFactor = Math.min(...factors);\r\n\r\n\tif (minFactor <= 1) {\r\n\t\tfor (var i = 0; i < radius.length; i++) {\r\n\t\t\tradius[i] *= minFactor\r\n\t\t}\r\n\t}\r\n\treturn radius\r\n}\r\nfunction roundRect(ctx : DrawableContext, x : number, y : number, width : number, height : number, radius : number[]) {\r\n\tconst _radius = calculateBorderRadius(width, height, radius)\r\n\tconst x1 = x;\r\n\tconst y1 = y;\r\n\tconst x2 = width + x;\r\n\tconst y2 = height + y;\r\n\tconst leftTopCx = _radius[0] * (1 - 0.55191502449);\r\n\tconst rightTopCx = _radius[1] * (1 - 0.55191502449);\r\n\tconst rightBottomCx = _radius[2] * (1 - 0.55191502449);\r\n\tconst leftBottomCx = _radius[3] * (1 - 0.55191502449);\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(x1 + _radius[0], y1);\r\n\tctx.lineTo(x2 - _radius[1], y1);\r\n\tctx.bezierCurveTo(x2 - rightTopCx, y1, x2, y1 + rightTopCx, x2, y1 + _radius[1]);\r\n\tctx.lineTo(x2, y2 - _radius[2]);\r\n\tctx.bezierCurveTo(x2, y2 - rightBottomCx, x2 - rightBottomCx, y2, x2 - _radius[2], y2);\r\n\tctx.lineTo(x1 + _radius[3], y2);\r\n\tctx.bezierCurveTo(x1 + leftBottomCx, y2, x1, y2 - leftBottomCx, x1, y2 - _radius[3]);\r\n\tctx.lineTo(x1, y1 + _radius[0]);\r\n\tctx.bezierCurveTo(x1, y1 + leftTopCx, x1 + leftTopCx, y1, x1 + _radius[0], y1);\r\n\tctx.closePath()\r\n}\r\n\r\n/**\r\n * 绘制圆角矩形路径\r\n * @param ctx - 绘图上下文\r\n * @param x - 起始x坐标\r\n * @param y - 起始y坐标\r\n * @param width - 宽度\r\n * @param height - 高度\r\n * @param radius - 圆角半径\r\n */\r\n\r\nfunction drawRoundedRect(ctx : DrawableContext, x : number, y : number, width : number, height : number, radius : number = 0) {\r\n\troundRect(ctx, x - radius, y - radius, width + radius, height, [radius])\r\n}\r\nfunction drawArc(ctx : DrawableContext, x : number, y : number, radius : number, color : string) {\r\n\r\n\tctx.beginPath();\r\n\tctx.fillStyle = color\r\n\t// ctx.lineWidth = lineWidth\r\n\tctx.arc(center, center, radius, beginAngle, endAngle)\r\n\tctx.fill()\r\n}\r\n\r\nexport class Progress {\r\n\tprivate el : UniElement;\r\n\tprivate ctx : DrawableContext\r\n\tprivate textWidth = 0\r\n\tprivate containerWidth = 0\r\n\tprivate containerHeight = 0\r\n\tprivate currentPercentage = 0\r\n\tprivate isInitialized = false\r\n\tprivate resizeObserver : UniResizeObserver\r\n\tprivate opt : LProgressOptions = {\r\n\t\tshowInfo: false,\r\n\t\tstrokeColor: '#1677ff',\r\n\t\tstrokeWidth: 4,\r\n\t\ttrailColor: 'rgba(0, 0, 0, 0.06)',\r\n\t\tlinecap: 'round',\r\n\t\tfontSize: 12,\r\n\t\tinfoAlign: 'end',\r\n\t\tinfoType: 'outer',\r\n\t\tinfoColor: 'black'\r\n\t}\r\n\tconstructor(el : UniElement) {\r\n\t\tthis.el = el\r\n\t\tthis.ctx = el.getDrawableContext() as DrawableContext\r\n\r\n\t\tthis.resizeObserver = new UniResizeObserver((entries : Array<UniResizeObserverEntry>) => {\r\n\t\t\tconst height = Math.max(this.opt.showInfo! ? measureText(this.opt.fontSize!, '00%')[1] : 0, this.opt.strokeWidth!)\r\n\t\t\tthis.el.style.setProperty('height', height + 'px')\r\n\t\t\tconst rect = entries[0].target.getBoundingClientRect()\r\n\t\t\tthis.containerWidth = rect.width\r\n\t\t\tthis.containerHeight = height\r\n\t\t\tthis.isInitialized = false\r\n\t\t\tthis.render(this.currentPercentage)\r\n\t\t})\r\n\t\tthis.resizeObserver.observe(el)\r\n\t}\r\n\t/**\r\n\t  * 设置进度条选项\r\n\t  * @param options - 进度条配置项\r\n\t  */\r\n\tsetOption(options : LProgressOptions) {\r\n\t\tfor (let key in options) {\r\n\t\t\tif (options[key] != null && options[key] != 0) {\r\n\t\t\t\tthis.opt[key] = options[key]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.opt.showInfo!) {\r\n\t\t\tthis.textWidth = 0\r\n\t\t}\r\n\t\t// const height = Math.max(this.opt.showInfo! ? this.opt.fontSize! : 0, this.opt.strokeWidth!)\r\n\t\t// const height = Math.max(this.opt.showInfo! ? this.opt.fontSize! : 0, this.opt.strokeWidth!)\r\n\t\tconst height = Math.max(this.opt.showInfo! ? measureText(this.opt.fontSize!, '00%')[1] : 0, this.opt.strokeWidth!)\r\n\t\tthis.el.style.setProperty('height', height + 'px')\r\n\t\tconst rect = this.el.getBoundingClientRect()\r\n\t\tthis.containerWidth = rect.width\r\n\t\tthis.containerHeight = height\r\n\t}\r\n\t/**\r\n   * 渲染进度条\r\n   * @param percentage - 当前进度百分比\r\n   */\r\n\trender(percentage : number) {\r\n\t\tconst roundedPercentage = Math.floor(percentage);\r\n\t\tif (this.isInitialized && this.currentPercentage == roundedPercentage) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (this.currentPercentage != roundedPercentage) {\r\n\t\t\tthis.currentPercentage = roundedPercentage\r\n\t\t}\r\n\t\tthis.isInitialized = true\r\n\t\tthis.ctx.reset();\r\n\r\n\t\tconst percentageText = roundedPercentage.toString().replace(/\\.0$/, '') + '%'\r\n\t\tconst strokeWidth = this.opt.strokeWidth!\r\n\t\tconst isInfoOuter = this.opt.infoType == 'outer'\r\n\t\tconst isInfoStart = this.opt.infoAlign == 'start'\r\n\t\tconst showInfo = this.opt.showInfo!\r\n\r\n\t\tlet textWidth = 0;\r\n\t\tlet startX = 0;\r\n\t\tlet startY = this.containerHeight / 2;\r\n\t\tlet offset = 0;\r\n\t\tlet gap = 5;\r\n\t\tlet lineWidth = strokeWidth\r\n\t\tlet fontSize = this.opt.fontSize!\r\n\t\tlet textY = 0\r\n\r\n\t\tif (showInfo) {\r\n\t\t\tconst [width, height] = measureText(fontSize, percentageText);\r\n\t\t\ttextWidth = width\r\n\t\t\tconst textHeight = height\r\n\t\t\toffset = isInfoOuter ? width + gap : 0;\r\n\t\t\tlineWidth = !isInfoOuter ? Math.max(strokeWidth, textHeight) : strokeWidth;\r\n\t\t\tthis.ctx.fillStyle = this.opt.infoColor!;\r\n\t\t\tthis.ctx.font = `${fontSize}px`;\r\n\t\t\tstartX += (isInfoStart && isInfoOuter ? textWidth + gap : 0)\r\n\t\t\ttextY = this.containerHeight - (this.containerHeight - textHeight * 0.64) / 2  //(lineWidth - textHeight) / 2  //fontSize + (fontSize - textHeight) / 2\r\n\t\t}\r\n\t\tif (this.opt.linecap == 'round') {\r\n\t\t\tstartX += (lineWidth / 2)\r\n\t\t\toffset += (lineWidth / 2)\r\n\t\t}\r\n\r\n\t\tif (isInfoStart && showInfo && isInfoOuter) {\r\n\t\t\toffset = (lineWidth / 2)\r\n\t\t\tthis.ctx.fillText(percentageText, 0, textY)\r\n\t\t}\r\n\t\tif (!isInfoStart && showInfo && isInfoOuter) {\r\n\t\t\tthis.ctx.fillText(percentageText, this.containerWidth - textWidth, textY)\r\n\t\t}\r\n\r\n\t\tlet percent = roundedPercentage / 100 * (this.containerWidth - offset)\r\n\r\n\t\tthis.ctx.lineWidth = lineWidth\r\n\t\tthis.ctx.fillStyle = this.opt.trailColor!;\r\n\t\tdrawRoundedRect(this.ctx, startX, startY, this.containerWidth - offset, lineWidth, lineWidth / 2);\r\n\t\tthis.ctx.fill();\r\n\t\t// this.ctx.strokeStyle = this.opt.trailColor!\r\n\t\t// this.ctx.lineCap = this.opt.linecap!\r\n\t\t// this.ctx.beginPath()\r\n\t\t// this.ctx.moveTo(startX, startY)\r\n\t\t// this.ctx.lineTo(this.containerWidth - offset, startY)\r\n\t\t// this.ctx.stroke()\r\n\r\n\t\tif (!isInfoOuter && showInfo) {\r\n\t\t\t// this.ctx.strokeStyle = this.opt.strokeColor!\r\n\t\t\t// this.ctx.beginPath()\r\n\t\t\t// this.ctx.moveTo(startX, startY)\r\n\t\t\t// this.ctx.lineTo(Math.max(percent, textWidth + lineWidth / 2), startY)\r\n\t\t\t// this.ctx.stroke()\r\n\t\t\tthis.ctx.fillStyle = this.opt.strokeColor!;\r\n\t\t\tdrawRoundedRect(this.ctx, startX, startY, Math.max(percent, textWidth + lineWidth / 2), lineWidth, lineWidth / 2)\r\n\t\t\tthis.ctx.fill();\r\n\t\t} else if (this.currentPercentage != 0) {\r\n\t\t\tthis.ctx.fillStyle = this.opt.strokeColor!;\r\n\t\t\tdrawRoundedRect(this.ctx, startX, startY, Math.max(percent, startX), lineWidth, lineWidth / 2)\r\n\t\t\tthis.ctx.fill();\r\n\t\t\t// this.ctx.strokeStyle = this.opt.strokeColor!\r\n\t\t\t// this.ctx.beginPath()\r\n\t\t\t// this.ctx.moveTo(startX, startY)\r\n\t\t\t// this.ctx.lineTo(Math.max(percent, startX), startY)\r\n\t\t\t// this.ctx.stroke()\r\n\t\t}\r\n\r\n\t\tif (isInfoStart && this.opt.showInfo! && !isInfoOuter) {\r\n\t\t\tthis.ctx.fillStyle = this.opt.infoColor!;\r\n\t\t\tthis.ctx.fillText(percentageText, 5, textY)\r\n\t\t}\r\n\t\tif (!isInfoStart && this.opt.showInfo! && !isInfoOuter) {\r\n\t\t\tthis.ctx.fillStyle = this.opt.infoColor!;\r\n\t\t\tthis.ctx.textAlign = 'right'\r\n\t\t\tthis.ctx.fillText(percentageText, Math.max(textWidth + lineWidth / 2, percent), textY)\r\n\t\t}\r\n\r\n\t\tthis.ctx.update()\r\n\t}\r\n\tdisconnect() {\r\n\t\tthis.resizeObserver.disconnect()\r\n\t}\r\n}","// @ts-nocheck\nimport { isString } from '../isString';\nimport { isNumeric } from '../isNumeric';\n/**\n * 单位转换函数，将字符串数字或带有单位的字符串转换为数字\n * @param value 要转换的值，可以是字符串数字或带有单位的字符串\n * @returns 转换后的数字，如果无法转换则返回0\n */\nimport { isNumber } from '../isNumber';\nexport function unitConvert(value: any | null, base: number = 0): number {\n    if (isNumber(value)) {\n        return value as number;\n    }\n    // 如果是字符串数字\n    if (isNumeric(value)) {\n        return parseFloat(value as string);\n    }\n    // 如果有单位\n    if (isString(value)) {\n        const reg = /^-?([0-9]+)?([.]{1}[0-9]+){0,1}(em|rpx|px|%)$/g;\n        const results = reg.exec(value as string);\n        if (results == null) {\n            return 0;\n        }\n        const unit = results[3];\n        const _value = parseFloat(value);\n        if (unit == 'rpx') {\n            // const { windowWidth } = uni.getWindowInfo()\n            // return windowWidth / 750 * _value;\n            return uni.rpx2px(_value);\n        }\n        if (unit == 'px') {\n            return _value;\n        }\n        if (unit == '%') {\n            return _value / 100 * base;\n        }\n        // 如果是其他单位，可以继续添加对应的转换逻辑\n    }\n    return 0;\n}\n// 示例\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:77',unitConvert(\"123\")); // 输出: 123 (字符串数字转换为数字)\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:78',unitConvert(\"3.14em\")); // 输出: 0 (无法识别的单位)\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:79',unitConvert(\"20rpx\")); // 输出: 根据具体情况而定 (根据单位进行转换)\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:80',unitConvert(10)); // 输出: 10 (数字不需要转换)\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\nimport { isString } from '../isString'\r\nimport { isNumeric } from '../isNumeric'\r\n\r\n/**\r\n * 单位转换函数，将字符串数字或带有单位的字符串转换为数字\r\n * @param value 要转换的值，可以是字符串数字或带有单位的字符串\r\n * @returns 转换后的数字，如果无法转换则返回0\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { isNumber } from '../isNumber'\r\nexport function unitConvert(value : any | null, base: number = 0) : number {\r\n\tif (isNumber(value)) {\r\n\t\treturn value as number\r\n\t}\r\n\t// 如果是字符串数字\r\n\tif (isNumeric(value)) {\r\n\t\treturn parseFloat(value as string);\r\n\t}\r\n\t// 如果有单位\r\n\tif (isString(value)) {\r\n\t\tconst reg = /^-?([0-9]+)?([.]{1}[0-9]+){0,1}(em|rpx|px|%)$/g;\r\n\t\tconst results = reg.exec(value as string);\r\n\t\tif (results == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tconst unit = results[3];\r\n\t\tconst _value = parseFloat(value);\r\n\t\tif (unit == 'rpx') {\r\n\t\t\t// const { windowWidth } = uni.getWindowInfo()\r\n\t\t\t// return windowWidth / 750 * _value;\r\n\t\t\treturn uni.rpx2px(_value)\r\n\t\t}\r\n\t\tif (unit == 'px') {\r\n\t\t\treturn _value;\r\n\t\t}\r\n\t\tif(unit == '%') {\r\n\t\t\treturn _value / 100 * base\r\n\t\t}\r\n\t\t// 如果是其他单位，可以继续添加对应的转换逻辑\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n// 示例\r\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:77',unitConvert(\"123\")); // 输出: 123 (字符串数字转换为数字)\r\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:78',unitConvert(\"3.14em\")); // 输出: 0 (无法识别的单位)\r\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:79',unitConvert(\"20rpx\")); // 输出: 根据具体情况而定 (根据单位进行转换)\r\n// __f__('log','at uni_modules/lime-shared/unitConvert/index.ts:80',unitConvert(10)); // 输出: 10 (数字不需要转换)","import { initRuntimeSocket } from './socket'\n\nexport function initRuntimeSocketService(): Promise<boolean> {\n  const hosts: string = process.env.UNI_SOCKET_HOSTS\n  const port: string = process.env.UNI_SOCKET_PORT\n  const id: string = process.env.UNI_SOCKET_ID\n  if (hosts == '' || port == '' || id == '') return Promise.resolve(false)\n  let socketTask: SocketTask | null = null\n  __registerWebViewUniConsole(\n    (): string => {\n      return process.env.UNI_CONSOLE_WEBVIEW_EVAL_JS_CODE\n    },\n    (data: string) => {\n      socketTask?.send({\n        data,\n      } as SendSocketMessageOptions)\n    }\n  )\n  return Promise.resolve()\n    .then((): Promise<boolean> => {\n      return initRuntimeSocket(hosts, port, id).then((socket): boolean => {\n        if (socket == null) {\n          return false\n        }\n        socketTask = socket\n        return true\n      })\n    })\n    .catch((): boolean => {\n      return false\n    })\n}\n\ninitRuntimeSocketService()\n","\r\n/**\r\n * 错误码\r\n * 根据uni错误码规范要求，建议错误码以90开头，以下是错误码示例：\r\n * - 9010001 错误信息1\r\n * - 9010002 错误信息2\r\n */\r\nexport type LimeClipboardErrorCode = 9010001 | 9010002;\r\n/**\r\n * myApi 的错误回调参数\r\n */\r\nexport interface GeneralCallbackResult extends IUniError {\r\n\terrCode : LimeClipboardErrorCode\r\n};\r\n\r\n\r\n\r\n\r\n// export interface GeneralCallbackResult {\r\n// \t/** 错误信息 */\r\n// \terrMsg : string\r\n// }\r\n\r\n/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\nexport type SetClipboardDataCompleteCallback = (res : UniError) => void\r\n/** 接口调用失败的回调函数 */\r\nexport type SetClipboardDataFailCallback = (res : UniError) => void\r\n/** 接口调用成功的回调函数 */\r\nexport type SetClipboardDataSuccessCallback = (res : UniError) => void\r\n\r\n\r\nexport type SetClipboardDataOption = {\r\n\tshowToast?: boolean\r\n\t/** 剪贴板的内容 */\r\n\tdata : string\r\n\t/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\n\tcomplete ?: SetClipboardDataCompleteCallback\r\n\t/** 接口调用失败的回调函数 */\r\n\tfail ?: SetClipboardDataFailCallback\r\n\t/** 接口调用成功的回调函数 */\r\n\tsuccess ?: SetClipboardDataSuccessCallback\r\n}\r\n\r\n\r\nexport type GetClipboardDataSuccessCallbackOption = {\r\n\t/** 剪贴板的内容 */\r\n\tdata : string\r\n\terrMsg : string\r\n}\r\n/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\nexport type GetClipboardDataCompleteCallback = (res : UniError) => void\r\n/** 接口调用失败的回调函数 */\r\nexport type GetClipboardDataFailCallback = (res : UniError) => void\r\n/** 接口调用成功的回调函数 */\r\nexport type GetClipboardDataSuccessCallback = (\r\n\toption : GetClipboardDataSuccessCallbackOption\r\n) => void\r\n\r\nexport type GetClipboardDataOption = {\r\n\t/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\n\tcomplete ?: GetClipboardDataCompleteCallback\r\n\t/** 接口调用失败的回调函数 */\r\n\tfail ?: GetClipboardDataFailCallback\r\n\t/** 接口调用成功的回调函数 */\r\n\tsuccess ?: GetClipboardDataSuccessCallback\r\n}","export default \"/static/dot1.png\";\n//# sourceMappingURL=dot1.png.uts.map","export default \"/static/dot1.png\"","// @ts-nocheck\nexport type DateType = 'selected' | 'disabled' | '';\n/**\n * 定义一个表示周范围的类\n */\nexport type WeekRange = {\n    start: Date;\n    end: Date;\n};\nexport type DateStriPDay = {\n    date: Date;\n    key: string;\n    day: number;\n    year: number;\n    month: number;\n    text: string;\n    type: DateType;\n    prefix: string;\n    prefixStyle?: UTSJSONObject;\n    textStyle?: UTSJSONObject;\n    suffix?: string;\n    suffixStyle?: UTSJSONObject;\n};\nexport type WeekDateCollection = {\n    start: number;\n    end: number;\n    dates: DateStriPDay[];\n};\nexport type DateFormatType = (day: DateStriPDay) => DateStriPDay;\nexport interface DateStripProps {\n    /**\n     * 第一天从星期几开始，默认 0 = 周日\n     * @default 1\n     */\n    firstDayOfWeek: number;\n    format?: DateFormatType;\n    /**\n     * 最大可选的日期，不传则默认半年后\n     */\n    maxDate?: number;\n    /**\n     * 最小可选的日期，不传则默认今天\n     */\n    minDate?: number;\n    /**\n     * 当前选择的日期\n     */\n    value?: number;\n    defaultValue?: number;\n    modelValue?: number;\n    /**\n     * 日期行高\n     */\n    height?: string;\n    gridWidth?: string;\n    /**\n     * 主题色，对底部按钮和选中日期生效\n     */\n    color?: string;\n    activeBgColor?: string;\n    activeColor?: string;\n    bgColor?: string;\n    radius?: string;\n    switchMode: 'week' | 'none';\n    shape: 'square' | 'circle' | 'none';\n    /**\n     * 控制是否显示切换上一屏和下一屏的按钮。\n     * 该属性仅在按周切换时有效。\n     */\n    showNavigation?: boolean;\n    weekdays: string[];\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport type DateType = 'selected' |  'disabled' | '';\r\n\r\n/**\n * 定义一个表示周范围的类\n */\nexport type WeekRange = {\n  start: Date\n  end: Date\n}\r\n\r\nexport type DateStriPDay = {\r\n\tdate : Date;\r\n\tkey: string,\r\n\tday : number;\r\n\tyear : number;\r\n\tmonth : number;\r\n\ttext: string;\r\n\ttype : DateType;\r\n\tprefix : string;\r\n\tprefixStyle ?: UTSJSONObject;\r\n\ttextStyle?: UTSJSONObject;\r\n\tsuffix ?: string;\r\n\tsuffixStyle ?: UTSJSONObject;\r\n}\r\n\r\n\r\nexport type WeekDateCollection = {\r\n\tstart: number,\r\n\tend: number,\r\n\tdates : DateStriPDay[];\r\n}\r\n\r\nexport type DateFormatType = (day : DateStriPDay) => DateStriPDay;\r\nexport interface DateStripProps {\r\n\t/**\r\n\t * 第一天从星期几开始，默认 0 = 周日\r\n\t * @default 1\r\n\t */\r\n\tfirstDayOfWeek : number;\r\n\tformat ?: DateFormatType;\r\n\t/**\r\n\t * 最大可选的日期，不传则默认半年后\r\n\t */\r\n\tmaxDate ?: number;\r\n\t/**\r\n\t * 最小可选的日期，不传则默认今天\r\n\t */\r\n\tminDate ?: number;\r\n\t/**\r\n\t * 当前选择的日期\r\n\t */\r\n\tvalue ?: number;\r\n\tdefaultValue ?: number;\r\n\tmodelValue ?: number;\r\n\t/**\r\n\t * 日期行高\r\n\t */\r\n\theight ?: string;\r\n\tgridWidth ?: string;\r\n\t/**\r\n\t * 主题色，对底部按钮和选中日期生效\r\n\t */\r\n\tcolor ?: string;\r\n\tactiveBgColor ?: string;\r\n\tactiveColor ?: string;\r\n\tbgColor ?: string;\r\n\tradius ?: string;\r\n\tswitchMode: 'week' | 'none';\r\n\tshape: 'square' | 'circle' | 'none';\r\n\t/**\r\n\t * 控制是否显示切换上一屏和下一屏的按钮。\r\n\t * 该属性仅在按周切换时有效。\r\n\t */\r\n\tshowNavigation ?: boolean;\r\n\tweekdays : string[];\r\n}","// @ts-nocheck\nimport { DateStriPDay } from '../l-date-strip/type';\nexport interface DateStripItemProps {\n    dates: DateStriPDay[];\n    /**\n     * 主题色，对底部按钮和选中日期生效\n     */\n    color?: string;\n    activeBgColor?: string;\n    activeColor?: string;\n    bgColor?: string;\n    radius?: string;\n    gridWidth?: string;\n    switchMode: 'week' | 'none';\n    shape: 'square' | 'circle' | 'text';\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nimport { DateStriPDay } from '../l-date-strip/type';\r\n\r\nexport interface DateStripItemProps {\r\n\tdates: DateStriPDay[];\r\n\t/**\r\n\t * 主题色，对底部按钮和选中日期生效\r\n\t */\r\n\tcolor ?: string;\r\n\tactiveBgColor ?: string;\r\n\tactiveColor ?: string;\r\n\tbgColor ?: string;\r\n\tradius ?: string;\r\n\tgridWidth ?: string;\r\n\tswitchMode: 'week' | 'none';\r\n\tshape: 'square' | 'circle' | 'text';\r\n}","// @ts-nocheck\r\nimport { WeekRange, DateType } from './type';\r\n\r\n\r\n/**\r\n * 获取指定日期所在周的日期范围。\r\n * @param {Date} date - 指定日期。\r\n * @param {number} firstDayOfWeek - 一周的第一天，0 表示周日，1 表示周一，以此类推。\r\n * @returns {WeekRange} 返回一个包含周起始和结束日期的对象。\r\n */\r\n\r\nexport function getWeekRange(date : Date, firstDayOfWeek : number) : WeekRange {\r\n\tconst start = new Date(date.getTime());\r\n\tconst dayOffset = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n\tstart.setDate(start.getDate() - dayOffset);\r\n\r\n\tconst end = new Date(start.getTime());\r\n\tend.setDate(end.getDate() + 6);\r\n\treturn { start, end } as WeekRange\r\n};\r\n\r\n/**\r\n * 向指定日期添加天数。\r\n * @param {Date} date - 基础日期。\r\n * @param {number} days - 要添加的天数，可以是正数或负数。\r\n * @returns {Date} 返回一个新的日期对象，该对象是基础日期加上指定天数后的结果。\r\n */\r\nexport function addDays(date : Date, days : number) : Date {\r\n\tconst result = new Date(date.getTime());\r\n\tresult.setDate(result.getDate() + days);\r\n\treturn result;\r\n};\r\n\r\n\r\nexport function addWeeks(date : Date, weeks : number) : Date {\r\n\tconst result = new Date(date.getTime());\r\n\tresult.setDate(result.getDate() + weeks * 7);\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 判断两个日期是否表示同一天（忽略时间部分）。\r\n *\r\n * @param date1 - 第一个日期。\r\n * @param date2 - 第二个日期。\r\n * @returns 如果两个日期是同一天，返回 true；否则返回 false。\r\n */\r\nfunction isSameDay(date1 : Date, date2 : Date) : boolean {\r\n\treturn (\r\n\t\tdate1.getFullYear() == date2.getFullYear() &&\r\n\t\tdate1.getMonth() == date2.getMonth() &&\r\n\t\tdate1.getDate() == date2.getDate()\r\n\t);\r\n}\r\nexport function calcType(date : Date, minDate : Date, maxDate : Date, selectedDate : Date | null) : DateType {\r\n\t// 检查日期是否早于 minDate 或晚于 maxDate\r\n\tif (date.getTime() < minDate.getTime() || date.getTime() > maxDate.getTime()) {\r\n\t    return 'disabled';\r\n\t}\r\n\t// 如果 selectedDate 不为 null，检查日期是否等于 selectedDate\r\n\tif (selectedDate != null && isSameDay(date, selectedDate)) {\r\n\t\treturn 'selected';\r\n\t}\r\n\treturn ''\r\n}\r\n\r\n\r\nexport function daysBetween(date1: Date, date2: Date): number {\n  // 将两个日期转换为毫秒\n  const diffInMilliseconds = Math.abs(date2.getTime() - date1.getTime());\n  return Math.floor(diffInMilliseconds / (1000 * 3600 * 24));\n}","// @ts-nocheck\n/**\n * 检查一个值是否为字符串类型\n * @param str 要检查的值\n * @returns 如果值的类型是字符串类型，则返回 true；否则返回 false\n */\nexport function isString(str: any | null): boolean {\n    return typeof str == 'string';\n}\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\n/**\r\n * 检查一个值是否为字符串类型\r\n * @param str 要检查的值\r\n * @returns 如果值的类型是字符串类型，则返回 true；否则返回 false\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function isString (str: any|null): boolean {\r\n\treturn typeof str == 'string'\r\n}\r\n\r\n","// @ts-nocheck\n/**\n * 检查一个值是否为数字类型\n * @param value 要检查的值，可以是 number 类型或 string 类型的数字\n * @returns 如果值是数字类型且不是 NaN，则返回 true；否则返回 false\n */\nexport function isNumber(value: any | null): boolean {\n    return ['Byte', 'UByte', 'Short', 'UShort', 'Int', 'UInt', 'Long', 'ULong', 'Float', 'Double', 'number'].includes(typeof value);\n}\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\n/**\r\n * 检查一个值是否为数字类型\r\n * @param value 要检查的值，可以是 number 类型或 string 类型的数字\r\n * @returns 如果值是数字类型且不是 NaN，则返回 true；否则返回 false\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function isNumber(value: any|null): boolean {\r\n\r\n\treturn ['Byte', 'UByte','Short','UShort','Int','UInt','Long','ULong','Float','Double','number'].includes(typeof value)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","// @ts-nocheck\n/**\n * 检查一个值是否为数字类型或表示数字的字符串\n * @param value 要检查的值，可以是 string 类型或 number 类型\n * @returns 如果值是数字类型或表示数字的字符串，则返回 true；否则返回 false\n */\nimport { isNumber } from '../isNumber';\nimport { isString } from '../isString';\nexport function isNumeric(value: any | null): boolean {\n    if (value == null) {\n        return false;\n    }\n    if (isNumber(value)) {\n        return true;\n    }\n    else if (isString(value)) {\n        // const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\n        const regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\");\n        return regex.test(value as string); //regex.matches(value as string) \n    }\n    return false;\n    // return /^(-)?\\d+(\\.\\d+)?$/.test(value);\n}\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\n\r\n/**\r\n * 检查一个值是否为数字类型或表示数字的字符串\r\n * @param value 要检查的值，可以是 string 类型或 number 类型\r\n * @returns 如果值是数字类型或表示数字的字符串，则返回 true；否则返回 false\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {isNumber} from '../isNumber';\r\nimport {isString} from '../isString';\r\nexport function isNumeric(value : any|null) : boolean {\r\n\tif(value == null) {\r\n\t\treturn false\r\n\t}\r\n\tif(isNumber(value)) {\r\n\t\treturn true\r\n\t} else if(isString(value)) {\r\n\t\t// const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\r\n\t\tconst regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\")\r\n\t\treturn  regex.test(value as string) //regex.matches(value as string) \r\n\t}\r\n\treturn false\r\n\t// return /^(-)?\\d+(\\.\\d+)?$/.test(value);\r\n}\r\n\r\n","// @ts-nocheck\n/**\n * 检查一个值是否已定义（不为 undefined）且不为 null\n * @param value 要检查的值\n * @returns 如果值已定义且不为 null，则返回 true；否则返回 false\n */\nexport function isDef(value: any | null): boolean {\n    return value != null;\n}\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\n/**\r\n * 检查一个值是否已定义（不为 undefined）且不为 null\r\n * @param value 要检查的值\r\n * @returns 如果值已定义且不为 null，则返回 true；否则返回 false\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function isDef(value : any|null) : boolean {\r\n\r\n\treturn value != null;\r\n\r\n\r\n\r\n\r\n}\r\n","// @ts-nocheck\nimport { isNumeric } from '../isNumeric';\nimport { isDef } from '../isDef';\n/**\n * 给一个值添加单位（像素 px）\n * @param value 要添加单位的值，可以是字符串或数字\n * @returns 添加了单位的值，如果值为 null 则返回 null\n */\nfunction addUnit(value: string): string;\nfunction addUnit(value: number): string;\nfunction addUnit(value: any | null): string | null {\n    if (!isDef(value)) {\n        return null;\n    }\n    value = `${value}`; //value.toString(); // 将值转换为字符串\n    // 如果值是数字，则在后面添加单位 \"px\"，否则保持原始值\n    return isNumeric(value) ? `${value}px` : value;\n}\nexport { addUnit };\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:38',addUnit(100)); // 输出: \"100px\"\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:39',addUnit(\"200\")); // 输出: \"200px\"\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:40',addUnit(\"300px\")); // 输出: \"300px\"（已经包含单位）\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:41',addUnit()); // 输出: undefined（值为 undefined）\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:42',addUnit(null)); // 输出: undefined（值为 null）\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\nimport {isNumeric} from '../isNumeric'\r\nimport {isDef} from '../isDef'\r\n/**\r\n * 给一个值添加单位（像素 px）\r\n * @param value 要添加单位的值，可以是字符串或数字\r\n * @returns 添加了单位的值，如果值为 null 则返回 null\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction addUnit(value: string): string\r\nfunction addUnit(value: number): string\r\nfunction addUnit(value: any|null): string|null  {\r\n  if (!isDef(value)) {\r\n    return null;\r\n  }\r\n  value = `${value}` //value.toString(); // 将值转换为字符串\r\n\r\n  // 如果值是数字，则在后面添加单位 \"px\"，否则保持原始值\r\n  return isNumeric(value) ? `${value}px` : value;\r\n}\r\nexport {addUnit}\r\n\r\n\r\n\r\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:38',addUnit(100)); // 输出: \"100px\"\r\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:39',addUnit(\"200\")); // 输出: \"200px\"\r\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:40',addUnit(\"300px\")); // 输出: \"300px\"（已经包含单位）\r\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:41',addUnit()); // 输出: undefined（值为 undefined）\r\n// __f__('log','at uni_modules/lime-shared/addUnit/index.ts:42',addUnit(null)); // 输出: undefined（值为 null）","export type IconCollection = {\n    has: boolean;\n    icons: Map<string, any | null>;\n};\n//# sourceMappingURL=types.uts.map","export type IconCollection = {\r\n\thas: boolean,\r\n\ticons: Map<string, any|null>\r\n}\r\n","export interface LDay {\n    day: number;\n    month: number;\n    year: number;\n    fullDate: string;\n    isBeforeToday: boolean;\n    isToday: boolean;\n    isCurrentMonth: boolean;\n    width: number;\n    height: number;\n    originalMonth: number;\n    type: string;\n    fontSize: number;\n    timestamp: number;\n    // formatDay(day: number): string;\n    // formatMonth(month: number): string;\n    isCoordinateInside(x: number, y: number): boolean;\n    setPosition(x: number, y: number): void;\n    setDimensions(width: number, height: number): void;\n    selectDate: LDay | null;\n    canSupplement: boolean;\n    isCheckedIn: boolean;\n    draw(ctx: CanvasRenderingContext2D): void;\n}\nexport type LYearMonth = {\n    year: number;\n    month: number;\n};\nexport type LGridSize = {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n};\nexport type LMonthData = {\n    year: number;\n    month: number;\n    days: LDay[];\n};\nexport type LOptions = {\n    canSupplement?: boolean;\n    isFullCalendar?: boolean;\n    yearMonth?: string;\n    signedDates?: string[];\n    week?: string[];\n    dayHeight?: number;\n    weekStartsOn?: number;\n    weekColor?: string;\n    weekFontSize?: number;\n    weekHeight?: number;\n    selectedDayBgColor?: string;\n    dayFontSize?: number;\n    textColor?: string;\n    disabledColor?: string;\n    monthTitleHeight?: number;\n    monthTitleFontSize?: number;\n    color?: string;\n    unsignedColor?: string;\n    select?: (day: LDay) => void;\n    panelChange?: (res: LYearMonth) => void;\n};\n//# sourceMappingURL=index.uts.map","export interface LDay {\n  day: number;\n  month: number;\n  year: number;\n  fullDate: string;\n  isBeforeToday: boolean;\n  isToday: boolean;\n  isCurrentMonth: boolean;\n  width: number;\n  height: number;\n  originalMonth: number;\n  type: string;\n  fontSize: number;\n  timestamp: number;\n\n  // formatDay(day: number): string;\n  // formatMonth(month: number): string;\n  isCoordinateInside(x: number, y: number): boolean;\n  setPosition(x: number, y: number): void;\n  setDimensions(width: number, height: number): void;\n  selectDate: LDay | null;\n  canSupplement: boolean;\n  isCheckedIn: boolean;\n  draw(ctx: CanvasRenderingContext2D): void;\n}\r\n\r\n\r\nexport type LYearMonth = {\r\n\tyear : number,\r\n\tmonth : number\r\n}\r\n\r\nexport type LGridSize = {\r\n\tx : number,\r\n\ty : number,\r\n\twidth : number,\r\n\theight : number\r\n}\r\n\r\nexport type LMonthData = {\r\n\tyear : number\r\n\tmonth : number\r\n\tdays : LDay[]\r\n}\r\n\r\n\r\nexport type LOptions = {\r\n\tcanSupplement ?: boolean\r\n\tisFullCalendar ?: boolean\r\n\tyearMonth ?: string,\r\n\tsignedDates ?: string[],\r\n\tweek ?: string[],\r\n\tdayHeight ?: number,\r\n\tweekStartsOn ?: number,\r\n\tweekColor?: string,\r\n\tweekFontSize?: number,\r\n\tweekHeight?: number,\r\n\tselectedDayBgColor?: string,\r\n\tdayFontSize?: number,\r\n\ttextColor?: string,\r\n\tdisabledColor?: string,\r\n\tmonthTitleHeight?: number,\r\n\tmonthTitleFontSize?: number,\r\n\tcolor?: string,\r\n\tunsignedColor?: string,\r\n\tselect ?: (day : LDay) => void,\r\n\tpanelChange ?: (res : LYearMonth) => void\r\n\t// weekStartsOn : string\r\n}","export default {\r\n\t\"addressbook\": \"\\ue80c\",\r\n\t\"addfriends-fill\": \"\\ue80a\",\r\n\t\"addfriends\": \"\\ue80b\",\r\n\t\"backspace-fill\": \"\\ue808\",\r\n\t\"backspace\": \"\\ue809\",\r\n\t\"bankcard-fill\": \"\\ue806\",\r\n\t\"bankcard\": \"\\ue807\",\r\n\t\"camera-fill\": \"\\ue804\",\r\n\t\"camera\": \"\\ue805\",\r\n\t\"captcha-fill\": \"\\ue802\",\r\n\t\"captcha\": \"\\ue803\",\r\n\t\"cart-fill\": \"\\ue800\",\r\n\t\"cart\": \"\\ue801\",\r\n\t\"classify\": \"\\ue7fe\",\r\n\t\"classify-fill\": \"\\ue7ff\",\r\n\t\"comment-fill\": \"\\ue7fc\",\r\n\t\"comment\": \"\\ue7fd\",\r\n\t\"community-fill\": \"\\ue7fa\",\r\n\t\"community\": \"\\ue7fb\",\r\n\t\"coupon-fill\": \"\\ue7f8\",\r\n\t\"coupon\": \"\\ue7f9\",\r\n\t\"delete\": \"\\ue7f6\",\r\n\t\"delete-fill\": \"\\ue7f7\",\r\n\t\"edit\": \"\\ue7f4\",\r\n\t\"edit-fill\": \"\\ue7f5\",\r\n\t\"fabulous-fill\": \"\\ue7f2\",\r\n\t\"fabulous\": \"\\ue7f3\",\r\n\t\"find\": \"\\ue7f0\",\r\n\t\"find-fill\": \"\\ue7f1\",\r\n\t\"help-fill\": \"\\ue7ee\",\r\n\t\"help\": \"\\ue7ef\",\r\n\t\"home-fill\": \"\\ue7ec\",\r\n\t\"home\": \"\\ue7ed\",\r\n\t\"idcard-fill\": \"\\ue7ea\",\r\n\t\"idcard\": \"\\ue7eb\",\r\n\t\"info\": \"\\ue7e8\",\r\n\t\"info-fill\": \"\\ue7e9\",\r\n\t\"invite-fill\": \"\\ue7e6\",\r\n\t\"invite\": \"\\ue7e7\",\r\n\t\"kefu-fill\": \"\\ue7e4\",\r\n\t\"kefu\": \"\\ue7e5\",\r\n\t\"like-fill\": \"\\ue7e2\",\r\n\t\"like\": \"\\ue7e3\",\r\n\t\"location\": \"\\ue7e0\",\r\n\t\"location-fill\": \"\\ue7e1\",\r\n\t\"lock\": \"\\ue7de\",\r\n\t\"lock-fill\": \"\\ue7df\",\r\n\t\"mail-fill\": \"\\ue7dc\",\r\n\t\"mail\": \"\\ue7dd\",\r\n\t\"message\": \"\\ue7da\",\r\n\t\"message-fill\": \"\\ue7db\",\r\n\t\"mobile-fill\": \"\\ue7d8\",\r\n\t\"mobile\": \"\\ue7d9\",\r\n\t\"more\": \"\\ue7d6\",\r\n\t\"more-fill\": \"\\ue7d7\",\r\n\t\"my-fill\": \"\\ue7d4\",\r\n\t\"my\": \"\\ue7d5\",\r\n\t\"principal\": \"\\ue80d\",\r\n\t\"notice-fill\": \"\\ue7d2\",\r\n\t\"notice\": \"\\ue7d3\",\r\n\t\"order\": \"\\ue7d0\",\r\n\t\"order-fill\": \"\\ue7d1\",\r\n\t\"picture\": \"\\ue7ce\",\r\n\t\"picture-fill\": \"\\ue7cf\",\r\n\t\"setup-fill\": \"\\ue7cc\",\r\n\t\"setup\": \"\\ue7cd\",\r\n\t\"share\": \"\\ue7ca\",\r\n\t\"share-fill\": \"\\ue7cb\",\r\n\t\"shop\": \"\\ue7c8\",\r\n\t\"shop-fill\": \"\\ue7c9\",\r\n\t\"star-fill\": \"\\ue7c5\",\r\n\t\"star\": \"\\ue7c6\",\r\n\t\"starhalf\": \"\\ue7c7\",\r\n\t\"stepon-fill\": \"\\ue7c3\",\r\n\t\"stepon\": \"\\ue7c4\",\r\n\t\"wait-fill\": \"\\ue7c1\",\r\n\t\"wait\": \"\\ue7c2\",\r\n\t\"warning\": \"\\ue7bf\",\r\n\t\"warning-fill\": \"\\ue7c0\",\r\n\t\"plus\": \"\\ue7bc\",\r\n\t\"plussign-fill\": \"\\ue7bd\",\r\n\t\"plussign\": \"\\ue7be\",\r\n\t\"minus\": \"\\ue7b9\",\r\n\t\"minussign\": \"\\ue7ba\",\r\n\t\"minussign-fill\": \"\\ue7bb\",\r\n\t\"close\": \"\\ue7b8\",\r\n\t\"clear\": \"\\ue7b6\",\r\n\t\"clear-fill\": \"\\ue7b7\",\r\n\t\"checkbox-fill\": \"\\ue7b5\",\r\n\t\"checkround\": \"\\ue7b4\",\r\n\t\"checkbox\": \"\\ue7b3\",\r\n\t\"check\": \"\\ue7b2\",\r\n\t\"pulldown-fill\": \"\\ue7ae\",\r\n\t\"pullup\": \"\\ue7af\",\r\n\t\"pullup-fill\": \"\\ue7b0\",\r\n\t\"pulldown\": \"\\ue7b1\",\r\n\t\"roundright-fill\": \"\\ue7ac\",\r\n\t\"roundright\": \"\\ue7ad\",\r\n\t\"arrowright\": \"\\ue7a9\",\r\n\t\"arrowleft\": \"\\ue7aa\",\r\n\t\"arrowdown\": \"\\ue7ab\",\r\n\t\"left\": \"\\ue7a6\",\r\n\t\"up\": \"\\ue7a7\",\r\n\t\"right\": \"\\ue7a8\",\r\n\t\"back\": \"\\ue7a3\",\r\n\t\"top\": \"\\ue7a4\",\r\n\t\"dropdown\": \"\\ue7a5\",\r\n\t\"turningleft\": \"\\ue79f\",\r\n\t\"turningup\": \"\\ue7a0\",\r\n\t\"turningright\": \"\\ue7a1\",\r\n\t\"turningdown\": \"\\ue7a2\",\r\n\t\"refresh\": \"\\ue79c\",\r\n\t\"loading\": \"\\ue79d\",\r\n\t\"search\": \"\\ue79e\",\r\n\t\"rotate\": \"\\ue79b\",\r\n\t\"screen\": \"\\ue79a\",\r\n\t\"signin\": \"\\ue799\",\r\n\t\"calendar\": \"\\ue798\",\r\n\t\"scan\": \"\\ue797\",\r\n\t\"qrcode\": \"\\ue796\",\r\n\t\"wallet\": \"\\ue795\",\r\n\t\"telephone\": \"\\ue794\",\r\n\t\"visible\": \"\\ue793\",\r\n\t\"invisible\": \"\\ue792\",\r\n\t\"menu\": \"\\ue78e\",\r\n\t\"operate\": \"\\ue78f\",\r\n\t\"slide\": \"\\ue790\",\r\n\t\"list\": \"\\ue791\",\r\n\t\"nonetwork\": \"\\ue78d\",\r\n\t\"partake\": \"\\ue78c\",\r\n\t\"qa\": \"\\ue78b\",\r\n\t\"barchart\": \"\\ue788\",\r\n\t\"piechart\": \"\\ue789\",\r\n\t\"linechart\": \"\\ue78a\",\r\n\t\"at\": \"\\ue787\",\r\n\t\"face\": \"\\ue77f\",\r\n\t\"redpacket\": \"\\ue780\",\r\n\t\"suspend\": \"\\ue781\",\r\n\t\"link\": \"\\ue782\",\r\n\t\"keyboard\": \"\\ue783\",\r\n\t\"play\": \"\\ue784\",\r\n\t\"video\": \"\\ue785\",\r\n\t\"voice\": \"\\ue786\",\r\n\t\"sina\": \"\\ue77a\",\r\n\t\"browser\": \"\\ue77b\",\r\n\t\"moments\": \"\\ue77c\",\r\n\t\"qq\": \"\\ue77d\",\r\n\t\"wechat\": \"\\ue77e\",\r\n\t\"balance\": \"\\ue779\",\r\n\t\"bankcardpay\": \"\\ue778\",\r\n\t\"wxpay\": \"\\ue777\",\r\n\t\"alipay\": \"\\ue776\",\r\n\t\"payment\": \"\\ue818\",\r\n\t\"receive\": \"\\ue817\",\r\n\t\"sendout\": \"\\ue816\",\r\n\t\"evaluate\": \"\\ue815\",\r\n\t\"aftersale\": \"\\ue814\",\r\n\t\"warehouse\": \"\\ue813\",\r\n\t\"transport\": \"\\ue812\",\r\n\t\"delivery\": \"\\ue811\",\r\n\t\"switch\": \"\\ue810\",\r\n\t\"goods\": \"\\ue80f\",\r\n\t\"goods-fill\": \"\\ue80e\"\r\n} as UTSJSONObject;","export default \"/static/notice.png\";\n//# sourceMappingURL=notice.png.uts.map","export default \"/static/notice.png\"","export default \"/static/vedio.png\";\n//# sourceMappingURL=vedio.png.uts.map","export default \"/static/vedio.png\"","export default \"/static/people.png\";\n//# sourceMappingURL=people.png.uts.map","export default \"/static/people.png\"","export default \"/static/mobile.png\";\n//# sourceMappingURL=mobile.png.uts.map","export default \"/static/mobile.png\"","// @ts-nocheck\nexport const SECONDS_A_MINUTE = 60;\nexport const SECONDS_A_HOUR = SECONDS_A_MINUTE * 60;\nexport const SECONDS_A_DAY = SECONDS_A_HOUR * 24;\nexport const SECONDS_A_WEEK = SECONDS_A_DAY * 7;\nexport const MILLISECONDS_A_SECOND = 1e3;\nexport const MILLISECONDS_A_MINUTE = SECONDS_A_MINUTE * MILLISECONDS_A_SECOND;\nexport const MILLISECONDS_A_HOUR = SECONDS_A_HOUR * MILLISECONDS_A_SECOND;\nexport const MILLISECONDS_A_DAY = SECONDS_A_DAY * MILLISECONDS_A_SECOND;\nexport const MILLISECONDS_A_WEEK = SECONDS_A_WEEK * MILLISECONDS_A_SECOND;\n// English locales\nexport const MS = 'millisecond';\nexport const S = 'second';\nexport const MIN = 'minute';\nexport const H = 'hour';\nexport const D = 'day';\nexport const W = 'week';\nexport const M = 'month';\nexport const Q = 'quarter';\nexport const Y = 'year';\nexport const DATE = 'date';\nexport const FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ';\nexport const INVALID_DATE_STRING = 'Invalid Date';\n// regex\nexport const REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/;\nexport const REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\n// export const REGEX_FORMAT = /(?:[^\\]]+)|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\n//# sourceMappingURL=constant.uts.map","// @ts-nocheck\r\nexport const SECONDS_A_MINUTE = 60\nexport const SECONDS_A_HOUR = SECONDS_A_MINUTE * 60\nexport const SECONDS_A_DAY = SECONDS_A_HOUR * 24\nexport const SECONDS_A_WEEK = SECONDS_A_DAY * 7\n\nexport const MILLISECONDS_A_SECOND = 1e3\nexport const MILLISECONDS_A_MINUTE = SECONDS_A_MINUTE * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_HOUR = SECONDS_A_HOUR * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_DAY = SECONDS_A_DAY * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_WEEK = SECONDS_A_WEEK * MILLISECONDS_A_SECOND\n\n// English locales\nexport const MS = 'millisecond'\nexport const S = 'second'\nexport const MIN = 'minute'\nexport const H = 'hour'\nexport const D = 'day'\nexport const W = 'week'\nexport const M = 'month'\nexport const Q = 'quarter'\nexport const Y = 'year'\nexport const DATE = 'date'\n\nexport const FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ'\n\nexport const INVALID_DATE_STRING = 'Invalid Date'\n\n// regex\nexport const REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/\nexport const REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n// export const REGEX_FORMAT = /(?:[^\\]]+)|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\n","// @ts-nocheck\r\nexport type DayutsConfig = {\r\n\tdate: any|null\r\n\tformat : string|null\r\n\tlocale : string|null\r\n}\r\n\r\nexport type DayutsUnit = 'year' | 'month' | 'day' | 'week' | 'date' | 'hour' | 'minute' | 'second' | 'millisecond' | 'quarter'\r\n\r\nexport type DayutsFormats = {\r\n\t/**\r\n\t * 小时和分钟的格式化字符串。\r\n\t */\r\n\tLT : string;\r\n\r\n\t/**\r\n\t * 小时、分钟和秒的格式化字符串。\r\n\t */\r\n\tLTS : string;\r\n\r\n\t/**\r\n\t * 年份、月份和日期的格式化字符串。\r\n\t */\r\n\tL : string;\r\n\r\n\t/**\r\n\t * 年份、月份、日期和星期的格式化字符串。\r\n\t */\r\n\tLL : string;\r\n\r\n\t/**\r\n\t * 年份、月份、日期、星期和小时的格式化字符串。\r\n\t */\r\n\tLLL : string;\r\n\r\n\t/**\r\n\t * 年份、月份、日期、星期、小时和分钟的格式化字符串。\r\n\t */\r\n\tLLLL : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份和日期的格式化字符串。\r\n\t */\r\n\tl : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份、日期和星期的格式化字符串。\r\n\t */\r\n\tll : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份、日期、星期和小时的格式化字符串。\r\n\t */\r\n\tlll : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份、日期、星期、小时和分钟的格式化字符串。\r\n\t */\r\n\tllll : string;\r\n}\r\nexport type DayutsRelativeTime = {\r\n\t/**\r\n\t * 时间单位之后的格式化字符串。\r\n\t */\r\n\tfuture : string;\r\n\r\n\t/**\r\n\t * 时间单位之前的格式化字符串。\r\n\t */\r\n\tpast : string;\r\n\r\n\t/**\r\n\t * 秒的格式化字符串。\r\n\t */\r\n\ts : string;\r\n\r\n\t/**\r\n\t * 分钟的格式化字符串。\r\n\t */\r\n\tm : string;\r\n\r\n\t/**\r\n\t * 分钟（带前缀）的格式化字符串。\r\n\t */\r\n\tmm : string;\r\n\r\n\t/**\r\n\t * 小时的格式化字符串。\r\n\t */\r\n\th : string;\r\n\r\n\t/**\r\n\t * 小时（带前缀）的格式化字符串。\r\n\t */\r\n\thh : string;\r\n\r\n\t/**\r\n\t * 天的格式化字符串。\r\n\t */\r\n\td : string;\r\n\r\n\t/**\r\n\t * 天（带前缀）的格式化字符串。\r\n\t */\r\n\tdd : string;\r\n\r\n\t/**\r\n\t * 月的格式化字符串。\r\n\t */\r\n\tM : string;\r\n\r\n\t/**\r\n\t * 月（带前缀）的格式化字符串。\r\n\t */\r\n\tMM : string;\r\n\r\n\t/**\r\n\t * 年的格式化字符串。\r\n\t */\r\n\ty : string;\r\n\r\n\t/**\r\n\t * 年（带前缀）的格式化字符串。\r\n\t */\r\n\tyy : string;\r\n}\r\n\r\n/**\r\n * 本地化对象接口。\r\n */\r\nexport type DayutsLocale = {\r\n\t/**\r\n\t * 区域设置名称。\r\n\t */\r\n\tname : string;\r\n\r\n\t/**\r\n\t * 一周中每天的完整名称。\r\n\t */\r\n\tweekdays : string[];\r\n\r\n\t/**\r\n\t * 一周中每天的缩写名称。\r\n\t */\r\n\tweekdaysShort ?: string[];\r\n\r\n\t/**\r\n\t * 一周中每天的最小缩写名称。\r\n\t */\r\n\tweekdaysMin ?: string[];\r\n\r\n\t/**\r\n\t * 一年中的每个月份的名称。\r\n\t */\r\n\tmonths : string[];\r\n\r\n\t/**\r\n\t * 一年中的每个月份的缩写名称。\r\n\t */\r\n\tmonthsShort ?: string[];\r\n\r\n\t/**\r\n\t * 返回序数词的函数。\r\n\t *\r\n\t * @param number - 要格式化的数字。\r\n\t * @param period - 周期类型（如 \"W\" 表示周）。\r\n\t * @returns 返回格式化后的序数词字符串。\r\n\t */\r\n\t// ordinal : (number : number) => string;\r\n\tordinal : (number : number, period : string) => string;\r\n\r\n\t/**\r\n\t * 一周的开始日期（星期几）。\r\n\t */\r\n\tweekStart ?: number;\r\n\r\n\t/**\r\n\t * 年的开始月份。\r\n\t */\r\n\tyearStart ?: number;\r\n\r\n\t/**\r\n\t * 日期和时间格式化选项。\r\n\t */\r\n\tformats ?: DayutsFormats;\r\n\r\n\t/**\r\n\t * 相对时间格式化选项。\r\n\t */\r\n\trelativeTime ?: DayutsRelativeTime;\r\n\r\n\t/**\r\n\t * 根据小时和分钟返回上午或下午的函数。\r\n\t *\r\n\t * @param hour - 小时数（0-23）。\r\n\t * @param minute - 分钟数（0-59）。\r\n\t * @returns 返回上午或下午的字符串。\r\n\t */\r\n\tmeridiem ?: (hour : number, minute : number, isLowercase : boolean) => string;\r\n}\r\n\r\n\r\nexport type DayutsObject = {\r\n\tyears : number;\r\n\tmonths : number;\r\n\tdate : number;\r\n\thours : number;\r\n\tminutes : number;\r\n\tseconds : number;\r\n\tmilliseconds : number;\r\n}\r\n\r\n\r\n// 主 Dayuts 类类型定义\n// export interface Dayuts {\n//     // 公共属性\n//     $L: string;\n\n//     // 私有属性\n//     $d: Date;\n//     $y: number;\n//     $M: number;\n//     $D: number;\n//     $W: number;\n//     $H: number;\n//     $m: number;\n//     $s: number;\n//     $ms: number;\n//     $u: boolean;\n\n//     // 构造函数\n//     // constructor(cfg: DayutsConfig);\n\n//     // 解析配置并初始化日期\n//     // private parse(cfg: DayutsConfig): void;\n\n//     // 初始化日期的各个部分\n//     // private init(): void;\n\n//     // 检查日期是否有效\n//     isValid(): boolean;\n\n//     // 判断当前日期是否与给定日期在指定时间单位内相同\n//     // isSame(input: string, units?: DayutsUnit): boolean;\n//     // isSame(input: number, units?: DayutsUnit): boolean;\n//     // isSame(input: Date, units?: DayutsUnit): boolean;\n//     // isSame(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isSame(input: UTSJSONObject, units?: DayutsUnit): boolean;\n// \t// isSame(input : string) : boolean\r\n// \t// isSame(input : number) : boolean\r\n// \t// isSame(input : Date) : boolean\r\n// \t// isSame(input : Dayuts) : boolean\r\n// \t// isSame(input : UTSJSONObject) : boolean\r\n\t\r\n// \t// isSame(input : string, units : DayutsUnit) : boolean\r\n// \t// isSame(input : number, units : DayutsUnit) : boolean\r\n// \t// isSame(input : Date, units : DayutsUnit) : boolean\r\n// \t// isSame(input : Dayuts, units : DayutsUnit) : boolean\r\n// \t// isSame(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n// \t// isSame(input : any, units : DayutsUnit) : boolean\r\n\t\n//     // 判断给定日期是否在当前日期指定时间单位之后\n//     // isAfter(input: string, units?: DayutsUnit): boolean;\n//     // isAfter(input: number, units?: DayutsUnit): boolean;\n//     // isAfter(input: Date, units?: DayutsUnit): boolean;\n//     // isAfter(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isAfter(input: UTSJSONObject, units?: DayutsUnit): boolean;\r\n// \t// isAfter(input : string) : boolean\r\n// \t// isAfter(input : number) : boolean\r\n// \t// isAfter(input : Date) : boolean\r\n// \t// isAfter(input : Dayuts) : boolean\r\n// \t// isAfter(input : UTSJSONObject) : boolean\r\n\t\r\n// \t// isAfter(input : string, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : number, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : Date, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : any, units : DayutsUnit) : boolean\n\n//     // 判断给定日期是否在当前日期指定时间单位之前\n//     // isBefore(input: string, units?: DayutsUnit): boolean;\n//     // isBefore(input: number, units?: DayutsUnit): boolean;\n//     // isBefore(input: Date, units?: DayutsUnit): boolean;\n//     // isBefore(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isBefore(input: UTSJSONObject, units?: DayutsUnit): boolean;\n\n//     // 判断当前日期是否与给定日期在指定时间单位内相同或之前\n//     // isSameOrBefore(input: string, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: number, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: Date, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: UTSJSONObject, units?: DayutsUnit): boolean;\n\n//     // 判断当前日期是否与给定日期在指定时间单位内相同或之后\n//     // isSameOrAfter(input: string, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: number, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: Date, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: UTSJSONObject, units?: DayutsUnit): boolean;\n\n//     // 判断当前日期是否在两个给定日期之间\n//     // isBetween(input: any, input2: any): boolean;\r\n//     // isBetween(input: any, input2: any, units?: DayutsUnit, interval?: string): boolean;\n\n//     // 判断当前年份是否为闰年\n//     isLeapYear(): boolean;\n\n//     // 判断当前日期是否为今天\n//     isToday(): boolean;\n\n//     // 获取 Unix 时间戳（秒）\n//     unix(): number;\n\n//     // 设置为指定时间单位的开始或结束\n//     // startOf(units: DayutsUnit): Dayuts;\r\n//     // startOf(units: DayutsUnit, startOf?: boolean): Dayuts;\n//     endOf(units: DayutsUnit): Dayuts;\n\n//     // 设置指定时间单位的值\n//     set(units: DayutsUnit, int: number): Dayuts;\n\n//     // 获取指定时间单位的值\n//     get(units: DayutsUnit): number;\n\n//     // 年、月、日、时、分、秒、毫秒的 getter 和 setter 方法\n//     year(): number;\r\n//     year(input?: number): Dayuts;\n//     month(): number\r\n//     month(input?: number): Dayuts;\n//     // day(): number;\r\n//     day(input?: number): Dayuts;\n//     date(): number;\r\n//     date(input?: number): Dayuts;\n//     // hour(): number;\r\n//     hour(input?: number): Dayuts;\n//     // minute(): number;\r\n//     minute(input?: number): Dayuts;\n//     // second(): number;\r\n//     second(input?: number): Dayuts;\n//     // millisecond(): number;\r\n//     millisecond(input?: number): Dayuts;\n\n//     // 添加时间\n//     add(number: number, units: DayutsUnit): Dayuts;\n\n//     // 减去时间\n//     subtract(number: number, units: DayutsUnit): Dayuts;\n\n//     // 格式化日期\n//     format(formatStr?: string): string;\n\n//     // 获取 UTC 偏移量（分钟）\n//     utcOffset(): number;\n\n//     // 计算两个日期之间的差值\n//     diff(input: string, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: number, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: Date, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: Dayuts, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: UTSJSONObject, units?: DayutsUnit, float?: boolean): number;\n\n//     // 转换为原生 Date 对象\n//     toDate(): Date;\n\n//     // 转换为 ISO 8601 字符串\n//     toJSON(): string | null;\n//     toISOString(): string;\n\n//     // 转换为对象\n//     toObject(): DayutsObject;\n\n//     // 转换为数组\n//     toArray(): number[];\n\n//     // 获取时间戳（毫秒）\n//     valueOf(): number;\n\n//     // 获取月份的天数\n//     daysInMonth(): number;\n\n//     // 获取本地化对象\n//     // private $locale(): DayutsLocale;\n\n//     // 设置或获取本地化配置\n//     locale(preset: string, object?: DayutsLocale): Dayuts;\n//     locale(preset: DayutsLocale, object?: DayutsLocale): Dayuts;\n\n//     // 克隆当前实例\n//     clone(): Dayuts;\n\n//     // 转换为字符串\n//     // toString(): string;\n\n//     // 获取或设置一年中的第几天\n//     dayOfYear(): number;\r\n//     dayOfYear(input?: number): Dayuts;\n\n//     // 相对时间方法\n//     fromToBase(input: any, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n//     to(input: any, withoutSuffix?: boolean): string;\n//     from(input: any, withoutSuffix?: boolean): string;\n//     toNow(withoutSuffix?: boolean): string;\n//     fromNow(withoutSuffix?: boolean): string;\n// }","// @ts-nocheck\nimport type { DayutsLocale, DayutsRelativeTime } from '../../../utssdk/interface';\n/**\n * 英语本地化对象。\n */\nexport default {\n    name: 'en',\n    /**\n     * 星期名称数组。\n     */\n    weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    /**\n     * 月份名称数组。\n     */\n    months: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ],\n    relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n    } as DayutsRelativeTime,\n    /**\n     * 序数函数，用于将数字转换为带有序数后缀的字符串。\n     *\n     * @param {number} n - 要转换的数字。\n     * @returns {string} 带有序数后缀的字符串。\n     */\n    ordinal: (n: number, _: string): string => {\n        const s = ['th', 'st', 'nd', 'rd'];\n        const v = n % 100;\n        const i = (v - 20) % 10;\n        const k = i < s.length ? i : v < s.length ? v : 0;\n        return `[${n}${(s[k])}]`;\n    },\n} as DayutsLocale;\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\nimport type { DayutsLocale, DayutsRelativeTime} from '../../../utssdk/interface'\r\n/**\r\n * 英语本地化对象。\r\n */\r\nexport default {\r\n\tname: 'en',\r\n\t/**\r\n\t * 星期名称数组。\r\n\t */\r\n\tweekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\t/**\r\n\t * 月份名称数组。\r\n\t */\r\n\tmonths: [\r\n\t\t'January',\r\n\t\t'February',\r\n\t\t'March',\r\n\t\t'April',\r\n\t\t'May',\r\n\t\t'June',\r\n\t\t'July',\r\n\t\t'August',\r\n\t\t'September',\r\n\t\t'October',\r\n\t\t'November',\r\n\t\t'December',\r\n\t],\r\n\trelativeTime: {\r\n\t\tfuture: 'in %s',\r\n\t\tpast: '%s ago',\r\n\t\ts: 'a few seconds',\r\n\t\tm: 'a minute',\r\n\t\tmm: '%d minutes',\r\n\t\th: 'an hour',\r\n\t\thh: '%d hours',\r\n\t\td: 'a day',\r\n\t\tdd: '%d days',\r\n\t\tM: 'a month',\r\n\t\tMM: '%d months',\r\n\t\ty: 'a year',\r\n\t\tyy: '%d years'\r\n\t} as DayutsRelativeTime,\r\n\t/**\r\n\t * 序数函数，用于将数字转换为带有序数后缀的字符串。\r\n\t *\r\n\t * @param {number} n - 要转换的数字。\r\n\t * @returns {string} 带有序数后缀的字符串。\r\n\t */\r\n\tordinal: (n : number, _ : string) : string => {\r\n\t\tconst s = ['th', 'st', 'nd', 'rd']\r\n\t\tconst v = n % 100\r\n\t\tconst i = (v - 20) % 10\r\n\t\tconst k = i < s.length ? i : v < s.length ? v : 0\r\n\t\treturn `[${n}${(s[k])}]`\r\n\t},\r\n} as DayutsLocale","// @ts-nocheck\nimport type { DayutsLocale, DayutsRelativeTime, DayutsFormats } from '../../../utssdk/interface';\nconst locale: DayutsLocale = {\n    name: 'zh-cn',\n    weekdays: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    weekdaysShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    weekdaysMin: ['日', '一', '二', '三', '四', '五', '六'],\n    months: [\n        '一月', '二月', '三月', '四月', '五月', '六月',\n        '七月', '八月', '九月', '十月', '十一月', '十二月'\n    ],\n    monthsShort: [\n        '1月', '2月', '3月', '4月', '5月', '6月',\n        '7月', '8月', '9月', '10月', '11月', '12月'\n    ],\n    ordinal: (number: number, period: string): string => {\n        // switch (period) {\n        // \tcase 'W':\n        // \t\treturn `${number}周`;\n        // \tdefault:\n        // \t\treturn `${number}日`;\n        // }\n        if (period == 'W') {\n            return `${number}周`;\n        }\n        return `${number}日`;\n    },\n    weekStart: 1,\n    yearStart: 4,\n    formats: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日Ah点mm分',\n        LLLL: 'YYYY年M月D日ddddAh点mm分',\n        l: 'YYYY/M/D',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日dddd HH:mm'\n    } as DayutsFormats,\n    relativeTime: {\n        future: '%s内',\n        past: '%s前',\n        s: '几秒',\n        m: '1 分钟',\n        mm: '%d 分钟',\n        h: '1 小时',\n        hh: '%d 小时',\n        d: '1 天',\n        dd: '%d 天',\n        M: '1 个月',\n        MM: '%d 个月',\n        y: '1 年',\n        yy: '%d 年'\n    } as DayutsRelativeTime,\n    meridiem: (hour: number, minute: number, _: boolean): string => {\n        const hm = (hour * 100) + minute;\n        if (hm < 600) {\n            return '凌晨';\n        }\n        else if (hm < 900) {\n            return '早上';\n        }\n        else if (hm < 1100) {\n            return '上午';\n        }\n        else if (hm < 1300) {\n            return '中午';\n        }\n        else if (hm < 1800) {\n            return '下午';\n        }\n        return '晚上';\n    }\n};\nexport default locale;\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\nimport type { DayutsLocale, DayutsRelativeTime, DayutsFormats } from '../../../utssdk/interface'\r\n\r\nconst locale : DayutsLocale = {\r\n\tname: 'zh-cn',\r\n\tweekdays: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\r\n\tweekdaysShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n\tweekdaysMin: ['日', '一', '二', '三', '四', '五', '六'],\r\n\tmonths: [\r\n\t\t'一月', '二月', '三月', '四月', '五月', '六月',\r\n\t\t'七月', '八月', '九月', '十月', '十一月', '十二月'\r\n\t],\r\n\tmonthsShort: [\r\n\t\t'1月', '2月', '3月', '4月', '5月', '6月',\r\n\t\t'7月', '8月', '9月', '10月', '11月', '12月'\r\n\t],\r\n\tordinal: (number:number, period:string):string => {\r\n\t\t// switch (period) {\r\n\t\t// \tcase 'W':\r\n\t\t// \t\treturn `${number}周`;\r\n\t\t// \tdefault:\r\n\t\t// \t\treturn `${number}日`;\r\n\t\t// }\r\n\t\tif(period == 'W'){\r\n\t\t\treturn `${number}周`;\r\n\t\t}\r\n\t\treturn `${number}日`\r\n\t},\r\n\tweekStart: 1,\r\n\tyearStart: 4,\r\n\tformats: {\r\n\t\tLT: 'HH:mm',\r\n\t\tLTS: 'HH:mm:ss',\r\n\t\tL: 'YYYY/MM/DD',\r\n\t\tLL: 'YYYY年M月D日',\r\n\t\tLLL: 'YYYY年M月D日Ah点mm分',\r\n\t\tLLLL: 'YYYY年M月D日ddddAh点mm分',\r\n\t\tl: 'YYYY/M/D',\r\n\t\tll: 'YYYY年M月D日',\r\n\t\tlll: 'YYYY年M月D日 HH:mm',\r\n\t\tllll: 'YYYY年M月D日dddd HH:mm'\r\n\t} as DayutsFormats,\r\n\trelativeTime: {\r\n\t\tfuture: '%s内',\r\n\t\tpast: '%s前',\r\n\t\ts: '几秒',\r\n\t\tm: '1 分钟',\r\n\t\tmm: '%d 分钟',\r\n\t\th: '1 小时',\r\n\t\thh: '%d 小时',\r\n\t\td: '1 天',\r\n\t\tdd: '%d 天',\r\n\t\tM: '1 个月',\r\n\t\tMM: '%d 个月',\r\n\t\ty: '1 年',\r\n\t\tyy: '%d 年'\r\n\t} as DayutsRelativeTime,\r\n\tmeridiem: (hour:number, minute:number, _ : boolean):string => {\r\n\t\tconst hm = (hour * 100) + minute;\r\n\t\tif (hm < 600) {\r\n\t\t\treturn '凌晨';\r\n\t\t} else if (hm < 900) {\r\n\t\t\treturn '早上';\r\n\t\t} else if (hm < 1100) {\r\n\t\t\treturn '上午';\r\n\t\t} else if (hm < 1300) {\r\n\t\t\treturn '中午';\r\n\t\t} else if (hm < 1800) {\r\n\t\t\treturn '下午';\r\n\t\t}\r\n\t\treturn '晚上';\r\n\t}\r\n};\r\n\r\nexport default locale;","// @ts-nocheck\nimport { DayutsLocale } from '../utssdk/interface';\nimport en from './locale/en';\nimport zhCn from './locale/zh-cn';\nconst localesMap = new Map<string, DayutsLocale>();\n//定义一个大写的State类型\ntype LocaleState = {\n    lang: string;\n    locales: Map<string, DayutsLocale>;\n};\nexport let localeState = reactive({\n    lang: 'en',\n    locales: localesMap\n} as LocaleState);\nlocaleState.locales.set('en', en);\nlocaleState.locales.set('zh-cn', zhCn);\nclass DayutsIntl {\n    constructor() { }\n    use(locale: DayutsLocale): DayutsIntl {\n        localeState.locales.set(locale.name, locale);\n        return this;\n    }\n    set locale(locale: string) {\n        if (localeState.locales.has(locale)) {\n            localeState.lang = locale;\n        }\n        else {\n            let list: string[] = [];\n            localeState.locales.forEach(function (_: any, key: string) {\n                list.push(key);\n            });\n            __f__('warn', 'at uni_modules/lime-dayuts/common/use.ts:46', `未知语言: \"${locale}\". 请使用以下已知语言之一:${list.join(', ')}`);\n        }\n    }\n    get locale(): string {\n        return localeState.lang;\n    }\n    set(name: string, locale: DayutsLocale) {\n        localeState.locales.set(name, locale);\n    }\n    has(name: string): boolean {\n        return localeState.locales.has(name);\n    }\n}\nexport const dayutsIntl = new DayutsIntl();\n// const dyauts = use(xx).use(xx).use(xx).use(xx)\n// dyauts.locale ='zh'\n//# sourceMappingURL=use.uts.map","// @ts-nocheck\nimport {DayutsLocale} from '../utssdk/interface'\nimport en from './locale/en'\nimport zhCn from './locale/zh-cn'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst localesMap = new Map<string, DayutsLocale>()\n//定义一个大写的State类型\ntype LocaleState = {\n  lang: string;\n  locales: Map<string, DayutsLocale>\n}\nexport let localeState = reactive({\n  lang: 'en',\n  locales: localesMap\n} as LocaleState)\nlocaleState.locales.set('en', en)\nlocaleState.locales.set('zh-cn', zhCn)\n\nclass DayutsIntl {\n\tconstructor(){}\n\tuse(locale:DayutsLocale):DayutsIntl{\n\t\tlocaleState.locales.set(locale.name, locale)\n\t\treturn this\n\t}\n\tset locale(locale: string){\n\t\tif(localeState.locales.has(locale)){\n\t\t\tlocaleState.lang = locale\n\t\t} else {\n\t\t\tlet list:string[] = []\n\t\t\tlocaleState.locales.forEach(function(_:any,key:string){\n\t\t\t   list.push(key)\n\t\t\t})\n\t\t\t__f__('warn','at uni_modules/lime-dayuts/common/use.ts:46',`未知语言: \"${locale}\". 请使用以下已知语言之一:${list.join(', ')}`);\n\t\t}\n\t}\n\tget locale(): string{\n\t\treturn localeState.lang\n\t}\n\tset(name: string, locale:DayutsLocale){\n\t\tlocaleState.locales.set(name, locale)\n\t}\n\thas(name: string):boolean{\n\t\treturn localeState.locales.has(name)\n\t}\n}\nexport const dayutsIntl = new DayutsIntl()\n\n\n// const dyauts = use(xx).use(xx).use(xx).use(xx)\n// dyauts.locale ='zh'","// @ts-nocheck\nimport { DayutsConfig, type DayutsLocale, DayutsUnit, DayutsObject } from '../utssdk/interface';\nimport { REGEX_FORMAT, REGEX_PARSE, INVALID_DATE_STRING, M, Y, W, D, DATE, H, MIN, S, MS, Q, MILLISECONDS_A_MINUTE, MILLISECONDS_A_HOUR, MILLISECONDS_A_SECOND, MILLISECONDS_A_WEEK, MILLISECONDS_A_DAY, FORMAT_DEFAULT } from './constant';\nimport { isNumber, prettyUnit, padStart, padZoneStr, monthDiff, absFloor } from './utils';\nimport { dayutsIntl, localeState } from './use';\ntype Threshold = {\n    l: string;\n    r?: number;\n    d?: DayutsUnit;\n};\nfunction parseLocale(preset: string | null): string | null;\nfunction parseLocale(preset: DayutsLocale | null): string | null;\nfunction parseLocale(preset: string, object: DayutsLocale | null, isLocal: boolean): string | null;\nfunction parseLocale(preset: DayutsLocale, object: DayutsLocale, isLocal: boolean): string | null;\nfunction parseLocale(preset: any | null, object: DayutsLocale | null = null, isLocal: boolean = false): string | null {\n    let l: string | null = null;\n    if (preset == null)\n        return dayutsIntl.locale;\n    if (typeof preset == 'string') {\n        const presetLower = (preset as string).toLowerCase();\n        if (dayutsIntl.has(presetLower)) {\n            l = presetLower;\n        }\n        if (object != null) {\n            dayutsIntl.set(presetLower, object);\n            l = presetLower;\n        }\n        const presetSplit = (preset as string).split('-');\n        if (l == null && presetSplit.length > 1) {\n            return parseLocale(presetSplit[0]);\n        }\n    }\n    else if (preset instanceof DayutsLocale) {\n        // const { name } = preset as DayutsLocale\n        dayutsIntl.set(preset.name, preset);\n        l = preset.name;\n    }\n    if (!isLocal && l != null) {\n        // L = l\n        dayutsIntl.locale = l;\n    }\n    // return l ?? L //(!isLocal && L != null)\n    return l ?? dayutsIntl.locale; //(!isLocal && L != null)\n}\nfunction tryParseNumberAtIndex(digits: (any | null)[], index: number): number | null {\n    // 检查索引是否在数组范围内\n    if (index >= 0 && index < digits.length) {\n        if (digits[index] == null)\n            return null;\n        // 尝试解析索引位置的字符串为数字\n        const parsedNumber = isNumber(digits[index]) ? digits[index] as number : parseInt(`${digits[index]}`, 10);\n        // 检查解析结果是否为有效数字\n        if (!isNaN(parsedNumber)) {\n            return parsedNumber;\n        }\n    }\n    return null;\n}\n// function createDateFromArray(d: number[]):Date\n// function createDateFromArray(d: string[]):Date\nfunction createDateFromArray(d: (any | null)[], offset: number = 0): Date {\n    const year = tryParseNumberAtIndex(d, 1 - offset) ?? new Date().getFullYear();\n    const month = (tryParseNumberAtIndex(d, 2 - offset) ?? 1) - 1;\n    const day = tryParseNumberAtIndex(d, 3 - offset) ?? 1;\n    const hour = tryParseNumberAtIndex(d, 4 - offset) ?? 0;\n    const minute = tryParseNumberAtIndex(d, 5 - offset) ?? 0;\n    const second = tryParseNumberAtIndex(d, 6 - offset) ?? 0;\n    const millisecond = (tryParseNumberAtIndex(d, 7 - offset) ?? 0).toString(10).substring(0, 3); //d.length > 7 ? parseInt((d[7] ?? '0').substring(0, 3)) : 0\n    return new Date(year, month, day, hour, minute, second, parseInt(millisecond));\n}\nfunction parseDate(cfg: DayutsConfig): Date | null {\n    const { date } = cfg;\n    if (date == null)\n        return new Date();\n    if (date instanceof Date)\n        return date as Date;\n    try {\n        if (typeof date == 'string' && /^\\d+$/.test(date as string)) {\n            return new Date(parseInt(`${date as string}`.padEnd(13, '0')));\n        }\n        if (typeof date == 'string' && !/Z$/i.test(date as string)) {\n            const d = (date as string).match(REGEX_PARSE);\n            const isNull = d == null || Array.isArray(d) && d.length == 0;\n            if (!isNull) {\n                return createDateFromArray(d as (any | null)[]);\n            }\n        }\n        if (typeof date == 'string')\n            return new Date(date as string);\n        if (Array.isArray(date)) {\n            return createDateFromArray(date as (any | null)[], 1);\n        }\n        if (isNumber(date))\n            return new Date(date as number);\n        return null; //new Date()\n    }\n    catch (err: any) {\n        return null; //new Date()\n    }\n}\nfunction wrapper(date: any, instance: Dayuts): Dayuts {\n    return dayuts(date, instance.$L);\n}\nexport class Dayuts {\n    $L: string;\n    private valid: boolean = true;\n    private $d: Date = new Date();\n    private $y: number = 0;\n    private $M: number = 0;\n    private $D: number = 0;\n    private $W: number = 0;\n    private $H: number = 0;\n    private $m: number = 0;\n    private $s: number = 0;\n    private $ms: number = 0;\n    private $u: boolean = false;\n    constructor(cfg: DayutsConfig) {\n        this.$L = parseLocale(cfg.locale) ?? dayutsIntl.locale; //'en'\n        this.parse(cfg);\n    }\n    parse(cfg: DayutsConfig) {\n        const _d = parseDate(cfg);\n        if (_d != null) {\n            this.$d = parseDate(cfg)!;\n            this.init();\n        }\n        else {\n            this.valid = false;\n        }\n    }\n    init() {\n        const { $d } = this;\n        this.$y = $d.getFullYear();\n        this.$M = $d.getMonth();\n        this.$D = $d.getDate();\n        this.$W = $d.getDay();\n        this.$H = $d.getHours();\n        this.$m = $d.getMinutes();\n        this.$s = $d.getSeconds();\n        this.$ms = $d.getMilliseconds();\n    }\n    /**\n     * 检查日期对象是否有效。\n     *\n     * @returns {boolean} 如果日期对象有效，则返回true；否则返回false。\n     */\n    isValid(): boolean {\n        return this.valid;\n        // return !(this.$d.toString() == INVALID_DATE_STRING)\n    }\n    /**\n     * 检查当前日期是否与给定的日期在指定的时间单位内相同。\n     *\n     * @param {string|number|Date} input - 要比较的日期。\n     * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\n     * @returns {boolean} 如果当前日期与给定的日期在指定的时间单位内相同，则返回true；否则返回false。\n     */\n    isSame(input: string): boolean;\n    isSame(input: number): boolean;\n    isSame(input: Date): boolean;\n    isSame(input: Dayuts): boolean;\n    isSame(input: UTSJSONObject): boolean;\n    isSame(input: string, units: DayutsUnit): boolean;\n    isSame(input: number, units: DayutsUnit): boolean;\n    isSame(input: Date, units: DayutsUnit): boolean;\n    isSame(input: Dayuts, units: DayutsUnit): boolean;\n    isSame(input: UTSJSONObject, units: DayutsUnit): boolean;\n    isSame(input: any, units: DayutsUnit = 'millisecond'): boolean {\n        const other = input instanceof Dayuts ? input as Dayuts : dayuts(input);\n        const date1 = this.startOf(units).valueOf();\n        const date2 = other.valueOf();\n        const date3 = this.endOf(units).valueOf();\n        return date1 <= date2 && date2 <= date3;\n    }\n    /**\n     * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之后。\n     *\n     * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\n     * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之后，则返回 `true`，否则返回 `false`。\n     */\n    isAfter(input: string): boolean;\n    isAfter(input: number): boolean;\n    isAfter(input: Date): boolean;\n    isAfter(input: Dayuts): boolean;\n    isAfter(input: UTSJSONObject): boolean;\n    isAfter(input: string, units: DayutsUnit): boolean;\n    isAfter(input: number, units: DayutsUnit): boolean;\n    isAfter(input: Date, units: DayutsUnit): boolean;\n    isAfter(input: Dayuts, units: DayutsUnit): boolean;\n    isAfter(input: UTSJSONObject, units: DayutsUnit): boolean;\n    isAfter(input: any, units: DayutsUnit = 'millisecond'): boolean {\n        const other = input instanceof Dayuts ? input as Dayuts : dayuts(input);\n        const date1 = other.valueOf();\n        const date2 = this.startOf(units).valueOf();\n        return date1 < date2;\n    }\n    /**\n     * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之前。\n     *\n     * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\n     * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之前，则返回 `true`，否则返回 `false`。\n     */\n    isBefore(input: string): boolean;\n    isBefore(input: number): boolean;\n    isBefore(input: Date): boolean;\n    isBefore(input: Dayuts): boolean;\n    isBefore(input: UTSJSONObject): boolean;\n    isBefore(input: string, units: DayutsUnit): boolean;\n    isBefore(input: number, units: DayutsUnit): boolean;\n    isBefore(input: Date, units: DayutsUnit): boolean;\n    isBefore(input: Dayuts, units: DayutsUnit): boolean;\n    isBefore(input: UTSJSONObject, units: DayutsUnit): boolean;\n    isBefore(input: any, units: DayutsUnit = 'millisecond'): boolean {\n        const other = input instanceof Dayuts ? input as Dayuts : dayuts(input);\n        const date1 = other.valueOf();\n        const date2 = this.endOf(units).valueOf();\n        return date2 < date1;\n    }\n    /**\n     * 判断当前Dayuts对象是否与给定的输入在同一时间或之前，根据指定的时间单位\n     * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\n     * @param {DayutsUnit} units - 指定的时间单位\n     * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之前，则返回true，否则返回false\n     */\n    isSameOrBefore(input: string): boolean;\n    isSameOrBefore(input: number): boolean;\n    isSameOrBefore(input: Date): boolean;\n    isSameOrBefore(input: Dayuts): boolean;\n    isSameOrBefore(input: UTSJSONObject): boolean;\n    isSameOrBefore(input: string, units: DayutsUnit): boolean;\n    isSameOrBefore(input: number, units: DayutsUnit): boolean;\n    isSameOrBefore(input: Date, units: DayutsUnit): boolean;\n    isSameOrBefore(input: Dayuts, units: DayutsUnit): boolean;\n    isSameOrBefore(input: UTSJSONObject, units: DayutsUnit): boolean;\n    isSameOrBefore(input: any, units: DayutsUnit = 'millisecond'): boolean {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n    /**\n     * 判断当前Dayuts对象是否与给定的输入在同一时间或之后，根据指定的时间单位\n     * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\n     * @param {DayutsUnit} units - 指定的时间单位\n     * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之后，则返回true，否则返回false\n     */\n    isSameOrAfter(input: string): boolean;\n    isSameOrAfter(input: number): boolean;\n    isSameOrAfter(input: Date): boolean;\n    isSameOrAfter(input: Dayuts): boolean;\n    isSameOrAfter(input: UTSJSONObject): boolean;\n    isSameOrAfter(input: string, units: DayutsUnit): boolean;\n    isSameOrAfter(input: number, units: DayutsUnit): boolean;\n    isSameOrAfter(input: Date, units: DayutsUnit): boolean;\n    isSameOrAfter(input: Dayuts, units: DayutsUnit): boolean;\n    isSameOrAfter(input: UTSJSONObject, units: DayutsUnit): boolean;\n    isSameOrAfter(input: any, units: DayutsUnit = 'millisecond'): boolean {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n    /**\n     * 判断当前Dayuts对象是否在给定的两个时间之间\n     * @param {any} input - 第一个时间输入\n     * @param {any} input2 - 第二个时间输入\n     * @param {DayutsUnit} units - 指定的时间单位\n     * @param {string} interval - 区间符号，表示区间的开闭性，默认为'()'，表示开区间\n     * @returns {boolean} - 如果当前Dayuts对象在给定的两个时间之间，则返回true，否则返回false\n     */\n    isBetween(input: any, input2: any, units: DayutsUnit = 'millisecond', interval: string = '()'): boolean {\n        const dA = dayuts(input);\n        const dB = dayuts(input2);\n        const dAi = interval.startsWith('(');\n        const dBi = interval.endsWith(')');\n        return ((dAi ? this.isAfter(dA, units) : !this.isBefore(dA, units)) &&\n            (dBi ? this.isBefore(dB, units) : !this.isAfter(dB, units)))\n            || ((dAi ? this.isBefore(dA, units) : !this.isAfter(dA, units)) &&\n                (dBi ? this.isAfter(dB, units) : !this.isBefore(dB, units)));\n    }\n    /**\n     * 判断当前Dayuts对象所在的年份是否为闰年\n     * @returns {boolean} - 如果当前Dayuts对象所在的年份是闰年，则返回true，否则返回false\n     */\n    isLeapYear(): boolean {\n        return ((this.$y % 4 == 0) && (this.$y % 100 != 0)) || (this.$y % 400 == 0);\n    }\n    isToday(): boolean {\n        const comparisonTemplate = 'YYYY-MM-DD';\n        const now = dayuts();\n        return this.format(comparisonTemplate) == now.format(comparisonTemplate);\n    }\n    /**\n     * 获取当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\n     *\n     * @returns {number} 返回当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\n     */\n    unix(): number {\n        return Math.floor(this.valueOf() / 1000);\n    }\n    /**\n     * 将当前日期设置为指定时间单位的开始或结束。\n     *\n     * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\n     * @param {boolean} startOf - 如果为true，则设置为开始；如果为false，则设置为结束。\n     * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\n     */\n    startOf(units: DayutsUnit, startOf: boolean = true): Dayuts {\n        const isStartOf = startOf;\n        const unit = prettyUnit(units);\n        // instanceFactory 函数用于创建一个新的 Dayuts 对象，表示给定日期的开始或结束。\n        // 参数 d 和 m 分别表示日期和月份。\n        const instanceFactory = (d: number, m: number): Dayuts => {\n            const ins = dayuts(new Date(this.$y, m, d));\n            return isStartOf ? ins : ins.endOf(D);\n        };\n        // instanceFactorySet 函数用于创建一个新的 Dayuts 对象，表示调整后的时间。\n        // 参数 method 表示要调用的 Date 对象的方法（如 'setHours'），slice 表示要调整的时间部分的索引。\n        const instanceFactorySet = (method: string, slice: number): Dayuts => {\n            // 定义表示开始和结束时间的参数数组。\n            const argumentStart = [0, 0, 0, 0];\n            const argumentEnd = [23, 59, 59, 999];\n            // 根据 isStartOf 的值，选择开始或结束时间的参数数组，并调用 Date 对象的方法。\n            const args = (isStartOf ? argumentStart : argumentEnd).slice(slice);\n            const date = this.toDate();\n            if (method == 'setHours') {\n                date.setHours(args[0]);\n                date.setMinutes(args[1]);\n                date.setSeconds(args[2]);\n                date.setMilliseconds(args[3]);\n            }\n            else if (method == 'setMinutes') {\n                date.setMinutes(args[0]);\n                date.setSeconds(args[1]);\n                date.setMilliseconds(args[2]);\n            }\n            else if (method == 'setSeconds') {\n                date.setSeconds(args[0]);\n                date.setMilliseconds(args[1]);\n            }\n            else if (method == 'setMilliseconds') {\n                date.setMilliseconds(args[0]);\n            }\n            return dayuts(date);\n        };\n        const { $W, $M, $D } = this;\n        const utcPad = `set${this.$u ? 'UTC' : ''}`;\n        if (unit == Y) {\n            return isStartOf ? instanceFactory(1, 0) : instanceFactory(31, 11);\n        }\n        else if (unit == M) {\n            return isStartOf ? instanceFactory(1, $M) : instanceFactory(0, $M + 1);\n        }\n        else if (unit == W) {\n            const weekStart = this.$locale().weekStart ?? 0;\n            const gap = ($W < weekStart ? $W + 7 : $W) - weekStart;\n            return instanceFactory(isStartOf ? $D - gap : $D + (6 - gap), $M);\n        }\n        else if (unit == D || unit == DATE) {\n            return instanceFactorySet(`${utcPad}Hours`, 0);\n        }\n        else if (unit == H) {\n            return instanceFactorySet(`${utcPad}Minutes`, 1);\n        }\n        else if (unit == MIN) {\n            return instanceFactorySet(`${utcPad}Seconds`, 2);\n        }\n        else if (unit == S) {\n            return instanceFactorySet(`${utcPad}Milliseconds`, 3);\n        }\n        else {\n            return this.clone();\n        }\n    }\n    /**\n     * 将当前日期设置为指定时间单位的结束。\n     *\n     * @param {string} arg - 时间单位，例如'year'、'month'、'day'等。\n     * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\n     */\n    endOf(units: DayutsUnit): Dayuts {\n        return this.startOf(units, false);\n    }\n    /**\n     * 设置指定的时间单位的值。\n     *\n     * @param {string} units - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @param {number} int - 要设置的值。\n     * @returns {Dayuts} 返回当前对象。\n     */\n    private $set(units: DayutsUnit, int: number): Dayuts {\n        const unit = prettyUnit(units);\n        // const utcPad = `set${this.$u ? 'UTC' : ''}`\n        const arg = unit == D ? this.$D + (int - this.$W) : int;\n        const setDateUnit = (date: Dayuts, unit: DayutsUnit, arg: number) => {\n            if (unit == D || unit == DATE) {\n                date.$d.setDate(arg);\n            }\n            else if (unit == M) {\n                date.$d.setMonth(arg);\n            }\n            else if (unit == Y) {\n                date.$d.setFullYear(arg);\n            }\n            else if (unit == H) {\n                date.$d.setHours(arg);\n            }\n            else if (unit == MIN) {\n                date.$d.setMinutes(arg);\n            }\n            else if (unit == S) {\n                date.$d.setSeconds(arg);\n            }\n            else if (unit == MS) {\n                date.$d.setMilliseconds(arg);\n            }\n        };\n        if (unit == M || unit == Y) {\n            // clone is for badMutable plugin\n            const date = this.clone().set(DATE, 1);\n            // date.$d[name](arg)\n            setDateUnit(date, unit, arg);\n            date.init();\n            this.$d = date.set(DATE, Math.min(this.$D, date.daysInMonth())).$d;\n        }\n        else {\n            setDateUnit(this, unit, arg);\n            // this.$d[name](arg)\n        }\n        this.init();\n        return this;\n    }\n    /**\n     * 创建一个当前对象的副本，并设置指定的时间单位的值。\n     *\n     * @param {string} string - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @param {number} int - 要设置的值。\n     * @returns {Dayuts} 返回一个新的 `dayuts` 对象，其值为当前对象的副本，并设置了指定的时间单位的值。\n     */\n    set(string: DayutsUnit, int: number): Dayuts {\n        return this.clone().$set(string, int);\n    }\n    /**\n     * 获取当前 `dayuts` 对象的指定时间单位的值。\n     *\n     * @param {string} units - 要获取的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @returns {number} 返回当前 `dayuts` 对象的指定时间单位的值。\n     */\n    get(units: DayutsUnit): number {\n        const unit = prettyUnit(units);\n        if (unit == D) {\n            return this.day();\n        }\n        else if (unit == DATE) {\n            return this.date();\n        }\n        else if (unit == M) {\n            return this.month();\n        }\n        else if (unit == Y) {\n            return this.year();\n        }\n        else if (unit == H) {\n            return this.hour();\n        }\n        else if (unit == MIN) {\n            return this.minute();\n        }\n        else if (unit == S) {\n            return this.second();\n        }\n        else if (unit == MS) {\n            return this.millisecond();\n        }\n        return 0;\n    }\n    /**\n     * 获取或设置年份。\n     * @param {number | null} [input] - 要设置的年份。\n     * @returns {number | Dayuts} 年份或 Dayuts 实例。\n     */\n    year(): number;\n    year(input: number): Dayuts;\n    year(input: number | null = null): any {\n        if (input == null)\n            return this.$y;\n        return this.set(Y, input);\n    }\n    /**\n     * 获取或设置月份。\n     * @param {number | null} [input] - 要设置的月份（0-11）。\n     * @returns {number | Dayuts} 月份或 Dayuts 实例。\n     */\n    month(): number;\n    month(input: number): Dayuts;\n    month(input: number | null = null): any {\n        if (input == null)\n            return this.$M;\n        return this.set(M, input);\n    }\n    /**\n     * 获取或设置星期几。\n     * @param {number | null} [input] - 要设置的星期几（0-6）。\n     * @returns {number | Dayuts} 星期几或 Dayuts 实例。\n     */\n    day(): number;\n    day(input: number): Dayuts;\n    day(input: number | null = null): any {\n        if (input == null)\n            return this.$W;\n        return this.set(D, input);\n    }\n    /**\n     * 获取或设置月份中的某一天。\n     * @param {number | null} [input] - 要设置的月份中的某一天（1-31）。\n     * @returns {number | Dayuts} 月份中的某一天或 Dayuts 实例。\n     */\n    date(): number;\n    date(input: number): Dayuts;\n    date(input: number | null = null): any {\n        if (input == null)\n            return this.$D;\n        return this.set(DATE, input);\n    }\n    /**\n     * 获取或设置小时。\n     * @param {number | null} [input] - 要设置的小时（0-23）。\n     * @returns {number | Dayuts} 小时或 Dayuts 实例。\n     */\n    hour(): number;\n    hour(input: number): Dayuts;\n    hour(input: number | null = null): any {\n        if (input == null)\n            return this.$H;\n        return this.set(H, input);\n    }\n    /**\n     * 获取或设置分钟。\n     * @param {number | null} [input] - 要设置的分钟（0-59）。\n     * @returns {number | Dayuts} 分钟或 Dayuts 实例。\n     */\n    minute(): number;\n    minute(input: number): Dayuts;\n    minute(input: number | null = null): any {\n        if (input == null)\n            return this.$m;\n        return this.set(MIN, input);\n    }\n    /**\n     * 获取或设置秒。\n     * @param {number | null} [input] - 要设置的秒（0-59）。\n     * @returns {number | Dayuts} 秒或 Dayuts 实例。\n     */\n    second(): number;\n    second(input: number): Dayuts;\n    second(input: number | null = null): any {\n        if (input == null)\n            return this.$s;\n        return this.set(S, input);\n    }\n    /**\n     * 获取或设置毫秒。\n     * @param {number | null} [input] - 要设置的毫秒（0-999）。\n     * @returns {number | Dayuts} 毫秒或 Dayuts 实例。\n     */\n    millisecond(): number;\n    millisecond(input: number): Dayuts;\n    millisecond(input: number | null = null): any {\n        if (input == null)\n            return this.$ms;\n        return this.set(MS, input);\n    }\n    /**\n     * 在当前 Dayuts 实例上添加指定的时间长度。\n     * @param {number} number - 要添加的时间长度。\n     * @param {string} units - 要添加的时间单位（例如，“years”，“months”，“days”等）。\n     * @returns {Dayuts} 更新的 Dayuts 实例。\n     */\n    add(number: number, units: DayutsUnit): Dayuts {\n        const unit = prettyUnit(units);\n        // 创建一个新的 Dayuts 实例，并根据给定的 n 值设置日期。\n        // n 值乘以 number 参数，然后加到当前日期上，以设置新的日期。\n        const instanceFactorySet = (n: number): Dayuts => {\n            // 创建一个新的 Dayuts 实例，它是当前实例的副本\n            const d = dayuts(this);\n            // 设置新的日期并返回更新后的 Dayuts 实例\n            return d.date(d.date() + Math.round(n * number)); //Utils.w(d.date(d.date() + Math.round(n * number)), this)\n        };\n        if (unit == M) {\n            return this.set(M, this.$M + number);\n        }\n        if (unit == Y) {\n            return this.set(Y, this.$y + number);\n        }\n        if (unit == D) {\n            return instanceFactorySet(1);\n        }\n        if (unit == W) {\n            return instanceFactorySet(7);\n        }\n        const steps = new Map<string, number>([\n            [MIN, MILLISECONDS_A_MINUTE],\n            [H, MILLISECONDS_A_HOUR],\n            [S, MILLISECONDS_A_SECOND],\n        ]);\n        const step = steps.get(unit) ?? 1;\n        const nextTimeStamp = this.$d.getTime() + (number * step);\n        return wrapper(nextTimeStamp, this);\n    }\n    /**\n     * 从当前 Dayuts 实例中减去指定的时间。\n     * @param {number} number - 要减去的时间。\n     * @param {string} units - 要减去的时间单位（例如，“years”，“months”，“days”等）。\n     * @returns {Dayuts} 更新的 Dayuts 实例。\n     */\n    subtract(number: number, units: DayutsUnit): Dayuts {\n        // 通过将 number 乘以 -1，然后调用 add 方法来实现减法操作\n        return this.add(number * -1, units);\n    }\n    /**\n     * 日期格式化\n     * @param {string} formatStr - 格式化字符串，包含各种格式化占位符（例如，“YYYY-MM-DD”，“HH:mm:ss”等）。\n     * @returns {string} 格式化后的日期字符串。\n     */\n    format(formatStr: string | null = null): string {\n        const locale = this.$locale();\n        if (!this.isValid())\n            return INVALID_DATE_STRING; // locale.invalidDate || INVALID_DATE_STRING;\n        const str = formatStr ?? FORMAT_DEFAULT;\n        // @ts-ignore\n        const zoneStr = padZoneStr(this);\n        const { $H, $m, $M } = this;\n        const { weekdays, months, meridiem } = locale;\n        /**\n         * 从给定的数组中获取缩写或完整的字符串。\n         * @param {Array} arr - 包含缩写字符串的数组。\n         * @param {number} index - 数组中要获取的元素的索引。\n         * @param {Array} full - 包含完整字符串的数组。\n         * @param {number} length - 要返回的字符串的长度。\n         * @returns {string} 缩写或完整的字符串。\n         */\n        function getShort(arr: string[] | null, index: number, full: string[] = [], length: number = 0): string {\n            if (arr != null && arr.length >= index) {\n                return arr[index];\n            }\n            else if (full.length >= index) {\n                return full[index].slice(0, length);\n            }\n            return '';\n        }\n        ;\n        /**\n         * 获取12小时制的小时数。\n         * @param {number} num - 小时数的位数。\n         * @returns {string} 12小时制的小时数字符串。\n         */\n        const get$H = (num: number): string => padStart(($H % 12 == 0 ? 12 : $H % 12).toString(10), num, '0');\n        /**\n         * 获取上午或下午的字符串表示。\n         * @param {number} hour - 小时数。\n         * @param {number} minute - 分钟数。\n         * @param {boolean} isLowercase - 是否返回小写字符串。\n         * @returns {string} 上午或下午的字符串表示。\n         */\n        const meridiemFunc = meridiem ?? ((hour: number, _: number, isLowercase: boolean): string => {\n            const m = (hour < 12 ? 'AM' : 'PM');\n            return isLowercase ? m.toLowerCase() : m;\n        });\n        return str.replace('YYYY', padStart(this.$y.toString(10), 4, '0'))\n            .replace('YY', (this.$y).toString(10).slice(-2))\n            .replace('MMMM', getShort(months, $M))\n            .replace('MM', padStart(($M + 1).toString(10), 2, '0'))\n            .replace('M', ($M + 1).toString(10))\n            .replace('DD', padStart(this.$D.toString(10), 2, '0'))\n            .replace('D', this.$D.toString(10))\n            .replace('dddd', weekdays[this.$W])\n            .replace('ddd', getShort(locale.weekdaysShort, this.$W, weekdays, 3))\n            .replace('dd', getShort(locale.weekdaysMin, this.$W, weekdays, 2))\n            .replace('d', this.$W.toString(10))\n            .replace('HH', padStart($H.toString(10), 2, '0'))\n            .replace('H', $H.toString(10))\n            .replace('hh', get$H(2))\n            .replace('h', get$H(1))\n            .replace('mm', padStart($m.toString(10), 2, '0'))\n            .replace('m', $m.toString(10))\n            .replace('ss', padStart(this.$s.toString(10), 2, '0'))\n            .replace('s', this.$s.toString(10))\n            .replace('SSS', padStart(this.$ms.toString(10), 3, '0'))\n            .replace('A', meridiemFunc($H, $m, false))\n            .replace('a', meridiemFunc($H, $m, true))\n            .replace('Z', zoneStr);\n    }\n    /**\n     * 获取 Dayuts 实例的 UTC 偏移量（以分钟为单位）。\n     * @returns {number} UTC 偏移量（以分钟为单位）。\n     */\n    utcOffset(): number {\n        // Because a bug at FF24, we're rounding the timezone offset around 15 minutes\n        // https://github.com/moment/moment/pull/1871\n        return 0;\n    }\n    /**\n     * 计算两个日期之间的差值\n     * @param {string|number|Date|Dayuts} input - 要比较的日期\n     * @param {string} units - 要计算的时间单位，如 'years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'\n     * @param {boolean} float - 是否返回浮点数结果\n     * @returns {number} 返回两个日期之间的差值\n     */\n    diff(input: string): number;\n    diff(input: number): number;\n    diff(input: Date): number;\n    diff(input: Dayuts): number;\n    diff(input: UTSJSONObject): number;\n    diff(input: string, units: DayutsUnit): number;\n    diff(input: number, units: DayutsUnit): number;\n    diff(input: Date, units: DayutsUnit): number;\n    diff(input: Dayuts, units: DayutsUnit): number;\n    diff(input: UTSJSONObject, units: DayutsUnit): number;\n    diff(input: string, units: DayutsUnit, float: boolean): number;\n    diff(input: number, units: DayutsUnit, float: boolean): number;\n    diff(input: Date, units: DayutsUnit, float: boolean): number;\n    diff(input: Dayuts, units: DayutsUnit, float: boolean): number;\n    diff(input: UTSJSONObject, units: DayutsUnit, float: boolean): number;\n    diff(input: any, units: DayutsUnit = 'millisecond', float: boolean = false): number {\n        const unit = prettyUnit(units);\n        const that = dayuts(input);\n        const zoneDelta = (that.utcOffset() - this.utcOffset()) * MILLISECONDS_A_MINUTE;\n        const diff = this.valueOf() - that.valueOf();\n        // @ts-ignore\n        const getMonth = (): number => monthDiff(this, that);\n        let result: number;\n        switch (unit) {\n            case Y:\n                result = getMonth() / 12;\n                break;\n            case M:\n                result = getMonth();\n                break;\n            case Q:\n                result = getMonth() / 3;\n                break;\n            case W:\n                result = (diff - zoneDelta) / MILLISECONDS_A_WEEK;\n                break;\n            case D:\n                result = (diff - zoneDelta) / MILLISECONDS_A_DAY;\n                break;\n            case H:\n                result = diff / MILLISECONDS_A_HOUR;\n                break;\n            case MIN:\n                result = diff / MILLISECONDS_A_MINUTE;\n                break;\n            case S:\n                result = diff / MILLISECONDS_A_SECOND;\n                break;\n            default:\n                result = diff; // milliseconds\n                break;\n        }\n        return float ? result : absFloor(result);\n    }\n    /**\n     * 将当前 Dayuts 对象转换为原生 Date 对象。\n     *\n     * @returns {Date} 返回一个表示当前日期的原生 Date 对象。\n     */\n    toDate(): Date {\n        return new Date(this.valueOf());\n    }\n    /**\n     * 将 Moment 对象转换为 JSON 字符串\n     * @returns {string | null} 如果 Moment 对象有效，则返回 ISO 8601 格式的字符串，否则返回 null\n     */\n    toJSON(): string | null {\n        return this.isValid() ? this.toISOString() : null;\n    }\n    /**\n     * 将 Moment 对象转换为 ISO 8601 格式的字符串\n     * @returns {string} 返回 ISO 8601 格式的字符串\n     */\n    toISOString(): string {\n        return this.$d.toString();\n    }\n    toObject(): DayutsObject {\n        return {\n            years: this.$y,\n            months: this.$M,\n            date: this.$D,\n            hours: this.$H,\n            minutes: this.$m,\n            seconds: this.$s,\n            milliseconds: this.$ms\n        } as DayutsObject;\n    }\n    toArray(): number[] {\n        return [\n            this.$y,\n            this.$M,\n            this.$D,\n            this.$H,\n            this.$m,\n            this.$s,\n            this.$ms\n        ];\n    }\n    /**\n     * 获取当前日期的毫秒数。\n     *\n     * @returns {number} 返回一个表示当前日期的毫秒数。\n     */\n    valueOf(): number {\n        // 使用 Date 对象的 getTime 方法获取当前日期的毫秒数。\n        return this.$d.getTime();\n    }\n    /**\n     * 获取当前 `dayuts` 对象所在月份的天数。\n     *\n     * @returns {number} 返回当前 `dayuts` 对象所在月份的天数。\n     */\n    daysInMonth(): number {\n        return this.endOf(M).$D;\n    }\n    /**\n     * 获取当前日期的区域设置对象。\n     *\n     * @returns {Object} 区域设置对象。\n     */\n    private $locale(): DayutsLocale {\n        // return Ls.get(this.$L)!\n        return localeState.locales.get(this.$L)!;\n    }\n    /**\n     * 设置或获取 Dayuts 实例的本地化配置\n     * @param {string|Object} preset - 本地化预设名称或自定义本地化配置对象\n     * @param {Object} [DayutsLocale] - 可选的自定义本地化配置对象\n     * @returns {Dayuts|string} 如果设置了本地化配置，则返回一个新的 Dayuts 实例；否则返回当前实例的本地化配置名称\n     */\n    locale(preset: string, object: DayutsLocale): Dayuts;\n    locale(preset: DayutsLocale, object: DayutsLocale): Dayuts;\n    locale(preset: any, object: DayutsLocale | null = null): Dayuts {\n        // if (!preset) return this.$L\n        const that = this.clone();\n        const nextLocaleName = parseLocale(preset, object, true);\n        if (nextLocaleName != null)\n            that.$L = nextLocaleName;\n        return that;\n    }\n    clone(): Dayuts {\n        return wrapper(this.$d.getTime(), this);\n    }\n    /**\n     * 返回当前 dayuts 对象的 UTC 字符串表示。\n     *\n     * @returns {string} 当前 dayuts 对象的 UTC 字符串表示。\n     */\n    override toString(): string {\n        // return this.$d.toUTCString();\n        // const locale = localeState.locales.get('en')!\n        // const weekday = locale.weekdays[this.$d.getDay()].substring(0,3);\n        // const month = locale.months[this.$d.getMonth()].substring(0,3)\n        // const day = `${this.$D}`.padStart(2, '0');\n        // const hours = `${this.$H}`.padStart(2, '0');\n        // const minutes = `${this.$m}`.padStart(2, '0');\n        // const seconds = `${this.$s}`.padStart(2, '0');\n        // return `${weekday}, ${day} ${month} ${this.$y} ${hours}:${minutes}:${seconds} GMT`;\n        return this.$d.toString();\n    }\n    /**\n     * 计算给定日期在当年的第几天，或者设置给定日期为当年的第几天。\n     * @param {number} [input] - 如果提供了输入值，则将日期设置为当年的第几天。如果没有提供输入值，则返回当前日期在当年的第几天。\n     * @returns {number} 如果提供了输入值，则返回调整后的日期。如果没有提供输入值，则返回当前日期在当年的第几天。\n     */\n    dayOfYear(): number;\n    dayOfYear(input: number): Dayuts;\n    dayOfYear(input: number | null = null): any {\n        const dayOfYear = Math.round((this.startOf('day').valueOf() - this.startOf('year').valueOf()) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'day');\n    }\n    /**\n     * 根据输入的时间计算与当前时间的相对时间差，并以指定的格式返回。\n     * @param {Date|number|string} input - 输入的时间，可以是Date对象、时间戳或符合Date.parse()方法的字符串\n     * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀\n     * @param {Object} instance - 当前时间的实例\n     * @param {boolean} isFrom - 是否从输入时间计算到当前时间\n     * @param {Function} postFormat - 格式化绝对值后的结果的函数\n     * @returns {string} 相对时间差的格式化字符串\n     */\n    // postFormat\n    fromToBase(input: string, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n    fromToBase(input: number, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n    fromToBase(input: Date, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n    fromToBase(input: Dayuts, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n    fromToBase(input: UTSJSONObject, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n    fromToBase(input: any, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string {\n        const relObj = localeState.locales.get('en')?.relativeTime;\n        const loc = instance.$locale().relativeTime ?? relObj;\n        if (loc == null)\n            return '';\n        const T: Threshold[] = [\n            { l: 's', r: 44, d: S } as Threshold,\n            { l: 'm', r: 89 } as Threshold,\n            { l: 'mm', r: 44, d: MIN } as Threshold,\n            { l: 'h', r: 89 } as Threshold,\n            { l: 'hh', r: 21, d: H } as Threshold,\n            { l: 'd', r: 35 } as Threshold,\n            { l: 'dd', r: 25, d: D } as Threshold,\n            { l: 'M', r: 45 } as Threshold,\n            { l: 'MM', r: 10, d: M } as Threshold,\n            { l: 'y', r: 17 } as Threshold,\n            { l: 'yy', d: Y } as Threshold\n        ];\n        const Tl = T.length;\n        let result: number = 0;\n        let out: string = '';\n        let isFuture: boolean = false;\n        for (let i = 0; i < Tl; i += 1) {\n            let t = T[i];\n            if (t.d != null) {\n                result = isFrom\n                    ? dayuts(input).diff(instance, t.d!, true)\n                    : instance.diff(input, t.d!, true);\n            }\n            let abs = Math.round(Math.abs(result));\n            isFuture = result > 0;\n            if (t.r == null || t.r != null && abs <= t.r!) {\n                if (abs <= 1 && i > 0)\n                    t = T[i - 1]; // 1 minutes -> a minute, 0 seconds -> 0 second\n                const format = loc[t.l];\n                // if (postFormat) {\n                // \tabs = postFormat(`${abs}`)\n                // }\n                if (typeof format == 'string') {\n                    out = (format as string).replace('%d', abs.toString(10));\n                }\n                // else {\n                // \tout = format(abs, withoutSuffix, t.l!, isFuture)\n                // }\n                break;\n            }\n        }\n        if (withoutSuffix)\n            return out;\n        const pastOrFuture = isFuture ? loc.future : loc.past;\n        // if (typeof pastOrFuture == 'function') {\n        // \treturn pastOrFuture(out)\n        // }\n        return pastOrFuture.replace('%s', out);\n    }\n    /**\n     * 相对指定时间(后)。\n     * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\n     * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\n     * @returns {string} 相对时间差的格式化字符串。\n     */\n    to(input: string): string;\n    to(input: number): string;\n    to(input: Date): string;\n    to(input: Dayuts): string;\n    to(input: UTSJSONObject): string;\n    to(input: string, withoutSuffix: boolean): string;\n    to(input: number, withoutSuffix: boolean): string;\n    to(input: Date, withoutSuffix: boolean): string;\n    to(input: Dayuts, withoutSuffix: boolean): string;\n    to(input: UTSJSONObject, withoutSuffix: boolean): string;\n    to(input: any, withoutSuffix: boolean = false): string {\n        return this.fromToBase(input, withoutSuffix, this, true);\n    }\n    /**\n     * 将当前时间转换为与输入时间的相对时间差，并以指定的格式返回。\n     * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\n     * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\n     * @returns {string} 相对时间差的格式化字符串。\n     */\n    from(input: string): string;\n    from(input: number): string;\n    from(input: Date): string;\n    from(input: Dayuts): string;\n    from(input: UTSJSONObject): string;\n    from(input: string, withoutSuffix: boolean): string;\n    from(input: number, withoutSuffix: boolean): string;\n    from(input: Date, withoutSuffix: boolean): string;\n    from(input: Dayuts, withoutSuffix: boolean): string;\n    from(input: UTSJSONObject, withoutSuffix: boolean): string;\n    from(input: any, withoutSuffix: boolean = false): string {\n        return this.fromToBase(input, withoutSuffix, this, false);\n    }\n    /**\n     * 获取当前时间与实例时间的相对时间差，并以指定的格式返回。\n     * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\n     * @returns {string} 相对时间差的格式化字符串。\n     */\n    toNow(): string;\n    toNow(withoutSuffix: boolean = false): string {\n        return this.to(dayuts(), withoutSuffix);\n    }\n    /**\n     * 获取实例时间与当前时间的相对时间差，并以指定的格式返回。\n     * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\n     * @returns {string} 相对时间差的格式化字符串。\n     */\n    fromNow(): string;\n    fromNow(withoutSuffix: boolean = false): string {\n        return this.from(dayuts(), withoutSuffix);\n    }\n}\nfunction dayuts(): Dayuts;\nfunction dayuts(date: string): Dayuts;\nfunction dayuts(date: any[]): Dayuts;\nfunction dayuts(date: number): Dayuts;\nfunction dayuts(date: UTSJSONObject): Dayuts;\nfunction dayuts(date: Date): Dayuts;\nfunction dayuts(date: Dayuts): Dayuts;\nfunction dayuts(date: any | null = null, format: string | null = null, locale: string | null = null): Dayuts {\n    if (date != null && date instanceof Dayuts)\n        return (date as Dayuts).clone();\n    return new Dayuts({\n        date,\n        format,\n        locale\n    } as DayutsConfig);\n}\n/**\n * 判断给定的对象是否为Dayuts实例\n * @param {(any | null)} date - 输入的对象\n * @returns {boolean} - 如果给定的对象是Dayuts实例，则返回true，否则返回false\n */\nfunction isDayuts(date: any | null = null): boolean {\n    return date instanceof Dayuts;\n}\nexport { dayuts, isDayuts };\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\nimport { DayutsConfig, type DayutsLocale, DayutsUnit, DayutsObject } from '../utssdk/interface'\r\nimport { REGEX_FORMAT, REGEX_PARSE, INVALID_DATE_STRING, M, Y, W, D, DATE, H, MIN, S, MS, Q, MILLISECONDS_A_MINUTE, MILLISECONDS_A_HOUR, MILLISECONDS_A_SECOND, MILLISECONDS_A_WEEK, MILLISECONDS_A_DAY, FORMAT_DEFAULT } from './constant'\r\nimport { isNumber, prettyUnit, padStart, padZoneStr, monthDiff, absFloor } from './utils'\r\nimport { dayutsIntl, localeState } from './use'\r\n\r\ntype Threshold = {\r\n\tl : string;\r\n\tr ?: number;\r\n\td ?: DayutsUnit;\r\n}\r\n\r\nfunction parseLocale(preset : string | null) : string | null;\r\nfunction parseLocale(preset : DayutsLocale | null) : string | null;\r\nfunction parseLocale(preset : string, object : DayutsLocale | null, isLocal : boolean) : string | null;\r\nfunction parseLocale(preset : DayutsLocale, object : DayutsLocale, isLocal : boolean) : string | null;\r\nfunction parseLocale(preset : any | null, object : DayutsLocale | null = null, isLocal : boolean = false) : string | null {\r\n\tlet l : string | null = null\r\n\tif (preset == null) return dayutsIntl.locale\r\n\tif (typeof preset == 'string') {\r\n\t\tconst presetLower = (preset as string).toLowerCase()\r\n\t\tif (dayutsIntl.has(presetLower)) {\r\n\t\t\tl = presetLower\r\n\t\t}\r\n\t\tif (object != null) {\r\n\t\t\tdayutsIntl.set(presetLower, object)\r\n\t\t\tl = presetLower\r\n\t\t}\r\n\t\tconst presetSplit = preset.split('-')\r\n\t\tif (l == null && presetSplit.length > 1) {\r\n\t\t\treturn parseLocale(presetSplit[0])\r\n\t\t}\r\n\t} else if (preset instanceof DayutsLocale) {\r\n\t\t// const { name } = preset as DayutsLocale\r\n\t\tdayutsIntl.set(preset.name, preset)\r\n\t\tl = preset.name\r\n\t}\r\n\tif (!isLocal && l != null) {\r\n\t\t// L = l\r\n\t\tdayutsIntl.locale = l\r\n\t}\r\n\t// return l ?? L //(!isLocal && L != null)\r\n\treturn l ?? dayutsIntl.locale //(!isLocal && L != null)\r\n}\r\n\r\nfunction tryParseNumberAtIndex(digits : (any|null)[], index : number) : number | null {\r\n\t// 检查索引是否在数组范围内\r\n\tif (index >= 0 && index < digits.length) {\r\n\t\tif(digits[index] == null) return null\r\n\t\t// 尝试解析索引位置的字符串为数字\r\n\t\tconst parsedNumber = isNumber(digits[index]) ? digits[index] as number : parseInt(`${digits[index]}`, 10);\r\n\r\n\t\t// 检查解析结果是否为有效数字\r\n\t\tif (!isNaN(parsedNumber)) {\r\n\t\t\treturn parsedNumber;\r\n\t\t}\r\n\t}\r\n\treturn null\r\n}\r\n// function createDateFromArray(d: number[]):Date\r\n// function createDateFromArray(d: string[]):Date\r\nfunction createDateFromArray(d : (any|null)[], offset : number = 0) : Date {\r\n\tconst year = tryParseNumberAtIndex(d, 1 - offset) ?? new Date().getFullYear()\r\n\tconst month = (tryParseNumberAtIndex(d, 2 - offset) ?? 1) - 1\r\n\tconst day = tryParseNumberAtIndex(d, 3 - offset) ?? 1\r\n\tconst hour = tryParseNumberAtIndex(d, 4 - offset) ?? 0\r\n\tconst minute = tryParseNumberAtIndex(d, 5 - offset) ?? 0\r\n\tconst second = tryParseNumberAtIndex(d, 6 - offset) ?? 0\r\n\tconst millisecond = (tryParseNumberAtIndex(d, 7 - offset) ?? 0).toString().substring(0, 3) //d.length > 7 ? parseInt((d[7] ?? '0').substring(0, 3)) : 0\r\n\r\n\treturn new Date(\r\n\t\tyear,\r\n\t\tmonth,\r\n\t\tday,\r\n\t\thour,\r\n\t\tminute,\r\n\t\tsecond,\r\n\t\tparseInt(millisecond))\r\n}\r\nfunction parseDate(cfg : DayutsConfig) : Date|null {\r\n\tconst { date } = cfg\r\n\tif (date == null) return new Date()\r\n\tif (date instanceof Date) return date as Date\r\n\t\r\n\ttry {\r\n\t\tif (typeof date == 'string' && /^\\d+$/.test(date as string)) {\r\n\t\t\treturn new Date(parseInt(`${date}`.padEnd(13, '0')))\r\n\t\t}\r\n\t\tif (typeof date == 'string' && !/Z$/i.test(date as string)) {\r\n\t\t\tconst d = date.match(REGEX_PARSE)\r\n\r\n\r\n\r\n\r\n\t\t\tconst isNull = d == null|| Array.isArray(d) && d.length == 0\r\n\r\n\t\t\tif (!isNull) {\r\n\t\t\t\treturn createDateFromArray(d as (any|null)[])\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof date == 'string') return new Date(date as string)\r\n\t\tif (Array.isArray(date)) {\r\n\t\t\treturn createDateFromArray(date as (any|null)[], 1)\r\n\t\t}\r\n\t\tif (isNumber(date)) return new Date(date as number)\r\n\t\treturn null//new Date()\r\n\t} catch(err) {\r\n\t\treturn null//new Date()\r\n\t}\r\n}\r\n\r\nfunction wrapper(date : any, instance : Dayuts) : Dayuts {\r\n\treturn dayuts(date, instance.$L)\r\n}\r\n\r\nexport class Dayuts {\r\n\t$L : string\r\n\tprivate valid: boolean = true; \r\n\tprivate $d : Date = new Date()\r\n\tprivate $y : number = 0\r\n\tprivate $M : number = 0\r\n\tprivate $D : number = 0\r\n\tprivate $W : number = 0\r\n\tprivate $H : number = 0\r\n\tprivate $m : number = 0\r\n\tprivate $s : number = 0\r\n\tprivate $ms : number = 0\r\n\tprivate $u : boolean = false\r\n\tconstructor(cfg : DayutsConfig) {\r\n\t\tthis.$L = parseLocale(cfg.locale) ?? dayutsIntl.locale //'en'\r\n\t\tthis.parse(cfg)\r\n\t}\r\n\tparse(cfg : DayutsConfig) {\r\n\t\tconst _d = parseDate(cfg)\r\n\t\tif(_d != null) {\r\n\t\t\tthis.$d = parseDate(cfg)!\r\n\t\t\tthis.init()\r\n\t\t} else {\r\n\t\t\tthis.valid = false\r\n\t\t}\r\n\t}\r\n\tinit() {\r\n\t\tconst { $d } = this\r\n\t\tthis.$y = $d.getFullYear()\r\n\t\tthis.$M = $d.getMonth()\r\n\t\tthis.$D = $d.getDate()\r\n\t\tthis.$W = $d.getDay()\r\n\t\tthis.$H = $d.getHours()\r\n\t\tthis.$m = $d.getMinutes()\r\n\t\tthis.$s = $d.getSeconds()\r\n\t\tthis.$ms = $d.getMilliseconds()\r\n\t}\r\n\t/**\r\n\t * 检查日期对象是否有效。\r\n\t *\r\n\t * @returns {boolean} 如果日期对象有效，则返回true；否则返回false。\r\n\t */\r\n\tisValid() : boolean {\r\n\t\treturn this.valid\r\n\t\t// return !(this.$d.toString() == INVALID_DATE_STRING)\r\n\t}\r\n\t/**\r\n\t * 检查当前日期是否与给定的日期在指定的时间单位内相同。\r\n\t *\r\n\t * @param {string|number|Date} input - 要比较的日期。\r\n\t * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @returns {boolean} 如果当前日期与给定的日期在指定的时间单位内相同，则返回true；否则返回false。\r\n\t */\r\n\tisSame(input : string) : boolean\r\n\tisSame(input : number) : boolean\r\n\tisSame(input : Date) : boolean\r\n\tisSame(input : Dayuts) : boolean\r\n\tisSame(input : UTSJSONObject) : boolean\r\n\r\n\tisSame(input : string, units : DayutsUnit) : boolean\r\n\tisSame(input : number, units : DayutsUnit) : boolean\r\n\tisSame(input : Date, units : DayutsUnit) : boolean\r\n\tisSame(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSame(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSame(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input)\r\n\t\tconst date1 = this.startOf(units).valueOf()\r\n\t\tconst date2 = other.valueOf()\r\n\t\tconst date3 = this.endOf(units).valueOf()\r\n\t\treturn date1 <= date2 && date2 <= date3\r\n\t}\r\n\t/**\r\n\t * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之后。\r\n\t *\r\n\t * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\r\n\t * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之后，则返回 `true`，否则返回 `false`。\r\n\t */\r\n\tisAfter(input : string) : boolean\r\n\tisAfter(input : number) : boolean\r\n\tisAfter(input : Date) : boolean\r\n\tisAfter(input : Dayuts) : boolean\r\n\tisAfter(input : UTSJSONObject) : boolean\r\n\r\n\tisAfter(input : string, units : DayutsUnit) : boolean\r\n\tisAfter(input : number, units : DayutsUnit) : boolean\r\n\tisAfter(input : Date, units : DayutsUnit) : boolean\r\n\tisAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisAfter(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input)\r\n\t\tconst date1 = other.valueOf()\r\n\t\tconst date2 = this.startOf(units).valueOf()\r\n\t\treturn date1 < date2;\r\n\t}\r\n\t/**\r\n\t * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之前。\r\n\t *\r\n\t * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\r\n\t * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之前，则返回 `true`，否则返回 `false`。\r\n\t */\r\n\tisBefore(input : string) : boolean\r\n\tisBefore(input : number) : boolean\r\n\tisBefore(input : Date) : boolean\r\n\tisBefore(input : Dayuts) : boolean\r\n\tisBefore(input : UTSJSONObject) : boolean\r\n\r\n\tisBefore(input : string, units : DayutsUnit) : boolean\r\n\tisBefore(input : number, units : DayutsUnit) : boolean\r\n\tisBefore(input : Date, units : DayutsUnit) : boolean\r\n\tisBefore(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisBefore(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisBefore(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input);\r\n\t\tconst date1 = other.valueOf()\r\n\t\tconst date2 = this.endOf(units).valueOf()\r\n\t\treturn date2 < date1;\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否与给定的输入在同一时间或之前，根据指定的时间单位\r\n\t * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之前，则返回true，否则返回false\r\n\t */\r\n\tisSameOrBefore(input : string) : boolean\r\n\tisSameOrBefore(input : number) : boolean\r\n\tisSameOrBefore(input : Date) : boolean\r\n\tisSameOrBefore(input : Dayuts) : boolean\r\n\tisSameOrBefore(input : UTSJSONObject) : boolean\r\n\r\n\tisSameOrBefore(input : string, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : number, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : Date, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\treturn this.isSame(input, units) || this.isBefore(input, units)\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否与给定的输入在同一时间或之后，根据指定的时间单位\r\n\t * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之后，则返回true，否则返回false\r\n\t */\r\n\tisSameOrAfter(input : string) : boolean\r\n\tisSameOrAfter(input : number) : boolean\r\n\tisSameOrAfter(input : Date) : boolean\r\n\tisSameOrAfter(input : Dayuts) : boolean\r\n\tisSameOrAfter(input : UTSJSONObject) : boolean\r\n\r\n\tisSameOrAfter(input : string, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : number, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : Date, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\treturn this.isSame(input, units) || this.isAfter(input, units)\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否在给定的两个时间之间\r\n\t * @param {any} input - 第一个时间输入\r\n\t * @param {any} input2 - 第二个时间输入\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @param {string} interval - 区间符号，表示区间的开闭性，默认为'()'，表示开区间\r\n\t * @returns {boolean} - 如果当前Dayuts对象在给定的两个时间之间，则返回true，否则返回false\r\n\t */\r\n\tisBetween(input : any, input2 : any, units : DayutsUnit = 'millisecond', interval : string = '()') : boolean {\r\n\t\tconst dA = dayuts(input)\r\n\t\tconst dB = dayuts(input2)\r\n\t\tconst dAi = interval.startsWith('(')\r\n\t\tconst dBi = interval.endsWith(')')\r\n\r\n\t\treturn ((dAi ? this.isAfter(dA, units) : !this.isBefore(dA, units)) &&\r\n\t\t\t(dBi ? this.isBefore(dB, units) : !this.isAfter(dB, units)))\r\n\t\t\t|| ((dAi ? this.isBefore(dA, units) : !this.isAfter(dA, units)) &&\r\n\t\t\t\t(dBi ? this.isAfter(dB, units) : !this.isBefore(dB, units)))\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象所在的年份是否为闰年\r\n\t * @returns {boolean} - 如果当前Dayuts对象所在的年份是闰年，则返回true，否则返回false\r\n\t */\r\n\tisLeapYear():boolean{\r\n\t\t return ((this.$y % 4 == 0) && (this.$y % 100 != 0)) || (this.$y % 400 == 0)\r\n\t}\r\n\tisToday():boolean{\r\n\t\tconst comparisonTemplate = 'YYYY-MM-DD'\r\n\t\tconst now = dayuts()\r\n\t\t\r\n\t\treturn this.format(comparisonTemplate) == now.format(comparisonTemplate)\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\r\n\t *\r\n\t * @returns {number} 返回当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\r\n\t */\r\n\tunix() : number {\r\n\t\treturn Math.floor(this.valueOf() / 1000);\r\n\t}\r\n\t/**\r\n\t * 将当前日期设置为指定时间单位的开始或结束。\r\n\t *\r\n\t * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @param {boolean} startOf - 如果为true，则设置为开始；如果为false，则设置为结束。\r\n\t * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\r\n\t */\r\n\tstartOf(units : DayutsUnit, startOf : boolean = true) : Dayuts {\r\n\t\tconst isStartOf = startOf;\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// instanceFactory 函数用于创建一个新的 Dayuts 对象，表示给定日期的开始或结束。\r\n\t\t// 参数 d 和 m 分别表示日期和月份。\r\n\t\tconst instanceFactory = (d : number, m : number) : Dayuts => {\r\n\t\t\tconst ins = dayuts(new Date(this.$y, m, d))\r\n\t\t\treturn isStartOf ? ins : ins.endOf(D)\r\n\t\t}\r\n\r\n\t\t// instanceFactorySet 函数用于创建一个新的 Dayuts 对象，表示调整后的时间。\r\n\t\t// 参数 method 表示要调用的 Date 对象的方法（如 'setHours'），slice 表示要调整的时间部分的索引。\r\n\t\tconst instanceFactorySet = (method : string, slice : number) : Dayuts => {\r\n\t\t\t// 定义表示开始和结束时间的参数数组。\r\n\t\t\tconst argumentStart = [0, 0, 0, 0]\r\n\t\t\tconst argumentEnd = [23, 59, 59, 999]\r\n\t\t\t// 根据 isStartOf 的值，选择开始或结束时间的参数数组，并调用 Date 对象的方法。\r\n\t\t\tconst args = (isStartOf ? argumentStart : argumentEnd).slice(slice)\r\n\t\t\tconst date = this.toDate()\r\n\t\t\tif (method == 'setHours') {\r\n\t\t\t\tdate.setHours(args[0]);\r\n\t\t\t\tdate.setMinutes(args[1])\r\n\t\t\t\tdate.setSeconds(args[2])\r\n\t\t\t\tdate.setMilliseconds(args[3])\r\n\t\t\t} else if (method == 'setMinutes') {\r\n\t\t\t\tdate.setMinutes(args[0]);\r\n\t\t\t\tdate.setSeconds(args[1])\r\n\t\t\t\tdate.setMilliseconds(args[2])\r\n\t\t\t} else if (method == 'setSeconds') {\r\n\t\t\t\tdate.setSeconds(args[0])\r\n\t\t\t\tdate.setMilliseconds(args[1])\r\n\t\t\t} else if (method == 'setMilliseconds') {\r\n\t\t\t\tdate.setMilliseconds(args[0])\r\n\t\t\t}\r\n\t\t\treturn dayuts(date)\r\n\t\t}\r\n\t\tconst { $W, $M, $D } = this\r\n\t\tconst utcPad = `set${this.$u ? 'UTC' : ''}`\r\n\t\tif (unit == Y) {\r\n\t\t\treturn isStartOf ? instanceFactory(1, 0) : instanceFactory(31, 11);\r\n\t\t} else if (unit == M) {\r\n\t\t\treturn isStartOf ? instanceFactory(1, $M) : instanceFactory(0, $M + 1);\r\n\t\t} else if (unit == W) {\r\n\t\t\tconst weekStart = this.$locale().weekStart ?? 0;\r\n\t\t\tconst gap = ($W < weekStart ? $W + 7 : $W) - weekStart;\r\n\t\t\treturn instanceFactory(isStartOf ? $D - gap : $D + (6 - gap), $M);\r\n\t\t} else if (unit == D || unit == DATE) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Hours`, 0);\r\n\t\t} else if (unit == H) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Minutes`, 1);\r\n\t\t} else if (unit == MIN) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Seconds`, 2);\r\n\t\t} else if (unit == S) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Milliseconds`, 3);\r\n\t\t} else {\r\n\t\t\treturn this.clone();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 将当前日期设置为指定时间单位的结束。\r\n\t *\r\n\t * @param {string} arg - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\r\n\t */\r\n\tendOf(units : DayutsUnit) : Dayuts {\r\n\t\treturn this.startOf(units, false)\r\n\t}\r\n\t/**\r\n\t * 设置指定的时间单位的值。\r\n\t *\r\n\t * @param {string} units - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @param {number} int - 要设置的值。\r\n\t * @returns {Dayuts} 返回当前对象。\r\n\t */\r\n\tprivate $set(units : DayutsUnit, int : number) : Dayuts { // private set\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// const utcPad = `set${this.$u ? 'UTC' : ''}`\r\n\t\tconst arg = unit == D ? this.$D + (int - this.$W) : int\r\n\t\tconst setDateUnit = (date : Dayuts, unit : DayutsUnit, arg : number) => {\r\n\t\t\tif (unit == D || unit == DATE) {\r\n\t\t\t\tdate.$d.setDate(arg);\r\n\t\t\t} else if (unit == M) {\r\n\t\t\t\tdate.$d.setMonth(arg);\r\n\t\t\t} else if (unit == Y) {\r\n\t\t\t\tdate.$d.setFullYear(arg);\r\n\t\t\t} else if (unit == H) {\r\n\t\t\t\tdate.$d.setHours(arg);\r\n\t\t\t} else if (unit == MIN) {\r\n\t\t\t\tdate.$d.setMinutes(arg);\r\n\t\t\t} else if (unit == S) {\r\n\t\t\t\tdate.$d.setSeconds(arg);\r\n\t\t\t} else if (unit == MS) {\r\n\t\t\t\tdate.$d.setMilliseconds(arg);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (unit == M || unit == Y) {\r\n\t\t\t// clone is for badMutable plugin\r\n\t\t\tconst date = this.clone().set(DATE, 1)\r\n\t\t\t// date.$d[name](arg)\r\n\t\t\tsetDateUnit(date, unit, arg)\r\n\t\t\tdate.init()\r\n\t\t\tthis.$d = date.set(DATE, Math.min(this.$D, date.daysInMonth())).$d\r\n\t\t} else {\r\n\t\t\tsetDateUnit(this, unit, arg)\r\n\t\t\t// this.$d[name](arg)\r\n\t\t}\r\n\r\n\t\tthis.init()\r\n\t\treturn this\r\n\t}\r\n\t/**\r\n\t * 创建一个当前对象的副本，并设置指定的时间单位的值。\r\n\t *\r\n\t * @param {string} string - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @param {number} int - 要设置的值。\r\n\t * @returns {Dayuts} 返回一个新的 `dayuts` 对象，其值为当前对象的副本，并设置了指定的时间单位的值。\r\n\t */\r\n\tset(string : DayutsUnit, int : number) : Dayuts {\r\n\t\treturn this.clone().$set(string, int);\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象的指定时间单位的值。\r\n\t *\r\n\t * @param {string} units - 要获取的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {number} 返回当前 `dayuts` 对象的指定时间单位的值。\r\n\t */\r\n\tget(units : DayutsUnit) : number {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\tif (unit == D) {\r\n\t\t\treturn this.day()\r\n\t\t} else if (unit == DATE) {\r\n\t\t\treturn this.date()\r\n\t\t} else if (unit == M) {\r\n\t\t\treturn this.month()\r\n\t\t} else if (unit == Y) {\r\n\t\t\treturn this.year()\r\n\t\t} else if (unit == H) {\r\n\t\t\treturn this.hour()\r\n\t\t} else if (unit == MIN) {\r\n\t\t\treturn this.minute()\r\n\t\t} else if (unit == S) {\r\n\t\t\treturn this.second()\r\n\t\t} else if (unit == MS) {\r\n\t\t\treturn this.millisecond()\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\t/**\r\n\t * 获取或设置年份。\r\n\t * @param {number | null} [input] - 要设置的年份。\r\n\t * @returns {number | Dayuts} 年份或 Dayuts 实例。\r\n\t */\r\n\tyear() : number\r\n\tyear(input : number) : Dayuts\r\n\tyear(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$y\r\n\t\treturn this.set(Y, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置月份。\r\n\t * @param {number | null} [input] - 要设置的月份（0-11）。\r\n\t * @returns {number | Dayuts} 月份或 Dayuts 实例。\r\n\t */\r\n\tmonth() : number\r\n\tmonth(input : number) : Dayuts\r\n\tmonth(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$M\r\n\t\treturn this.set(M, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置星期几。\r\n\t * @param {number | null} [input] - 要设置的星期几（0-6）。\r\n\t * @returns {number | Dayuts} 星期几或 Dayuts 实例。\r\n\t */\r\n\tday() : number\r\n\tday(input : number) : Dayuts\r\n\tday(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$W\r\n\t\treturn this.set(D, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置月份中的某一天。\r\n\t * @param {number | null} [input] - 要设置的月份中的某一天（1-31）。\r\n\t * @returns {number | Dayuts} 月份中的某一天或 Dayuts 实例。\r\n\t */\r\n\tdate() : number\r\n\tdate(input : number) : Dayuts\r\n\tdate(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$D\r\n\t\treturn this.set(DATE, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置小时。\r\n\t * @param {number | null} [input] - 要设置的小时（0-23）。\r\n\t * @returns {number | Dayuts} 小时或 Dayuts 实例。\r\n\t */\r\n\thour() : number\r\n\thour(input : number) : Dayuts\r\n\thour(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$H\r\n\t\treturn this.set(H, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置分钟。\r\n\t * @param {number | null} [input] - 要设置的分钟（0-59）。\r\n\t * @returns {number | Dayuts} 分钟或 Dayuts 实例。\r\n\t */\r\n\tminute() : number\r\n\tminute(input : number) : Dayuts\r\n\tminute(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$m\r\n\t\treturn this.set(MIN, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置秒。\r\n\t * @param {number | null} [input] - 要设置的秒（0-59）。\r\n\t * @returns {number | Dayuts} 秒或 Dayuts 实例。\r\n\t */\r\n\tsecond() : number\r\n\tsecond(input : number) : Dayuts\r\n\tsecond(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$s\r\n\t\treturn this.set(S, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置毫秒。\r\n\t * @param {number | null} [input] - 要设置的毫秒（0-999）。\r\n\t * @returns {number | Dayuts} 毫秒或 Dayuts 实例。\r\n\t */\r\n\tmillisecond() : number\r\n\tmillisecond(input : number) : Dayuts\r\n\tmillisecond(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$ms\r\n\t\treturn this.set(MS, input)\r\n\t}\r\n\r\n\t/**\r\n\t * 在当前 Dayuts 实例上添加指定的时间长度。\r\n\t * @param {number} number - 要添加的时间长度。\r\n\t * @param {string} units - 要添加的时间单位（例如，“years”，“months”，“days”等）。\r\n\t * @returns {Dayuts} 更新的 Dayuts 实例。\r\n\t */\r\n\tadd(number : number, units : DayutsUnit) : Dayuts {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// 创建一个新的 Dayuts 实例，并根据给定的 n 值设置日期。\r\n\t\t// n 值乘以 number 参数，然后加到当前日期上，以设置新的日期。\r\n\t\tconst instanceFactorySet = (n : number) : Dayuts => {\r\n\t\t\t// 创建一个新的 Dayuts 实例，它是当前实例的副本\r\n\t\t\tconst d = dayuts(this)\r\n\t\t\t// 设置新的日期并返回更新后的 Dayuts 实例\r\n\t\t\treturn d.date(d.date() + Math.round(n * number)) //Utils.w(d.date(d.date() + Math.round(n * number)), this)\r\n\t\t}\r\n\t\tif (unit == M) {\r\n\t\t\treturn this.set(M, this.$M + number)\r\n\t\t}\r\n\t\tif (unit == Y) {\r\n\t\t\treturn this.set(Y, this.$y + number)\r\n\t\t}\r\n\t\tif (unit == D) {\r\n\t\t\treturn instanceFactorySet(1)\r\n\t\t}\r\n\t\tif (unit == W) {\r\n\t\t\treturn instanceFactorySet(7)\r\n\t\t}\r\n\r\n\t\tconst steps = new Map<string, number>([\r\n\t\t\t[MIN, MILLISECONDS_A_MINUTE],\r\n\t\t\t[H, MILLISECONDS_A_HOUR],\r\n\t\t\t[S, MILLISECONDS_A_SECOND],\r\n\t\t])\r\n\t\tconst step = steps.get(unit) ?? 1;\r\n\t\tconst nextTimeStamp = this.$d.getTime() + (number * step)\r\n\t\treturn wrapper(nextTimeStamp, this)\r\n\t}\r\n\t/**\r\n\t * 从当前 Dayuts 实例中减去指定的时间。\r\n\t * @param {number} number - 要减去的时间。\r\n\t * @param {string} units - 要减去的时间单位（例如，“years”，“months”，“days”等）。\r\n\t * @returns {Dayuts} 更新的 Dayuts 实例。\r\n\t */\r\n\tsubtract(number : number, units : DayutsUnit) : Dayuts {\r\n\t\t// 通过将 number 乘以 -1，然后调用 add 方法来实现减法操作\r\n\t\treturn this.add(number * -1, units);\r\n\t}\r\n\t/**\r\n\t * 日期格式化\r\n\t * @param {string} formatStr - 格式化字符串，包含各种格式化占位符（例如，“YYYY-MM-DD”，“HH:mm:ss”等）。\r\n\t * @returns {string} 格式化后的日期字符串。\r\n\t */\r\n\tformat(formatStr : string | null = null) : string {\r\n\t\tconst locale = this.$locale();\r\n\t\tif (!this.isValid()) return INVALID_DATE_STRING // locale.invalidDate || INVALID_DATE_STRING;\r\n\r\n\t\tconst str = formatStr ?? FORMAT_DEFAULT;\r\n\t\t// @ts-ignore\r\n\t\tconst zoneStr = padZoneStr(this);\r\n\t\tconst { $H, $m, $M } = this;\r\n\t\tconst { weekdays, months, meridiem } = locale;\r\n\t\t/**\r\n\t\t * 从给定的数组中获取缩写或完整的字符串。\r\n\t\t * @param {Array} arr - 包含缩写字符串的数组。\r\n\t\t * @param {number} index - 数组中要获取的元素的索引。\r\n\t\t * @param {Array} full - 包含完整字符串的数组。\r\n\t\t * @param {number} length - 要返回的字符串的长度。\r\n\t\t * @returns {string} 缩写或完整的字符串。\r\n\t\t */\r\n\t\tfunction getShort(arr : string[] | null, index : number, full : string[] = [], length : number = 0) : string {\r\n\t\t\tif (arr != null && arr.length >= index) {\r\n\t\t\t\treturn arr[index]\r\n\t\t\t} else if (full.length >= index) {\r\n\t\t\t\treturn full[index].slice(0, length)\r\n\t\t\t}\r\n\t\t\treturn ''\r\n\t\t};\r\n\t\t/**\r\n\t\t * 获取12小时制的小时数。\r\n\t\t * @param {number} num - 小时数的位数。\r\n\t\t * @returns {string} 12小时制的小时数字符串。\r\n\t\t */\r\n\t\tconst get$H = (num : number) : string => padStart(($H % 12 == 0 ? 12 : $H % 12).toString(), num, '0')\r\n\t\t/**\r\n\t\t * 获取上午或下午的字符串表示。\r\n\t\t * @param {number} hour - 小时数。\r\n\t\t * @param {number} minute - 分钟数。\r\n\t\t * @param {boolean} isLowercase - 是否返回小写字符串。\r\n\t\t * @returns {string} 上午或下午的字符串表示。\r\n\t\t */\r\n\t\tconst meridiemFunc = meridiem ?? ((hour : number, _ : number, isLowercase : boolean) : string => {\r\n\t\t\tconst m = (hour < 12 ? 'AM' : 'PM');\r\n\t\t\treturn isLowercase ? m.toLowerCase() : m;\r\n\t\t});\r\n\r\n\t\treturn str.replace('YYYY', padStart(this.$y.toString(), 4, '0'))\r\n\t\t\t.replace('YY', (this.$y).toString().slice(-2))\r\n\t\t\t.replace('MMMM', getShort(months, $M))\r\n\t\t\t.replace('MM', padStart(($M + 1).toString(), 2, '0'))\r\n\t\t\t.replace('M', ($M + 1).toString())\r\n\t\t\t.replace('DD', padStart(this.$D.toString(), 2, '0'))\r\n\t\t\t.replace('D', this.$D.toString())\r\n\t\t\t.replace('dddd', weekdays[this.$W])\r\n\t\t\t.replace('ddd', getShort(locale.weekdaysShort, this.$W, weekdays, 3))\r\n\t\t\t.replace('dd', getShort(locale.weekdaysMin, this.$W, weekdays, 2))\r\n\t\t\t.replace('d', this.$W.toString())\r\n\t\t\t.replace('HH', padStart($H.toString(), 2, '0'))\r\n\t\t\t.replace('H', $H.toString())\r\n\t\t\t.replace('hh', get$H(2))\r\n\t\t\t.replace('h', get$H(1))\r\n\t\t\t.replace('mm', padStart($m.toString(), 2, '0'))\r\n\t\t\t.replace('m', $m.toString())\r\n\t\t\t.replace('ss', padStart(this.$s.toString(), 2, '0'))\r\n\t\t\t.replace('s', this.$s.toString())\r\n\t\t\t.replace('SSS', padStart(this.$ms.toString(), 3, '0'))\r\n\t\t\t.replace('A', meridiemFunc($H, $m, false))\r\n\t\t\t.replace('a', meridiemFunc($H, $m, true))\r\n\t\t\t.replace('Z', zoneStr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t}\r\n\t/**\r\n\t * 获取 Dayuts 实例的 UTC 偏移量（以分钟为单位）。\r\n\t * @returns {number} UTC 偏移量（以分钟为单位）。\r\n\t */\r\n\tutcOffset() : number {\r\n\t\t// Because a bug at FF24, we're rounding the timezone offset around 15 minutes\r\n\t\t// https://github.com/moment/moment/pull/1871\r\n\r\n\r\n\r\n\r\n\t\treturn 0\r\n\r\n\t}\r\n\t/**\r\n\t * 计算两个日期之间的差值\r\n\t * @param {string|number|Date|Dayuts} input - 要比较的日期\r\n\t * @param {string} units - 要计算的时间单位，如 'years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'\r\n\t * @param {boolean} float - 是否返回浮点数结果\r\n\t * @returns {number} 返回两个日期之间的差值\r\n\t */\r\n\tdiff(input : string) : number\r\n\tdiff(input : number) : number\r\n\tdiff(input : Date) : number\r\n\tdiff(input : Dayuts) : number\r\n\tdiff(input : UTSJSONObject) : number\r\n\r\n\tdiff(input : string, units : DayutsUnit) : number\r\n\tdiff(input : number, units : DayutsUnit) : number\r\n\tdiff(input : Date, units : DayutsUnit) : number\r\n\tdiff(input : Dayuts, units : DayutsUnit) : number\r\n\tdiff(input : UTSJSONObject, units : DayutsUnit) : number\r\n\r\n\tdiff(input : string, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : number, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : Date, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : Dayuts, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : UTSJSONObject, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : any, units : DayutsUnit = 'millisecond', float : boolean = false) : number {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\tconst that = dayuts(input)\r\n\t\tconst zoneDelta = (that.utcOffset() - this.utcOffset()) * MILLISECONDS_A_MINUTE\r\n\t\tconst diff = this.valueOf() - that.valueOf()\r\n\t\t// @ts-ignore\r\n\t\tconst getMonth = () : number => monthDiff(this, that)\r\n\t\tlet result : number;\r\n\t\tswitch (unit) {\r\n\t\t\tcase Y:\r\n\t\t\t\tresult = getMonth() / 12\r\n\t\t\t\tbreak\r\n\t\t\tcase M:\r\n\t\t\t\tresult = getMonth()\r\n\t\t\t\tbreak\r\n\t\t\tcase Q:\r\n\t\t\t\tresult = getMonth() / 3\r\n\t\t\t\tbreak\r\n\t\t\tcase W:\r\n\t\t\t\tresult = (diff - zoneDelta) / MILLISECONDS_A_WEEK\r\n\t\t\t\tbreak\r\n\t\t\tcase D:\r\n\t\t\t\tresult = (diff - zoneDelta) / MILLISECONDS_A_DAY\r\n\t\t\t\tbreak\r\n\t\t\tcase H:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_HOUR\r\n\t\t\t\tbreak\r\n\t\t\tcase MIN:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_MINUTE\r\n\t\t\t\tbreak\r\n\t\t\tcase S:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_SECOND\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tresult = diff // milliseconds\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn float ? result : absFloor(result)\r\n\t}\r\n\t/**\r\n\t * 将当前 Dayuts 对象转换为原生 Date 对象。\r\n\t *\r\n\t * @returns {Date} 返回一个表示当前日期的原生 Date 对象。\r\n\t */\r\n\ttoDate() : Date {\r\n\t\treturn new Date(this.valueOf())\r\n\t}\r\n\t/**\r\n\t * 将 Moment 对象转换为 JSON 字符串\r\n\t * @returns {string | null} 如果 Moment 对象有效，则返回 ISO 8601 格式的字符串，否则返回 null\r\n\t */\r\n\ttoJSON() : string | null {\r\n\t\treturn this.isValid() ? this.toISOString() : null;\r\n\t}\r\n\t/**\r\n\t * 将 Moment 对象转换为 ISO 8601 格式的字符串\r\n\t * @returns {string} 返回 ISO 8601 格式的字符串\r\n\t */\r\n\ttoISOString() : string {\r\n\r\n\r\n\r\n\r\n\t\treturn this.$d.toString();\r\n\r\n\t}\r\n\ttoObject() : DayutsObject {\r\n\t\treturn {\r\n\t\t\tyears: this.$y,\r\n\t\t\tmonths: this.$M,\r\n\t\t\tdate: this.$D,\r\n\t\t\thours: this.$H,\r\n\t\t\tminutes: this.$m,\r\n\t\t\tseconds: this.$s,\r\n\t\t\tmilliseconds: this.$ms\r\n\t\t} as DayutsObject\r\n\t}\r\n\ttoArray() : number[] {\r\n\t\treturn [\r\n\t\t\tthis.$y,\r\n\t\t\tthis.$M,\r\n\t\t\tthis.$D,\r\n\t\t\tthis.$H,\r\n\t\t\tthis.$m,\r\n\t\t\tthis.$s,\r\n\t\t\tthis.$ms\r\n\t\t]\r\n\t}\r\n\t/**\r\n\t * 获取当前日期的毫秒数。\r\n\t *\r\n\t * @returns {number} 返回一个表示当前日期的毫秒数。\r\n\t */\r\n\tvalueOf() : number {\r\n\t\t// 使用 Date 对象的 getTime 方法获取当前日期的毫秒数。\r\n\t\treturn this.$d.getTime()\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象所在月份的天数。\r\n\t *\r\n\t * @returns {number} 返回当前 `dayuts` 对象所在月份的天数。\r\n\t */\r\n\tdaysInMonth() : number {\r\n\t\treturn this.endOf(M).$D;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前日期的区域设置对象。\r\n\t *\r\n\t * @returns {Object} 区域设置对象。\r\n\t */\r\n\tprivate $locale() : DayutsLocale { // get locale object\r\n\t\t// return Ls.get(this.$L)!\r\n\t\treturn localeState.locales.get(this.$L)!\r\n\t}\r\n\t/**\r\n\t * 设置或获取 Dayuts 实例的本地化配置\r\n\t * @param {string|Object} preset - 本地化预设名称或自定义本地化配置对象\r\n\t * @param {Object} [DayutsLocale] - 可选的自定义本地化配置对象\r\n\t * @returns {Dayuts|string} 如果设置了本地化配置，则返回一个新的 Dayuts 实例；否则返回当前实例的本地化配置名称\r\n\t */\r\n\tlocale(preset : string, object : DayutsLocale) : Dayuts\r\n\tlocale(preset : DayutsLocale, object : DayutsLocale) : Dayuts\r\n\tlocale(preset : any, object : DayutsLocale | null = null) : Dayuts {\r\n\t\t// if (!preset) return this.$L\r\n\t\tconst that = this.clone()\r\n\t\tconst nextLocaleName = parseLocale(preset, object, true)\r\n\t\tif (nextLocaleName != null) that.$L = nextLocaleName\r\n\t\treturn that\r\n\t}\r\n\tclone() : Dayuts {\r\n\t\treturn wrapper(this.$d.getTime(), this)\r\n\t}\r\n\t/**\r\n\t * 返回当前 dayuts 对象的 UTC 字符串表示。\r\n\t *\r\n\t * @returns {string} 当前 dayuts 对象的 UTC 字符串表示。\r\n\t */\r\n\r\n\toverride toString() : string {\r\n\t\t// return this.$d.toUTCString();\r\n\t\t// const locale = localeState.locales.get('en')!\r\n\t\t// const weekday = locale.weekdays[this.$d.getDay()].substring(0,3);\r\n\t\t// const month = locale.months[this.$d.getMonth()].substring(0,3)\r\n\t\t// const day = `${this.$D}`.padStart(2, '0');\r\n\t\t// const hours = `${this.$H}`.padStart(2, '0');\r\n\t\t// const minutes = `${this.$m}`.padStart(2, '0');\r\n\t\t// const seconds = `${this.$s}`.padStart(2, '0');\r\n\t\t// return `${weekday}, ${day} ${month} ${this.$y} ${hours}:${minutes}:${seconds} GMT`;\r\n\t\treturn this.$d.toString();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * 计算给定日期在当年的第几天，或者设置给定日期为当年的第几天。\r\n\t * @param {number} [input] - 如果提供了输入值，则将日期设置为当年的第几天。如果没有提供输入值，则返回当前日期在当年的第几天。\r\n\t * @returns {number} 如果提供了输入值，则返回调整后的日期。如果没有提供输入值，则返回当前日期在当年的第几天。\r\n\t */\r\n\tdayOfYear() : number\r\n\tdayOfYear(input : number) : Dayuts\r\n\tdayOfYear(input : number | null = null) : any {\r\n\t\tconst dayOfYear = Math.round((this.startOf('day').valueOf() - this.startOf('year').valueOf()) / 864e5) + 1\r\n\t\treturn input == null ? dayOfYear : this.add(input - dayOfYear, 'day')\r\n\t}\r\n\t/**\r\n\t * 根据输入的时间计算与当前时间的相对时间差，并以指定的格式返回。\r\n\t * @param {Date|number|string} input - 输入的时间，可以是Date对象、时间戳或符合Date.parse()方法的字符串\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀\r\n\t * @param {Object} instance - 当前时间的实例\r\n\t * @param {boolean} isFrom - 是否从输入时间计算到当前时间\r\n\t * @param {Function} postFormat - 格式化绝对值后的结果的函数\r\n\t * @returns {string} 相对时间差的格式化字符串\r\n\t */\r\n\t// postFormat\r\n\tfromToBase(input : string, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : number, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : Date, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : Dayuts, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : UTSJSONObject, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : any, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string {\r\n\t\tconst relObj = localeState.locales.get('en')?.relativeTime\r\n\t\tconst loc = instance.$locale().relativeTime ?? relObj\r\n\t\tif (loc == null) return '';\r\n\t\tconst T : Threshold[] = [\r\n\t\t\t{ l: 's', r: 44, d: S },\r\n\t\t\t{ l: 'm', r: 89 },\r\n\t\t\t{ l: 'mm', r: 44, d: MIN },\r\n\t\t\t{ l: 'h', r: 89 },\r\n\t\t\t{ l: 'hh', r: 21, d: H },\r\n\t\t\t{ l: 'd', r: 35 },\r\n\t\t\t{ l: 'dd', r: 25, d: D },\r\n\t\t\t{ l: 'M', r: 45 },\r\n\t\t\t{ l: 'MM', r: 10, d: M },\r\n\t\t\t{ l: 'y', r: 17 },\r\n\t\t\t{ l: 'yy', d: Y }\r\n\t\t]\r\n\t\tconst Tl = T.length\r\n\t\tlet result : number = 0;\r\n\t\tlet out : string = '';\r\n\t\tlet isFuture : boolean = false\r\n\t\tfor (let i = 0; i < Tl; i += 1) {\r\n\t\t\tlet t = T[i]\r\n\t\t\tif (t.d != null) {\r\n\t\t\t\tresult = isFrom\r\n\t\t\t\t\t? dayuts(input).diff(instance, t.d!, true)\r\n\t\t\t\t\t: instance.diff(input, t.d!, true)\r\n\t\t\t}\r\n\t\t\tlet abs = Math.round(Math.abs(result))\r\n\t\t\tisFuture = result > 0\r\n\t\t\tif (t.r == null || t.r != null && abs <= t.r!) {\r\n\t\t\t\tif (abs <= 1 && i > 0) t = T[i - 1] // 1 minutes -> a minute, 0 seconds -> 0 second\r\n\t\t\t\tconst format = loc[t.l]\r\n\t\t\t\t// if (postFormat) {\r\n\t\t\t\t// \tabs = postFormat(`${abs}`)\r\n\t\t\t\t// }\r\n\t\t\t\tif (typeof format == 'string') {\r\n\t\t\t\t\tout = (format as string).replace('%d', abs.toString())\r\n\t\t\t\t}\r\n\t\t\t\t// else {\r\n\t\t\t\t// \tout = format(abs, withoutSuffix, t.l!, isFuture)\r\n\t\t\t\t// }\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (withoutSuffix) return out\r\n\t\tconst pastOrFuture = isFuture ? loc.future : loc.past\r\n\t\t// if (typeof pastOrFuture == 'function') {\r\n\t\t// \treturn pastOrFuture(out)\r\n\t\t// }\r\n\t\treturn pastOrFuture.replace('%s', out)\r\n\t}\r\n\t/**\r\n\t * 相对指定时间(后)。\r\n\t * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tto(input : string) : string\r\n\tto(input : number) : string\r\n\tto(input : Date) : string\r\n\tto(input : Dayuts) : string\r\n\tto(input : UTSJSONObject) : string\r\n\r\n\tto(input : string, withoutSuffix : boolean) : string\r\n\tto(input : number, withoutSuffix : boolean) : string\r\n\tto(input : Date, withoutSuffix : boolean) : string\r\n\tto(input : Dayuts, withoutSuffix : boolean) : string\r\n\tto(input : UTSJSONObject, withoutSuffix : boolean) : string\r\n\tto(input : any, withoutSuffix : boolean = false) : string {\r\n\t\treturn this.fromToBase(input, withoutSuffix, this, true)\r\n\t}\r\n\t/**\r\n\t * 将当前时间转换为与输入时间的相对时间差，并以指定的格式返回。\r\n\t * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tfrom(input : string) : string\r\n\tfrom(input : number) : string\r\n\tfrom(input : Date) : string\r\n\tfrom(input : Dayuts) : string\r\n\tfrom(input : UTSJSONObject) : string\r\n\r\n\tfrom(input : string, withoutSuffix : boolean) : string\r\n\tfrom(input : number, withoutSuffix : boolean) : string\r\n\tfrom(input : Date, withoutSuffix : boolean) : string\r\n\tfrom(input : Dayuts, withoutSuffix : boolean) : string\r\n\tfrom(input : UTSJSONObject, withoutSuffix : boolean) : string\r\n\tfrom(input : any, withoutSuffix : boolean = false) : string {\r\n\t\treturn this.fromToBase(input, withoutSuffix, this, false)\r\n\t}\r\n\t/**\r\n\t * 获取当前时间与实例时间的相对时间差，并以指定的格式返回。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\ttoNow() : string\r\n\ttoNow(withoutSuffix : boolean = false) : string {\r\n\t\treturn this.to(dayuts(), withoutSuffix)\r\n\t}\r\n\t/**\r\n\t * 获取实例时间与当前时间的相对时间差，并以指定的格式返回。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tfromNow() : string\r\n\tfromNow(withoutSuffix : boolean = false) : string {\r\n\t\treturn this.from(dayuts(), withoutSuffix)\r\n\t}\r\n}\r\n\r\nfunction dayuts() : Dayuts;\r\nfunction dayuts(date : string) : Dayuts;\r\nfunction dayuts(date : any[]) : Dayuts;\r\nfunction dayuts(date : number) : Dayuts;\r\nfunction dayuts(date : UTSJSONObject) : Dayuts;\r\nfunction dayuts(date : Date) : Dayuts;\r\nfunction dayuts(date : Dayuts) : Dayuts;\r\n\r\n\r\n\r\n\r\nfunction dayuts(date : any | null = null, format : string | null = null, locale : string | null = null) : Dayuts {\r\n\tif (date != null && date instanceof Dayuts) return date.clone()\r\n\treturn new Dayuts({\r\n\t\tdate,\r\n\t\tformat,\r\n\t\tlocale\r\n\t} as DayutsConfig)\r\n}\r\n\r\n/**\r\n * 判断给定的对象是否为Dayuts实例\r\n * @param {(any | null)} date - 输入的对象\r\n * @returns {boolean} - 如果给定的对象是Dayuts实例，则返回true，否则返回false\r\n */\r\nfunction isDayuts(date : any | null = null) : boolean {\r\n\treturn date instanceof Dayuts\r\n}\r\n\r\nexport {\r\n\tdayuts,\r\n\tisDayuts\r\n}","// @ts-nocheck\nimport { Dayuts } from './index';\nimport { M, Y, W, D, DATE, H, MIN, S, MS, Q } from './constant';\nimport { DayutsUnit } from '../utssdk/interface';\n/**\n * 用指定字符串填充目标字符串的开头，以达到指定的总长度。\n *\n * @param {string} string - 需要填充的目标字符串。\n * @param {number} length - 填充后的总长度。\n * @param {string} pad - 用于填充的字符串。\n * @returns {string} 填充后的字符串。\n */\nfunction padStart(string: string, length: number, pad: string): string {\n    const str = string; //`${string}`\n    if (str.length >= length)\n        return str;\n    return str.padStart(length, pad); //`${Array((length + 1) - string.length).join(pad)}${string}`\n}\nexport { padStart };\nfunction padZoneStr(instance: Dayuts): string {\n    const negMinutes = -instance.utcOffset();\n    const minutes = Math.abs(negMinutes);\n    const hourOffset = Math.floor(minutes / 60);\n    const minuteOffset = minutes % 60;\n    return `${negMinutes <= 0 ? '+' : '-'}${padStart(hourOffset.toString(10), 2, '0')}:${padStart(minuteOffset.toString(10), 2, '0')}`;\n}\nexport { padZoneStr };\n// export function isNull(s): boolean{\n// \treturn s == null\n// }\nexport function isNumber(value: any | null): boolean {\n    return ['Byte', 'UByte', 'Short', 'UShort', 'Int', 'UInt', 'Long', 'ULong', 'Float', 'Double', 'number'].includes(typeof value);\n}\n/**\n * 将给定的时间单位转换为标准格式。\n *\n * @param {string} u - 要转换的时间单位。\n * @returns {string} 返回转换后的时间单位。\n */\nexport function prettyUnit(u: string): DayutsUnit {\n    const special = new Map<string, string>([\n        ['M', M],\n        ['y', Y],\n        ['w', W],\n        ['d', D],\n        ['D', DATE],\n        ['h', H],\n        ['m', MIN],\n        ['s', S],\n        ['ms', MS],\n        ['Q', Q]\n    ]);\n    return (special.get(u) ?? `${u}`.toLowerCase().replace(/s$/, '')) as DayutsUnit;\n}\n/**\n * 计算两个日期之间的月份差值\n * @param {Dayjs} a - 第一个日期\n * @param {Dayjs} b - 第二个日期\n * @returns {number} 返回两个日期之间的月份差值\n */\nexport function monthDiff(a: Dayuts, b: Dayuts): number {\n    // 该函数来自 moment.js，以保持相同的结果\n    if (a.date() < b.date())\n        return -monthDiff(b, a);\n    const wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month());\n    const anchor = a.clone().add(wholeMonthDiff, M).valueOf();\n    const c = b.valueOf() - anchor < 0;\n    const anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), M).valueOf();\n    // return +(-(wholeMonthDiff + ((b.valueOf() - anchor) / (c ? (anchor - anchor2) :\n    // \t(anchor2 - anchor)))) || 0)\n    const decimalMonthDiff = (b.valueOf() - anchor) / (c ? (anchor - anchor2) : (anchor2 - anchor));\n    const result = wholeMonthDiff + decimalMonthDiff;\n    const negatedResult = -result;\n    const absResult = +negatedResult;\n    const finalResult = !isNaN(absResult) ? absResult : 0;\n    return finalResult;\n}\n/**\n * 返回向下取整的绝对值\n * @param {number} n - 输入的数字\n * @returns {number} 返回向下取整的绝对值\n */\nexport function absFloor(n: number): number {\n    // return (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\n    return (n < 0 ? Math.max(Math.ceil(n), 0) : Math.floor(n));\n}\n//# sourceMappingURL=utils.uts.map","// @ts-nocheck\r\nimport { Dayuts } from './index'\r\nimport { M, Y, W, D, DATE, H, MIN, S, MS, Q } from './constant'\r\nimport {DayutsUnit} from '../utssdk/interface'\r\n/**\r\n * 用指定字符串填充目标字符串的开头，以达到指定的总长度。\r\n *\r\n * @param {string} string - 需要填充的目标字符串。\r\n * @param {number} length - 填充后的总长度。\r\n * @param {string} pad - 用于填充的字符串。\r\n * @returns {string} 填充后的字符串。\r\n */\r\nfunction padStart(string : string, length : number, pad : string) : string {\r\n\tconst str = string//`${string}`\r\n\tif (str.length >= length) return str\r\n\treturn str.padStart(length, pad) //`${Array((length + 1) - string.length).join(pad)}${string}`\r\n}\r\nexport {\r\n\tpadStart\r\n}\r\nfunction padZoneStr(instance : Dayuts) : string {\r\n\tconst negMinutes = -instance.utcOffset()\r\n\tconst minutes = Math.abs(negMinutes)\r\n\tconst hourOffset = Math.floor(minutes / 60)\r\n\tconst minuteOffset = minutes % 60\r\n\treturn `${negMinutes <= 0 ? '+' : '-'}${padStart(hourOffset.toString(), 2, '0')}:${padStart(minuteOffset.toString(), 2, '0')}`\r\n}\r\nexport {\r\n\tpadZoneStr\r\n}\r\n\r\n// export function isNull(s): boolean{\r\n// \treturn s == null\r\n// }\r\n\r\nexport function isNumber(value : any | null) : boolean {\r\n\r\n\treturn ['Byte', 'UByte', 'Short', 'UShort', 'Int', 'UInt', 'Long', 'ULong', 'Float', 'Double', 'number'].includes(typeof value)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * 将给定的时间单位转换为标准格式。\r\n *\r\n * @param {string} u - 要转换的时间单位。\r\n * @returns {string} 返回转换后的时间单位。\r\n */\r\nexport function prettyUnit(u : string) : DayutsUnit {\r\n\tconst special = new Map<string, string>([\r\n\t\t['M', M],\r\n\t\t['y', Y],\r\n\t\t['w', W],\r\n\t\t['d', D],\r\n\t\t['D', DATE],\r\n\t\t['h', H],\r\n\t\t['m', MIN],\r\n\t\t['s', S],\r\n\t\t['ms', MS],\r\n\t\t['Q', Q]\r\n\t])\r\n\treturn (special.get(u) ?? `${u}`.toLowerCase().replace(/s$/, '')) as DayutsUnit\r\n}\r\n\r\n\r\n/**\r\n * 计算两个日期之间的月份差值\r\n * @param {Dayjs} a - 第一个日期\r\n * @param {Dayjs} b - 第二个日期\r\n * @returns {number} 返回两个日期之间的月份差值\r\n */\r\nexport function monthDiff(a : Dayuts, b : Dayuts) : number {\r\n\t// 该函数来自 moment.js，以保持相同的结果\r\n\tif (a.date() < b.date()) return -monthDiff(b, a)\r\n\tconst wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month())\r\n\tconst anchor = a.clone().add(wholeMonthDiff, M).valueOf()\r\n\tconst c = b.valueOf() - anchor < 0\r\n\tconst anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), M).valueOf()\r\n\t// return +(-(wholeMonthDiff + ((b.valueOf() - anchor) / (c ? (anchor - anchor2) :\r\n\t// \t(anchor2 - anchor)))) || 0)\r\n\t\r\n\tconst decimalMonthDiff = (b.valueOf() - anchor) / (c ? (anchor - anchor2) : (anchor2 - anchor));\r\n\tconst result = wholeMonthDiff + decimalMonthDiff;\r\n\tconst negatedResult = -result;\r\n\tconst absResult = +negatedResult;\r\n\tconst finalResult = !isNaN(absResult) ? absResult : 0;\r\n\treturn finalResult;\r\n}\r\n\r\n\r\n/**\r\n * 返回向下取整的绝对值\r\n * @param {number} n - 输入的数字\r\n * @returns {number} 返回向下取整的绝对值\r\n */\r\nexport function absFloor(n : number):number {\r\n\t// return (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\r\n\treturn (n < 0 ? Math.max(Math.ceil(n), 0) : Math.floor(n))\r\n}","import _easycom_l_date_strip from '@/uni_modules/lime-date-strip/components/l-date-strip/l-date-strip.uvue';\nimport _easycom_l_icon from '@/uni_modules/lime-icon/components/l-icon/l-icon.uvue';\nimport _easycom_l_daily_punch from '@/uni_modules/lime-daily-punch/components/l-daily-punch/l-daily-punch.uvue';\nimport _easycom_fui_bottom_popup from '@/uni_modules/firstui-unix/components/fui-bottom-popup/fui-bottom-popup.uvue';\nimport _easycom_fui_icon from '@/uni_modules/firstui-unix/components/fui-icon/fui-icon.uvue';\nimport _easycom_fui_radio from '@/uni_modules/firstui-unix/components/fui-radio/fui-radio.uvue';\nimport _easycom_fui_list_cell from '@/uni_modules/firstui-unix/components/fui-list-cell/fui-list-cell.uvue';\nimport _easycom_fui_label from '@/uni_modules/firstui-unix/components/fui-label/fui-label.uvue';\nimport _easycom_fui_radio_group from '@/uni_modules/firstui-unix/components/fui-radio-group/fui-radio-group.uvue';\nimport _imports_0 from '@/static/notice.png';\nimport _imports_1 from '@/static/vedio.png';\nimport _imports_2 from '@/static/people.png';\nimport _imports_3 from '@/static/mobile.png';\nimport { ref, onMounted } from 'vue';\nimport { dayuts } from '@/uni_modules/lime-dayuts';\nimport { LDay, LYearMonth } from '@/uni_modules/lime-daily-punch';\nimport { DateStriPDay } from '@/uni_modules/lime-date-strip';\ntype RadioItem = {\n    __$originalPosition?: UTSSourceMapPosition<\"RadioItem\", \"pages/message/message.uvue\", 103, 7>;\n    deviceTitle: string;\n    iccid: string;\n    cardid: string;\n    cardState: string;\n    currentPackage: string;\n    useDate: string;\n    percent: number;\n    total: string;\n    checked?: boolean;\n};\nconst __sfc__ = defineComponent({\n    __name: 'message',\n    setup(__props): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        const checkIns = ref(['2025-07-07', '2025-07-08', '2025-07-09']);\n        const today = ref(dayuts().format('MM-DD'));\n        const showCalendar = ref<boolean>(false);\n        const isShowMoreDevice = ref<boolean>(false);\n        const currentDay = ref<number>(new Date().getTime());\n        const activeTab = ref(0);\n        const minDate: number = new Date(2022, 0, 10).getTime();\n        const maxDate: number = new Date(2025, 7, 12).getTime();\n        const customFormat = (day: DateStriPDay): DateStriPDay => {\n            const { date } = day;\n            const year = date.getFullYear();\n            const month = date.getMonth() + 1;\n            const curDate = date.getDate();\n            console.log(day.key, \" at pages/message/message.uvue:130\");\n            day.prefix = ''; //不显示星期\n            const specialDates = new Set<number>([7, 8, 10]);\n            if (specialDates.has(curDate)) {\n                day.suffix = 'true';\n            }\n            return day;\n        };\n        const onChange = (time: number) => {\n            console.log(time, \" at pages/message/message.uvue:144\");\n        };\n        //选择日期\n        const select = (day: LDay) => {\n            today.value = dayuts(day.fullDate).format('YYYY-MM-DD');\n            console.log(today.value, \" at pages/message/message.uvue:151\");\n            currentDay.value = new Date(today.value).getTime();\n            showCalendar.value = false;\n        };\n        const change = (res: LYearMonth) => {\n            console.log('res', res, \" at pages/message/message.uvue:156\");\n        };\n        const ShowCalendar = () => {\n            showCalendar.value = !showCalendar.value;\n        };\n        const hideCalendar = () => {\n            showCalendar.value = false;\n        };\n        const showMoreDevice = () => {\n            isShowMoreDevice.value = true;\n        };\n        const closePopup = () => {\n            isShowMoreDevice.value = false;\n        };\n        const currentDeviceInfo = ref<RadioItem>({\n            deviceTitle: '',\n            iccid: '',\n            cardid: '',\n            cardState: '',\n            currentPackage: '',\n            useDate: '',\n            percent: 0,\n            total: '',\n            checked: true,\n        } as RadioItem);\n        const radioItems = ref<RadioItem[]>([{\n                deviceTitle: '设备信息',\n                iccid: '1123456667777887',\n                cardid: '13000001111',\n                cardState: '在用',\n                currentPackage: '店长推荐【终身流量】',\n                useDate: '2025-07-07',\n                percent: 50,\n                total: '100',\n            } as RadioItem, {\n                deviceTitle: '设备信息1',\n                iccid: '1123456667777888',\n                cardid: '13000001111',\n                cardState: '停机',\n                currentPackage: '店长推荐【100G流量】',\n                useDate: '2025-07-08',\n                percent: 70,\n                total: '200',\n            } as RadioItem, {\n                deviceTitle: '设备信息2',\n                cardid: '13000001111',\n                iccid: '310203030443',\n                cardState: '注销',\n                currentPackage: '加油包',\n                useDate: '2025-07-09',\n                percent: 100,\n                total: '300',\n            } as RadioItem]);\n        const getValue = (e: string) => {\n            const selectedItem = radioItems.value.find((item): boolean => item.iccid == e);\n            if (selectedItem != null) {\n                console.log(selectedItem, \" at pages/message/message.uvue:222\");\n                selectedItem.checked = true;\n                currentDeviceInfo.value = selectedItem;\n            }\n        };\n        const currentInfo = () => {\n            radioItems.value.forEach(item => {\n                item.checked = false;\n            });\n            radioItems.value[0].checked = true;\n            currentDeviceInfo.value = radioItems.value[0];\n        };\n        const deviceDetail = () => {\n            uni.navigateTo({\n                url: '/pages/message/messageDeviceDetail/messageDeviceDetail'\n            });\n        };\n        const msgSystem = () => {\n            uni.navigateTo({\n                url: '/pages/message/messageSystem/messageSystem'\n            });\n        };\n        onMounted(() => {\n            currentInfo();\n        });\n        return (): any | null => {\n            const _component_l_date_strip = resolveEasyComponent(\"l-date-strip\", _easycom_l_date_strip);\n            const _component_l_icon = resolveEasyComponent(\"l-icon\", _easycom_l_icon);\n            const _component_l_daily_punch = resolveEasyComponent(\"l-daily-punch\", _easycom_l_daily_punch);\n            const _component_fui_bottom_popup = resolveEasyComponent(\"fui-bottom-popup\", _easycom_fui_bottom_popup);\n            const _component_fui_icon = resolveEasyComponent(\"fui-icon\", _easycom_fui_icon);\n            const _component_fui_radio = resolveEasyComponent(\"fui-radio\", _easycom_fui_radio);\n            const _component_fui_list_cell = resolveEasyComponent(\"fui-list-cell\", _easycom_fui_list_cell);\n            const _component_fui_label = resolveEasyComponent(\"fui-label\", _easycom_fui_label);\n            const _component_fui_radio_group = resolveEasyComponent(\"fui-radio-group\", _easycom_fui_radio_group);\n            return createElementVNode(\"view\", utsMapOf({ class: \"container\" }), [\n                createElementVNode(\"view\", utsMapOf({ class: \"data-strip\" }), [\n                    createElementVNode(\"view\", utsMapOf({ class: \"rili\" }), [\n                        createVNode(_component_l_date_strip, utsMapOf({\n                            format: customFormat,\n                            switchMode: \"week\",\n                            value: currentDay.value,\n                            minDate: unref(minDate),\n                            height: \"95rpx\",\n                            shape: \"square\",\n                            onChange: onChange\n                        }), null, 8 /* PROPS */, [\"value\", \"minDate\"])\n                    ]),\n                    createElementVNode(\"image\", utsMapOf({\n                        class: \"down\",\n                        onClick: ShowCalendar,\n                        src: \"/static/down.png\"\n                    }))\n                ]),\n                createElementVNode(\"view\", utsMapOf({ class: \"content-box\" }), [\n                    createElementVNode(\"view\", utsMapOf({ class: \"sub-nav\" }), [\n                        createElementVNode(\"view\", utsMapOf({\n                            class: \"today\",\n                            onClick: showMoreDevice\n                        }), [\n                            createElementVNode(\"text\", null, \"设备编号\"),\n                            createElementVNode(\"image\", utsMapOf({\n                                class: \"down\",\n                                src: \"/static/down.png\"\n                            }))\n                        ]),\n                        createElementVNode(\"view\", utsMapOf({ class: \"select\" }), [\n                            createElementVNode(\"image\", utsMapOf({\n                                class: \"notice\",\n                                src: _imports_0,\n                                onClick: msgSystem\n                            }))\n                        ])\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"tab-content\" }), [\n                        createElementVNode(\"view\", utsMapOf({ class: \"item-content\" }), [\n                            createElementVNode(\"view\", utsMapOf({ class: \"title-box\" }), [\n                                createElementVNode(\"text\", utsMapOf({ class: \"title\" }), \"设备名称\"),\n                                createElementVNode(\"view\", utsMapOf({\n                                    class: \"more\",\n                                    onClick: deviceDetail\n                                }), [\n                                    createElementVNode(\"text\", null, \"更多\"),\n                                    createVNode(_component_l_icon, utsMapOf({\n                                        name: \"chevron-right\",\n                                        size: \"20\"\n                                    }))\n                                ])\n                            ]),\n                            createElementVNode(\"view\", utsMapOf({ class: \"item-detail\" }), [\n                                createElementVNode(\"view\", utsMapOf({ class: \"item-left\" }), [\n                                    createElementVNode(\"image\", utsMapOf({\n                                        class: \"device-img\",\n                                        src: _imports_1\n                                    })),\n                                    createElementVNode(\"view\", utsMapOf({ class: \"item-info\" }), [\n                                        createElementVNode(\"text\", null, \"人形侦测\"),\n                                        createElementVNode(\"text\", null, \"15:29\")\n                                    ])\n                                ]),\n                                createElementVNode(\"image\", utsMapOf({\n                                    class: \"item-icon\",\n                                    mode: \"aspectFit\",\n                                    src: _imports_2\n                                }))\n                            ])\n                        ]),\n                        createElementVNode(\"view\", utsMapOf({ class: \"item-content\" }), [\n                            createElementVNode(\"view\", utsMapOf({ class: \"title-box\" }), [\n                                createElementVNode(\"text\", utsMapOf({ class: \"title\" }), \"设备名称1\"),\n                                createElementVNode(\"view\", utsMapOf({ class: \"more\" }), [\n                                    createElementVNode(\"text\", null, \"更多\"),\n                                    createVNode(_component_l_icon, utsMapOf({\n                                        name: \"chevron-right\",\n                                        size: \"20\"\n                                    }))\n                                ])\n                            ]),\n                            createElementVNode(\"view\", utsMapOf({ class: \"item-detail\" }), [\n                                createElementVNode(\"view\", utsMapOf({ class: \"item-left\" }), [\n                                    createElementVNode(\"image\", utsMapOf({\n                                        class: \"device-img\",\n                                        src: _imports_1\n                                    })),\n                                    createElementVNode(\"view\", utsMapOf({ class: \"item-info\" }), [\n                                        createElementVNode(\"text\", null, \"移动侦测\"),\n                                        createElementVNode(\"text\", null, \"15:29\")\n                                    ])\n                                ]),\n                                createElementVNode(\"image\", utsMapOf({\n                                    class: \"item-icon\",\n                                    mode: \"aspectFit\",\n                                    src: _imports_3\n                                }))\n                            ])\n                        ])\n                    ])\n                ]),\n                createVNode(_component_fui_bottom_popup, utsMapOf({\n                    visible: showCalendar.value,\n                    onClose: hideCalendar\n                }), utsMapOf({\n                    default: withSlotCtx((): any[] => [\n                        createElementVNode(\"view\", utsMapOf({ class: \"calendar-box\" }), [\n                            createVNode(_component_l_daily_punch, utsMapOf({\n                                signedDates: checkIns.value,\n                                onSelect: select,\n                                onPanelChange: change,\n                                dayHeight: 60\n                            }), null, 8 /* PROPS */, [\"signedDates\"]),\n                            createElementVNode(\"button\", utsMapOf({\n                                class: \"btn-chanel-box\",\n                                onClick: hideCalendar\n                            }), \" 取消 \")\n                        ])\n                    ]),\n                    _: 1 /* STABLE */\n                }), 8 /* PROPS */, [\"visible\"]),\n                createVNode(_component_fui_bottom_popup, utsMapOf({\n                    visible: isShowMoreDevice.value,\n                    onClose: closePopup\n                }), utsMapOf({\n                    default: withSlotCtx((): any[] => [\n                        createElementVNode(\"view\", utsMapOf({ class: \"fui-scroll__wrap\" }), [\n                            createElementVNode(\"view\", utsMapOf({ class: \"popup-title\" }), [\n                                createElementVNode(\"text\", null, \"设备列表\"),\n                                createElementVNode(\"view\", utsMapOf({ onClick: closePopup }), [\n                                    createVNode(_component_fui_icon, utsMapOf({\n                                        name: \"close\",\n                                        size: 40\n                                    }))\n                                ])\n                            ]),\n                            createVNode(_component_fui_radio_group, utsMapOf({ onChange: getValue }), utsMapOf({\n                                default: withSlotCtx((): any[] => [\n                                    createElementVNode(Fragment, null, RenderHelpers.renderList(radioItems.value, (item, index, __index, _cached): any => {\n                                        return createVNode(_component_fui_label, utsMapOf({ key: index }), utsMapOf({\n                                            default: withSlotCtx((): any[] => [\n                                                createVNode(_component_fui_list_cell, null, utsMapOf({\n                                                    default: withSlotCtx((): any[] => [\n                                                        createElementVNode(\"view\", utsMapOf({ class: \"fui-list__cell\" }), [\n                                                            createElementVNode(\"text\", null, toDisplayString(item.deviceTitle), 1 /* TEXT */),\n                                                            createVNode(_component_fui_radio, utsMapOf({\n                                                                checked: item.checked,\n                                                                value: item.iccid\n                                                            }), null, 8 /* PROPS */, [\"checked\", \"value\"])\n                                                        ])\n                                                    ]),\n                                                    _: 2 /* DYNAMIC */\n                                                }), 1024 /* DYNAMIC_SLOTS */)\n                                            ]),\n                                            _: 2 /* DYNAMIC */\n                                        }), 1024 /* DYNAMIC_SLOTS */);\n                                    }), 128 /* KEYED_FRAGMENT */)\n                                ]),\n                                _: 1 /* STABLE */\n                            }))\n                        ])\n                    ]),\n                    _: 1 /* STABLE */\n                }), 8 /* PROPS */, [\"visible\"])\n            ]);\n        };\n    }\n});\nexport default __sfc__;\nconst GenPagesMessageMessageStyles = [utsMapOf([[\"container\", padStyleMapOf(utsMapOf([[\"width\", \"100%\"], [\"height\", \"100%\"], [\"position\", \"relative\"], [\"backgroundColor\", \"#f3f3f3\"]]))], [\"data-strip\", utsMapOf([[\".container \", utsMapOf([[\"width\", \"100%\"], [\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"backgroundColor\", \"#ffffff\"], [\"paddingRight\", \"20rpx\"]])]])], [\"rili\", utsMapOf([[\".container .data-strip \", utsMapOf([[\"flex\", 3], [\"height\", \"95rpx\"]])]])], [\"down\", utsMapOf([[\".container .data-strip \", utsMapOf([[\"width\", \"32rpx\"], [\"height\", \"32rpx\"]])], [\".container .content-box .sub-nav .today \", utsMapOf([[\"width\", \"25rpx\"], [\"height\", \"25rpx\"]])]])], [\"content-box\", utsMapOf([[\".container \", utsMapOf([[\"paddingTop\", \"30rpx\"], [\"paddingRight\", \"20rpx\"], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", \"20rpx\"]])]])], [\"sub-nav\", utsMapOf([[\".container .content-box \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"]])]])], [\"today\", utsMapOf([[\".container .content-box .sub-nav \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"], [\"width\", \"140rpx\"]])]])], [\"notice\", utsMapOf([[\".container .content-box .sub-nav .select \", utsMapOf([[\"width\", \"48rpx\"], [\"height\", \"48rpx\"]])]])], [\"tab-content\", utsMapOf([[\".container .content-box \", utsMapOf([[\"width\", \"100%\"], [\"display\", \"flex\"], [\"flexDirection\", \"column\"], [\"alignItems\", \"center\"]])]])], [\"item-content\", utsMapOf([[\".container .content-box .tab-content \", utsMapOf([[\"width\", \"100%\"], [\"backgroundColor\", \"#ffffff\"], [\"paddingTop\", \"30rpx\"], [\"paddingRight\", \"30rpx\"], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", \"30rpx\"], [\"borderTopLeftRadius\", \"20rpx\"], [\"borderTopRightRadius\", \"20rpx\"], [\"borderBottomRightRadius\", \"20rpx\"], [\"borderBottomLeftRadius\", \"20rpx\"], [\"marginTop\", \"30rpx\"]])]])], [\"title-box\", utsMapOf([[\".container .content-box .tab-content .item-content \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"], [\"marginBottom\", \"30rpx\"]])]])], [\"title\", utsMapOf([[\".container .content-box .tab-content .item-content .title-box \", utsMapOf([[\"fontSize\", \"30rpx\"], [\"color\", \"#333333\"], [\"fontWeight\", \"bold\"]])]])], [\"more\", utsMapOf([[\".container .content-box .tab-content .item-content .title-box \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"]])]])], [\"item-detail\", utsMapOf([[\".container .content-box .tab-content .item-content \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"]])]])], [\"item-left\", utsMapOf([[\".container .content-box .tab-content .item-content .item-detail \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"]])]])], [\"device-img\", utsMapOf([[\".container .content-box .tab-content .item-content .item-detail .item-left \", utsMapOf([[\"width\", \"200rpx\"], [\"height\", \"100rpx\"], [\"marginRight\", \"20rpx\"]])]])], [\"item-info\", utsMapOf([[\".container .content-box .tab-content .item-content .item-detail .item-left \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"column\"], [\"alignItems\", \"flex-start\"], [\"justifyContent\", \"space-between\"]])]])], [\"item-icon\", utsMapOf([[\".container .content-box .tab-content .item-content .item-detail \", utsMapOf([[\"width\", \"50rpx\"], [\"height\", \"50rpx\"]])]])], [\"calendar-box\", utsMapOf([[\".container \", utsMapOf([[\"width\", \"100%\"], [\"backgroundColor\", \"#ffffff\"]])]])], [\"btn-chanel-box\", utsMapOf([[\".container .calendar-box \", utsMapOf([[\"position\", \"absolute\"], [\"width\", \"85%\"], [\"bottom\", \"45rpx\"], [\"left\", \"60rpx\"], [\"borderTopLeftRadius\", \"50rpx\"], [\"borderTopRightRadius\", \"50rpx\"], [\"borderBottomRightRadius\", \"50rpx\"], [\"borderBottomLeftRadius\", \"50rpx\"]])]])], [\"popup-title\", utsMapOf([[\".container \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"space-between\"], [\"paddingTop\", 0], [\"paddingRight\", \"40rpx\"], [\"paddingBottom\", 0], [\"paddingLeft\", \"40rpx\"]])]])], [\"fui-scroll__wrap\", utsMapOf([[\".container \", utsMapOf([[\"width\", \"100%\"], [\"paddingTop\", \"30rpx\"], [\"paddingRight\", 0], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", 0], [\"position\", \"relative\"]])]])], [\"fui-sub__title\", utsMapOf([[\".container \", utsMapOf([[\"textAlign\", \"center\"], [\"fontSize\", \"24rpx\"], [\"color\", \"#7F7F7F\"], [\"transform\", \"scale(0.9)\"]])]])], [\"fui-scroll__view\", utsMapOf([[\".container \", utsMapOf([[\"width\", \"100%\"], [\"height\", \"50%\"]])]])], [\"fui-list__cell\", utsMapOf([[\".container \", utsMapOf([[\"flex\", 1], [\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"]])]])]])];\n//# sourceMappingURL=message.uvue.map","<template>\r\n\t<view class=\"container\">\r\n\t\t<view class=\"data-strip\">\r\n\t\t\t<view class=\"rili\">\r\n\t\t\t\t<l-date-strip :format=\"customFormat\" switchMode=\"week\" :value=\"currentDay\" :minDate=\"minDate\" height=\"95rpx\" shape=\"square\"\r\n\t\t\t\t\t@change=\"onChange\">\r\n\t\t\t\t</l-date-strip>\r\n\t\t\t</view>\r\n\t\t\t<image class=\"down\" @click=\"ShowCalendar\" src=\"/static/down.png\" />\r\n\t\t</view>\r\n\t\t<view class=\"content-box\">\r\n\t\t\t<view class=\"sub-nav\">\r\n\t\t\t\t<view class=\"today\" @click=\"showMoreDevice\">\r\n\t\t\t\t\t<text>设备编号</text>\r\n\t\t\t\t\t<image class=\"down\" src=\"/static/down.png\" />\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"select\">\r\n\t\t\t\t\t<image class=\"notice\" src=\"@/static/notice.png\" @click=\"msgSystem\" />\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"tab-content\">\r\n\t\t\t\t<view class=\"item-content\">\r\n\t\t\t\t\t<view class=\"title-box\">\r\n\t\t\t\t\t\t<text class=\"title\">设备名称</text>\r\n\t\t\t\t\t\t<view class=\"more\" @click=\"deviceDetail\">\r\n\t\t\t\t\t\t\t<text>更多</text>\r\n\t\t\t\t\t\t\t<l-icon name=\"chevron-right\" size=\"20\"></l-icon>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"item-detail\">\r\n\t\t\t\t\t\t<view class=\"item-left\">\r\n\t\t\t\t\t\t\t<image class=\"device-img\" src=\"@/static/vedio.png\" />\r\n\t\t\t\t\t\t\t<view class=\"item-info\">\r\n\t\t\t\t\t\t\t\t<text>人形侦测</text>\r\n\t\t\t\t\t\t\t\t<text>15:29</text>\t\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<image class=\"item-icon\" mode=\"aspectFit\"\r\n\t\t\t\t\t\t\tsrc=\"@/static/people.png\" />\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"item-content\">\r\n\t\t\t\t\t<view class=\"title-box\">\r\n\t\t\t\t\t\t<text class=\"title\">设备名称1</text>\r\n\t\t\t\t\t\t<view class=\"more\">\r\n\t\t\t\t\t\t\t<text>更多</text>\r\n\t\t\t\t\t\t\t<l-icon name=\"chevron-right\" size=\"20\"></l-icon>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"item-detail\">\r\n\t\t\t\t\t\t<view class=\"item-left\">\r\n\t\t\t\t\t\t\t<image class=\"device-img\" src=\"@/static/vedio.png\" />\r\n\t\t\t\t\t\t\t<view class=\"item-info\">\r\n\t\t\t\t\t\t\t\t<text>移动侦测</text>\r\n\t\t\t\t\t\t\t\t<text>15:29</text>\t\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<image class=\"item-icon\" mode=\"aspectFit\"\r\n\t\t\t\t\t\t\tsrc=\"@/static/mobile.png\" />\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<fui-bottom-popup :visible=\"showCalendar\" @close=\"hideCalendar\">\r\n\t\t\t<view class=\"calendar-box\">\r\n\t\t\t\t<l-daily-punch :signedDates=\"checkIns\" @select=\"select\" @panelChange=\"change\"\r\n\t\t\t\t\t:dayHeight=\"60\"></l-daily-punch>\r\n\t\t\t\t<button class=\"btn-chanel-box\" @click=\"hideCalendar\">\r\n\t\t\t\t\t取消\r\n\t\t\t\t</button>\r\n\t\t\t</view>\r\n\t\t</fui-bottom-popup>\r\n\t\t\t\t<fui-bottom-popup :visible=\"isShowMoreDevice\" @close=\"closePopup\">\r\n\t\t\t<view class=\"fui-scroll__wrap\">\r\n\t\t\t\t<view class=\"popup-title\">\r\n\t\t\t\t\t<text>设备列表</text>\r\n\t\t\t\t\t<view @click=\"closePopup\">\r\n\t\t\t\t\t\t<fui-icon name=\"close\" :size=\"40\"></fui-icon>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<fui-radio-group @change=\"getValue\">\r\n\t\t\t\t\t<fui-label v-for=\"(item,index) in radioItems\" :key=\"index\">\r\n\t\t\t\t\t\t<fui-list-cell>\r\n\t\t\t\t\t\t\t<view class=\"fui-list__cell\">\r\n\t\t\t\t\t\t\t\t<text>{{item.deviceTitle}}</text>\r\n\t\t\t\t\t\t\t\t<fui-radio :checked=\"item.checked\" :value=\"item.iccid\">\r\n\t\t\t\t\t\t\t\t</fui-radio>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</fui-list-cell>\r\n\t\t\t\t\t</fui-label>\r\n\t\t\t\t</fui-radio-group>\r\n\t\t\t</view>\r\n\t\t</fui-bottom-popup>\r\n\t</view>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n\timport { ref,onMounted } from 'vue'\r\n\timport { dayuts } from '@/uni_modules/lime-dayuts';\r\n\timport { LDay, LYearMonth } from '@/uni_modules/lime-daily-punch'\r\n\timport { DateStriPDay } from '@/uni_modules/lime-date-strip';\r\n\r\n\ttype RadioItem = {\r\n\t\tdeviceTitle : string;\r\n\t\ticcid : string;\r\n\t\tcardid : string;\r\n\t\tcardState : string;\r\n\t\tcurrentPackage : string;\r\n\t\tuseDate : string;\r\n\t\tpercent : number;\r\n\t\ttotal : string;\r\n\t\tchecked ?: boolean;\r\n\t}\r\n\r\n\tconst checkIns = ref(['2025-07-07', '2025-07-08', '2025-07-09'])\r\n\tconst today = ref(dayuts().format('MM-DD'))\r\n\tconst showCalendar = ref<boolean>(false)\r\n\tconst isShowMoreDevice = ref<boolean>(false)\r\n\tconst currentDay = ref<number>(new Date().getTime())\r\n\r\n\tconst activeTab = ref(0)\r\n\tconst minDate : number = new Date(2022, 0, 10).getTime()\r\n\tconst maxDate : number = new Date(2025, 7, 12).getTime()\r\n\r\n\tconst customFormat = (day : DateStriPDay) : DateStriPDay => {\r\n\t\tconst { date } = day;\r\n\t\tconst year = date.getFullYear();\r\n\t\tconst month = date.getMonth() + 1;\r\n\t\tconst curDate = date.getDate();\r\n\t\tconsole.log(day.key)\r\n\r\n\t\tday.prefix = '' //不显示星期\r\n\r\n\t\tconst specialDates = new Set<number>([7, 8, 10]);\r\n\t\tif (specialDates.has(curDate)) {\r\n\t\t\tday.suffix = 'true';\r\n\t\t}\r\n\r\n\t\treturn day;\r\n\t};\r\n\r\n\r\n\tconst onChange = (time : number) => {\r\n\t\tconsole.log(time)\r\n\t}\r\n\r\n\r\n\t//选择日期\r\n\tconst select = (day : LDay) => {\r\n\t\ttoday.value = dayuts(day.fullDate).format('YYYY-MM-DD')\r\n\t\tconsole.log(today.value)\r\n\t\tcurrentDay.value = new Date(today.value).getTime()\r\n\t\tshowCalendar.value = false\r\n\t}\r\n\tconst change = (res : LYearMonth) => {\r\n\t\tconsole.log('res', res)\r\n\t}\r\n\r\n\tconst ShowCalendar = () => {\r\n\t\tshowCalendar.value = !showCalendar.value\r\n\t}\r\n\r\n\tconst hideCalendar = () => {\r\n\t\tshowCalendar.value = false\r\n\t}\r\n\r\n\tconst showMoreDevice = () => {\r\n\t\tisShowMoreDevice.value = true\r\n\t}\r\n\tconst closePopup = () => {\r\n\t\tisShowMoreDevice.value = false\r\n\t}\r\n\r\n\tconst currentDeviceInfo = ref<RadioItem>({\r\n\t\tdeviceTitle: '',\r\n\t\ticcid: '',\r\n\t\tcardid: '',\r\n\t\tcardState: '',\r\n\t\tcurrentPackage: '',\r\n\t\tuseDate: '',\r\n\t\tpercent: 0,\r\n\t\ttotal: '',\r\n\t\tchecked: true,\r\n\t})\r\n\r\n\tconst radioItems = ref<RadioItem[]>([{\r\n\t\tdeviceTitle: '设备信息',\r\n\t\ticcid: '1123456667777887',\r\n\t\tcardid: '13000001111',\r\n\t\tcardState: '在用',\r\n\t\tcurrentPackage: '店长推荐【终身流量】',\r\n\t\tuseDate: '2025-07-07',\r\n\t\tpercent: 50,\r\n\t\ttotal: '100',\r\n\t},\r\n\t{\r\n\t\tdeviceTitle: '设备信息1',\r\n\t\ticcid: '1123456667777888',\r\n\t\tcardid: '13000001111',\r\n\t\tcardState: '停机',\r\n\t\tcurrentPackage: '店长推荐【100G流量】',\r\n\t\tuseDate: '2025-07-08',\r\n\t\tpercent: 70,\r\n\t\ttotal: '200',\r\n\t},\r\n\t{\r\n\t\tdeviceTitle: '设备信息2',\r\n\t\tcardid: '13000001111',\r\n\t\ticcid: '310203030443',\r\n\t\tcardState: '注销',\r\n\t\tcurrentPackage: '加油包',\r\n\t\tuseDate: '2025-07-09',\r\n\t\tpercent: 100,\r\n\t\ttotal: '300',\r\n\t}])\r\n\r\n\r\n\r\n\tconst getValue = (e : string) => {\r\n\t\tconst selectedItem = radioItems.value.find(item => item.iccid == e)\r\n\t\tif (selectedItem != null) {\r\n\t\t\tconsole.log(selectedItem)\r\n\t\t\tselectedItem.checked = true\r\n\t\t\tcurrentDeviceInfo.value = selectedItem\r\n\t\t}\r\n\t}\r\n\r\n\tconst currentInfo = () => {\r\n\t\tradioItems.value.forEach(item => {\r\n\t\t\titem.checked = false\r\n\t\t})\r\n\t\tradioItems.value[0].checked = true\r\n\t\tcurrentDeviceInfo.value = radioItems.value[0]\r\n\t}\r\n\r\n\tconst deviceDetail = () => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: '/pages/message/messageDeviceDetail/messageDeviceDetail'\r\n\t\t})\r\n\r\n\t}\r\n\t\r\n\tconst msgSystem = () => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: '/pages/message/messageSystem/messageSystem'\r\n\t\t})\r\n\t}\r\n\r\n\tonMounted(() => {\r\n\t\tcurrentInfo()\r\n\t})\r\n\r\n</script>\r\n\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: relative;\r\n\t\tbackground-color: #f3f3f3;\r\n\r\n\t\t.data-strip {\r\n\t\t\twidth: 100%;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tpadding-right: 20rpx;\r\n\r\n\t\t\t.rili {\r\n\t\t\t\tflex: 3;\r\n\t\t\t\theight: 95rpx;\r\n\t\t\t}\r\n\r\n\t\t\t.down {\r\n\t\t\t\twidth: 32rpx;\r\n\t\t\t\theight: 32rpx;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t.content-box {\r\n\t\t\tpadding: 30rpx 20rpx;\r\n\r\n\t\t\t.sub-nav {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\r\n\t\t\t\t.today {\r\n\t\t\t\t\twidth: 140rpx;\r\n\t\t\t\t\t@extend .sub-nav;\r\n\t\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t\t.down {\r\n\t\t\t\t\t\twidth: 25rpx;\r\n\t\t\t\t\t\theight: 25rpx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select {\r\n\t\t\t\t\t.notice {\r\n\t\t\t\t\t\twidth: 48rpx;\r\n\t\t\t\t\t\theight: 48rpx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.tab-content {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t.item-content {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tbackground-color: #fff;\r\n\t\t\t\t\tpadding: 30rpx;\r\n\t\t\t\t\tborder-radius: 20rpx;\r\n\t\t\t\t\tmargin-top: 30rpx;\r\n\t\t\t\t\t.title-box {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\t\talign-items: center;\r\n\t\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\t\tmargin-bottom: 30rpx;\r\n\r\n\t\t\t\t\t\t.title {\r\n\t\t\t\t\t\t\tfont-size: 30rpx;\r\n\t\t\t\t\t\t\tcolor: #333;\r\n\t\t\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t.more {\r\n\t\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\t\t\talign-items: center;\r\n\t\t\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.item-detail{\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\t\talign-items: center;\r\n\t\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\t\t.item-left{\r\n\t\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\t\t\t.device-img{\r\n\t\t\t\t\t\t\t\twidth: 200rpx;\r\n\t\t\t\t\t\t\t\theight: 100rpx;\r\n\t\t\t\t\t\t\t\tmargin-right: 20rpx;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t.item-info{\r\n\t\t\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\t\t\t\talign-items: flex-start;\r\n\t\t\t\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t.item-icon{\r\n\t\t\t\t\t\t\twidth: 50rpx;\r\n\t\t\t\t\t\t\theight: 50rpx;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\t.calendar-box {\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #fff;\r\n\r\n\t\t\t.btn-chanel-box {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\twidth: 85%;\r\n\t\t\t\tbottom: 45rpx;\r\n\t\t\t\tleft: 60rpx;\r\n\t\t\t\tborder-radius: 50rpx;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.popup-title {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tpadding: 0 40rpx;\r\n\t\t}\r\n\r\n\t\t.fui-scroll__wrap {\r\n\t\t\twidth: 100%;\r\n\t\t\tpadding: 30rpx 0;\r\n\t\t\tposition: relative;\r\n\t\t}\r\n\r\n\t\t.fui-sub__title {\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #7F7F7F;\r\n\t\t\ttransform: scale(.9);\r\n\t\t}\r\n\r\n\t\t.fui-scroll__view {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 50%;\r\n\t\t}\r\n\r\n\t\t.fui-list__cell {\r\n\t\t\tflex: 1;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\t}\r\n</style>","export default \"/static/mine/right.png\";\n//# sourceMappingURL=right.png.uts.map","export default \"/static/mine/right.png\"","export default \"/static/error_big.png\";\n//# sourceMappingURL=error_big.png.uts.map","export default \"/static/error_big.png\"","export interface ProgressProps {\n    // percent: number,\n    showInfo: boolean;\n    infoType: string;\n    infoAlign: string;\n    strokeColor: string; //|string[],\n    trailColor: string;\n    linecap: string;\n    infoColor: string;\n    fontSize: any;\n    strokeWidth: any;\n}\nexport type LProgressOptions = {\n    showInfo?: boolean;\n    strokeColor?: string;\n    trailColor?: string;\n    linecap?: string;\n    fontSize?: number;\n    infoAlign?: string;\n    infoType?: string;\n    strokeWidth?: number;\n    infoColor?: string;\n};\n//# sourceMappingURL=types.uts.map","export interface ProgressProps {\r\n\t// percent: number,\r\n\tshowInfo: boolean,\r\n\tinfoType: string,\r\n\tinfoAlign: string,\r\n\r\n\tstrokeColor: string,//|string[],\r\n\ttrailColor: string,\r\n\tlinecap: string,\r\n\tinfoColor: string\r\n\tfontSize: any,\r\n\tstrokeWidth: any,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport type LProgressOptions = {\r\n\tshowInfo?: boolean,\r\n\tstrokeColor?: string,\r\n\ttrailColor?: string,\r\n\tlinecap?: string,\r\n\tfontSize?: number,\r\n\tinfoAlign?: string,\r\n\tinfoType?: string,\r\n\tstrokeWidth?: number,\r\n\tinfoColor?: string\r\n}","export function cubicBezier(p1x: number, p1y: number, p2x: number, p2y: number): (x: number) => number {\n    const ZERO_LIMIT = 1e-6;\n    // Calculate the polynomial coefficients,\n    // implicit first and last control points are (0,0) and (1,1).\n    const ax = 3 * p1x - 3 * p2x + 1;\n    const bx = 3 * p2x - 6 * p1x;\n    const cx = 3 * p1x;\n    const ay = 3 * p1y - 3 * p2y + 1;\n    const by = 3 * p2y - 6 * p1y;\n    const cy = 3 * p1y;\n    function sampleCurveDerivativeX(t: number): number {\n        // `ax t^3 + bx t^2 + cx t` expanded using Horner's rule\n        return (3 * ax * t + 2 * bx) * t + cx;\n    }\n    function sampleCurveX(t: number): number {\n        return ((ax * t + bx) * t + cx) * t;\n    }\n    function sampleCurveY(t: number): number {\n        return ((ay * t + by) * t + cy) * t;\n    }\n    // Given an x value, find a parametric value it came from.\n    function solveCurveX(x: number): number {\n        let t2 = x;\n        let derivative: number;\n        let x2: number;\n        // https://trac.webkit.org/browser/trunk/Source/WebCore/platform/animation\n        // first try a few iterations of Newton's method -- normally very fast.\n        // http://en.wikipedia.org/wikiNewton's_method\n        for (let i = 0; i < 8; i++) {\n            // f(t) - x = 0\n            x2 = sampleCurveX(t2) - x;\n            if (Math.abs(x2) < ZERO_LIMIT) {\n                return t2;\n            }\n            derivative = sampleCurveDerivativeX(t2);\n            // == 0, failure\n            /* istanbul ignore if */\n            if (Math.abs(derivative) < ZERO_LIMIT) {\n                break;\n            }\n            t2 -= x2 / derivative;\n        }\n        // Fall back to the bisection method for reliability.\n        // bisection\n        // http://en.wikipedia.org/wiki/Bisection_method\n        let t1 = 1;\n        /* istanbul ignore next */\n        let t0 = 0;\n        /* istanbul ignore next */\n        t2 = x;\n        /* istanbul ignore next */\n        while (t1 > t0) {\n            x2 = sampleCurveX(t2) - x;\n            if (Math.abs(x2) < ZERO_LIMIT) {\n                return t2;\n            }\n            if (x2 > 0) {\n                t1 = t2;\n            }\n            else {\n                t0 = t2;\n            }\n            t2 = (t1 + t0) / 2;\n        }\n        // Failure\n        return t2;\n    }\n    return function (x: number): number {\n        return sampleCurveY(solveCurveX(x));\n    };\n    // return solve;\n}\n//# sourceMappingURL=bezier.uts.map","export function cubicBezier(p1x : number, p1y : number, p2x : number, p2y : number):(x: number)=> number {\r\n\tconst ZERO_LIMIT = 1e-6;\r\n\t// Calculate the polynomial coefficients,\r\n\t// implicit first and last control points are (0,0) and (1,1).\r\n\tconst ax = 3 * p1x - 3 * p2x + 1;\r\n\tconst bx = 3 * p2x - 6 * p1x;\r\n\tconst cx = 3 * p1x;\r\n\r\n\tconst ay = 3 * p1y - 3 * p2y + 1;\r\n\tconst by = 3 * p2y - 6 * p1y;\r\n\tconst cy = 3 * p1y;\r\n\r\n\tfunction sampleCurveDerivativeX(t : number) : number {\r\n\t\t// `ax t^3 + bx t^2 + cx t` expanded using Horner's rule\r\n\t\treturn (3 * ax * t + 2 * bx) * t + cx;\r\n\t}\r\n\r\n\tfunction sampleCurveX(t : number) : number {\r\n\t\treturn ((ax * t + bx) * t + cx) * t;\r\n\t}\r\n\r\n\tfunction sampleCurveY(t : number) : number {\r\n\t\treturn ((ay * t + by) * t + cy) * t;\r\n\t}\r\n\r\n\t// Given an x value, find a parametric value it came from.\r\n\tfunction solveCurveX(x : number) : number {\r\n\t\tlet t2 = x;\r\n\t\tlet derivative : number;\r\n\t\tlet x2 : number;\r\n\r\n\t\t// https://trac.webkit.org/browser/trunk/Source/WebCore/platform/animation\r\n\t\t// first try a few iterations of Newton's method -- normally very fast.\r\n\t\t// http://en.wikipedia.org/wikiNewton's_method\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t// f(t) - x = 0\r\n\t\t\tx2 = sampleCurveX(t2) - x;\r\n\t\t\tif (Math.abs(x2) < ZERO_LIMIT) {\r\n\t\t\t\treturn t2;\r\n\t\t\t}\r\n\t\t\tderivative = sampleCurveDerivativeX(t2);\r\n\t\t\t// == 0, failure\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (Math.abs(derivative) < ZERO_LIMIT) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tt2 -= x2 / derivative;\r\n\t\t}\r\n\r\n\t\t// Fall back to the bisection method for reliability.\r\n\t\t// bisection\r\n\t\t// http://en.wikipedia.org/wiki/Bisection_method\r\n\t\tlet t1 = 1;\r\n\t\t/* istanbul ignore next */\r\n\t\tlet t0 = 0;\r\n\r\n\t\t/* istanbul ignore next */\r\n\t\tt2 = x;\r\n\t\t/* istanbul ignore next */\r\n\t\twhile (t1 > t0) {\r\n\t\t\tx2 = sampleCurveX(t2) - x;\r\n\t\t\tif (Math.abs(x2) < ZERO_LIMIT) {\r\n\t\t\t\treturn t2;\r\n\t\t\t}\r\n\t\t\tif (x2 > 0) {\r\n\t\t\t\tt1 = t2;\r\n\t\t\t} else {\r\n\t\t\t\tt0 = t2;\r\n\t\t\t}\r\n\t\t\tt2 = (t1 + t0) / 2;\r\n\t\t}\r\n\r\n\t\t// Failure\r\n\t\treturn t2;\r\n\t}\r\n\r\n\treturn function (x : number) : number {\r\n\t\treturn sampleCurveY(solveCurveX(x));\r\n\t}\r\n\r\n\t// return solve;\r\n}","import { cubicBezier } from './bezier';\nexport let ease = cubicBezier(0.25, 0.1, 0.25, 1);\nexport let linear = cubicBezier(0, 0, 1, 1);\n//# sourceMappingURL=ease.uts.map","import {cubicBezier} from './bezier';\r\nexport let ease = cubicBezier(0.25, 0.1, 0.25, 1);\r\nexport let linear = cubicBezier(0,0,1,1);","// @ts-nocheck\n// 是否支持被动事件监听\nexport const supportsPassive = true;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// 请求动画帧\nexport function raf(fn: UniAnimationFrameCallback): number\nexport function raf(fn: UniAnimationFrameCallbackWithNoArgument): number\nexport function raf(fn: any): number {\n\tif(typeof fn == 'UniAnimationFrameCallback') {\n\t\treturn requestAnimationFrame(fn as UniAnimationFrameCallback); \n\t} else {\n\t\treturn requestAnimationFrame(fn as UniAnimationFrameCallbackWithNoArgument); \n\t}\n}\n\n// 取消动画帧\nexport function cancelRaf(id: number) {\n  cancelAnimationFrame(id);\n}\n\n// 双倍动画帧\nexport function doubleRaf(fn: UniAnimationFrameCallback): void \nexport function doubleRaf(fn: UniAnimationFrameCallbackWithNoArgument): void \nexport function doubleRaf(fn: any): void {\n  raf(():number => raf(fn)); // 在下一帧回调中再次请求动画帧，实现双倍动画帧效果\n}\n\n\n","// @ts-nocheck\r\nimport { raf,  cancelRaf} from '../raf'\r\nexport class Timeline {\r\n\tstate : string\r\n\tanimations : Set<Animation> = new Set<Animation>()\r\n\tdelAnimations : Animation[] = []\r\n\tstartTimes : Map<Animation, number> = new Map<Animation, number>()\r\n\tpauseTime : number = 0\r\n\tpauseStart : number = Date.now()\r\n\ttickHandler : number = 0\r\n\ttickHandlers : number[] = []\r\n\ttick : (() => void) | null = null\r\n\tconstructor() {\r\n\t\tthis.state = 'Initiated';\r\n\t}\r\n\tstart() {\r\n\t\tif (!(this.state == 'Initiated')) return;\r\n\t\tthis.state = 'Started';\r\n\r\n\t\tlet startTime = Date.now();\r\n\t\tthis.pauseTime = 0;\r\n\t\tthis.tick = () => {\r\n\t\t\tlet now = Date.now();\r\n\t\t\tthis.animations.forEach((animation : Animation) => {\r\n\t\t\t\tlet t:number;\r\n\t\t\t\tconst ani = this.startTimes.get(animation)\r\n\t\t\t\tif (ani == null) return\r\n\t\t\t\tif (ani < startTime) {\r\n\t\t\t\t\tt = now - startTime - animation.delay - this.pauseTime;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = now - ani - animation.delay - this.pauseTime;\r\n\t\t\t\t}\r\n\t\t\t\tif (t > animation.duration) {\r\n\t\t\t\t\tthis.delAnimations.push(animation)\r\n\t\t\t\t\t// 不能在 foreach 里面 对 集合进行删除操作\r\n\t\t\t\t\t// this.animations.delete(animation);\r\n\t\t\t\t\tt = animation.duration;\r\n\t\t\t\t}\r\n\t\t\t\tif (t > 0) animation.run(t);\r\n\t\t\t})\r\n\t\t\t// 不能在 foreach 里面 对 集合进行删除操作\r\n\t\t\twhile (this.delAnimations.length > 0) {\r\n\t\t\t\tconst animation = this.delAnimations.pop();\r\n\t\t\t\tif (animation == null) return\r\n\t\t\t\tthis.animations.delete(animation);\r\n\t\t\t}\r\n\t\t\t// cancelAnimationFrame(this.tickHandler);\r\n\t\t\tif (this.state != 'Started') return\r\n\t\t\r\n\t\t\t this.tickHandler = raf(()=>{\r\n\t\t\t\tthis.tick!()\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tthis.tickHandlers.push(this.tickHandler)\r\n\t\t}\r\n\t\tif(this.tick != null) {\r\n\t\t\tthis.tick!()\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tpause() {\r\n\t\tif (!(this.state === 'Started')) return;\r\n\t\tthis.state = 'Paused';\r\n\t\tthis.pauseStart = Date.now();\r\n\t\tcancelRaf(this.tickHandler);\r\n\t\t// cancelRaf(this.tickHandler);\r\n\t}\r\n\tresume() {\r\n\t\tif (!(this.state === 'Paused')) return;\r\n\t\tthis.state = 'Started';\r\n\t\tthis.pauseTime += Date.now() - this.pauseStart;\r\n\t\tthis.tick!();\r\n\t}\r\n\treset() {\r\n\t\tthis.pause();\r\n\t\tthis.state = 'Initiated';\r\n\t\tthis.pauseTime = 0;\r\n\t\tthis.pauseStart = 0;\r\n\t\tthis.animations.clear()\r\n\t\tthis.delAnimations.clear()\r\n\t\tthis.startTimes.clear()\r\n\t\tthis.tickHandler = 0;\r\n\t}\r\n\tadd(animation : Animation, startTime ?: number | null) {\r\n\t\tif (startTime == null) startTime = Date.now();\r\n\t\tthis.animations.add(animation);\r\n\t\tthis.startTimes.set(animation, startTime);\r\n\t}\r\n}\r\n\r\nexport class Animation {\r\n\tstartValue : number\r\n\tendValue : number\r\n\tduration : number\r\n\ttimingFunction : (t : number) => number\r\n\tdelay : number\r\n\ttemplate : (t : number) => void\r\n\tconstructor(\r\n\t\tstartValue : number,\r\n\t\tendValue : number,\r\n\t\tduration : number,\r\n\t\tdelay : number,\r\n\t\ttimingFunction : (t : number) => number,\r\n\t\ttemplate : (v : number) => void) {\r\n\t\tthis.startValue = startValue;\r\n\t\tthis.endValue = endValue;\r\n\t\tthis.duration = duration;\r\n\t\tthis.timingFunction = timingFunction;\r\n\t\tthis.delay = delay;\r\n\t\tthis.template = template;\r\n\t}\r\n\r\n\trun(time : number) {\r\n\t\tlet range = this.endValue - this.startValue;\r\n\t\tlet progress = time / this.duration\r\n\t\tif(progress != 1) progress = this.timingFunction(progress)\r\n\t\tthis.template(this.startValue + range * progress)\r\n\t}\r\n}","// @ts-nocheck\nimport type { ComponentPublicInstance, Ref } from 'vue';\nimport { ease, linear } from './ease';\nimport { Timeline, Animation } from './';\nexport type UseTransitionOptions = {\n    duration?: number;\n    immediate?: boolean;\n    context?: ComponentPublicInstance;\n};\ntype UseTransitionReturnType = Ref<number>;\nexport function useTransition(source: any, options: UseTransitionOptions): UseTransitionReturnType {\n    const outputRef: Ref<number> = ref(0);\n    const immediate = options.immediate ?? false;\n    const duration = options.duration ?? 300;\n    const context = options.context; //as ComponentPublicInstance | null\n    let tl: Timeline | null = null;\n    let timer = -1;\n    const watchFunc = (v: number) => {\n        if (tl == null) {\n            tl = new Timeline();\n        }\n        tl!.start();\n        tl!.add(new Animation(outputRef.value, v, duration, 0, ease, nowValue => {\n            outputRef.value = nowValue;\n            clearTimeout(timer);\n            if (outputRef.value == v) {\n                timer = setTimeout(() => {\n                    tl?.pause();\n                    tl = null;\n                }, duration);\n            }\n        }), null);\n    };\n    if (context != null && typeof source == 'string') {\n        context.$watch(source as string, watchFunc, { immediate } as WatchOptions);\n    }\n    else if (typeof source == 'function') {\n        watch(source, watchFunc, { immediate });\n    }\n    else if (isRef(source) && source instanceof Ref<number>) {\n        watch(source as Ref<number>, watchFunc, { immediate });\n    }\n    const stop = () => {\n    };\n    return outputRef; //as UseTransitionReturnType\n}\n//# sourceMappingURL=useTransition.uts.map","// @ts-nocheck\nimport type { ComponentPublicInstance, Ref } from 'vue'\nimport { ease, linear } from './ease';\nimport { Timeline, Animation } from './';\nexport type UseTransitionOptions = {\n\tduration ?: number\n\timmediate ?: boolean\n\tcontext ?: ComponentPublicInstance\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntype UseTransitionReturnType = Ref<number>\nexport function useTransition(source : any, options : UseTransitionOptions) : UseTransitionReturnType {\n\tconst outputRef : Ref<number> = ref(0)\n\tconst immediate = options.immediate ?? false\n\tconst duration = options.duration ?? 300\n\tconst context = options.context //as ComponentPublicInstance | null\n\tlet tl:Timeline|null = null;\n\tlet timer = -1\n\tconst watchFunc = (v : number) => {\n\t\tif(tl == null){\n\t\t\ttl = new Timeline()\n\t\t}\n\t\ttl!.start();\n\t\ttl!.add(\n\t\t\tnew Animation(\n\t\t\t\toutputRef.value,\n\t\t\t\tv,\n\t\t\t\tduration,\n\t\t\t\t0,\n\t\t\t\tease,\n\t\t\t\tnowValue => {\n\t\t\t\t\toutputRef.value = nowValue\n\t\t\t\t\tclearTimeout(timer)\n\t\t\t\t\tif(outputRef.value == v){\n\t\t\t\t\t\ttimer = setTimeout(()=>{\n\t\t\t\t\t\t\ttl?.pause();\n\t\t\t\t\t\t\ttl = null\n\t\t\t\t\t\t}, duration)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t), \n\t\t\tnull\n\t\t);\n\t}\n\n\tif (context != null && typeof source == 'string') {\n\t\tcontext.$watch(source, watchFunc, { immediate } as WatchOptions)\n\t} else if(typeof source == 'function'){\n\t\twatch(source, watchFunc, { immediate })\n\t} \n\n\telse if(isRef(source) && source instanceof Ref<number>) {\n\t\twatch(source as Ref<number>, watchFunc, { immediate })\n\t}\n\n\n\n\n\n\n\t\n\tconst stop = ()=>{\n\t\t\n\t}\n\treturn outputRef //as UseTransitionReturnType\n}\n\n","import { SetClipboardDataOption as SetClipboardDataOption_1 } from \"../../../uni_modules/lime-clipboard/utssdk/interface\";\nimport _easycom_fui_icon from '@/uni_modules/firstui-unix/components/fui-icon/fui-icon.uvue';\nimport _easycom_l_progress from '@/uni_modules/lime-progress/components/l-progress/l-progress.uvue';\nimport _easycom_fui_button from '@/uni_modules/firstui-unix/components/fui-button/fui-button.uvue';\nimport _easycom_fui_radio from '@/uni_modules/firstui-unix/components/fui-radio/fui-radio.uvue';\nimport _easycom_fui_list_cell from '@/uni_modules/firstui-unix/components/fui-list-cell/fui-list-cell.uvue';\nimport _easycom_fui_label from '@/uni_modules/firstui-unix/components/fui-label/fui-label.uvue';\nimport _easycom_fui_radio_group from '@/uni_modules/firstui-unix/components/fui-radio-group/fui-radio-group.uvue';\nimport _easycom_fui_bottom_popup from '@/uni_modules/firstui-unix/components/fui-bottom-popup/fui-bottom-popup.uvue';\nimport { ref, onMounted } from 'vue';\nimport { setClipboardData, getClipboardData, SetClipboardDataOption, GetClipboardDataOption, GetClipboardDataSuccessCallbackOption } from '@/uni_modules/lime-clipboard';\ntype RadioItem = {\n    __$originalPosition?: UTSSourceMapPosition<\"RadioItem\", \"pages/mine/rechargeDataTraffic/rechargeDataTraffic.uvue\", 79, 7>;\n    deviceTitle: string;\n    iccid: string;\n    cardid: string;\n    cardState: string;\n    currentPackage: string;\n    useDate: string;\n    percent: number;\n    total: string;\n    checked?: boolean;\n};\nconst __sfc__ = defineComponent({\n    __name: 'rechargeDataTraffic',\n    setup(__props): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        const totalDevice = ref<number>(4);\n        const percent = ref<number>(50);\n        const isShow = ref<boolean>(false);\n        const currentDeviceInfo = ref<RadioItem>({\n            deviceTitle: '',\n            iccid: '',\n            cardid: '',\n            cardState: '',\n            currentPackage: '',\n            useDate: '',\n            percent: 0,\n            total: '',\n            checked: true,\n        } as RadioItem);\n        const radioItems = ref<RadioItem[]>([{\n                deviceTitle: '设备信息',\n                iccid: '1123456667777887',\n                cardid: '13000001111',\n                cardState: '在用',\n                currentPackage: '店长推荐【终身流量】',\n                useDate: '2025-07-07',\n                percent: 50,\n                total: '100',\n            } as RadioItem, {\n                deviceTitle: '设备信息1',\n                iccid: '1123456667777888',\n                cardid: '13000001111',\n                cardState: '停机',\n                currentPackage: '店长推荐【100G流量】',\n                useDate: '2025-07-08',\n                percent: 70,\n                total: '200',\n            } as RadioItem, {\n                deviceTitle: '设备信息2',\n                cardid: '13000001111',\n                iccid: '310203030443',\n                cardState: '注销',\n                currentPackage: '加油包',\n                useDate: '2025-07-09',\n                percent: 100,\n                total: '300',\n            } as RadioItem]);\n        const getValue = (e: string) => {\n            const selectedItem = radioItems.value.find((item): boolean => item.iccid == e);\n            if (selectedItem != null) {\n                console.log(selectedItem, \" at pages/mine/rechargeDataTraffic/rechargeDataTraffic.uvue:143\");\n                selectedItem.checked = true;\n                currentDeviceInfo.value = selectedItem;\n            }\n            uni.showToast({\n                title: '更换成功',\n                icon: 'none'\n            });\n        };\n        const currentInfo = () => {\n            radioItems.value.forEach(item => {\n                item.checked = false;\n            });\n            radioItems.value[0].checked = true;\n            currentDeviceInfo.value = radioItems.value[0];\n        };\n        const showPopup = () => {\n            isShow.value = true;\n        };\n        const closePopup = () => {\n            isShow.value = false;\n        };\n        const submit = () => {\n            uni.showToast({\n                title: '去充值',\n                icon: 'none'\n            });\n        };\n        const copyRight = () => {\n            setClipboardData({\n                data: currentDeviceInfo.value.iccid,\n                success: function (_res) {\n                    uni.showToast({\n                        title: '复制成功',\n                        icon: 'none'\n                    });\n                }\n            } as SetClipboardDataOption_1);\n        };\n        onMounted(() => {\n            currentInfo();\n        });\n        return (): any | null => {\n            const _component_fui_icon = resolveEasyComponent(\"fui-icon\", _easycom_fui_icon);\n            const _component_l_progress = resolveEasyComponent(\"l-progress\", _easycom_l_progress);\n            const _component_fui_button = resolveEasyComponent(\"fui-button\", _easycom_fui_button);\n            const _component_fui_radio = resolveEasyComponent(\"fui-radio\", _easycom_fui_radio);\n            const _component_fui_list_cell = resolveEasyComponent(\"fui-list-cell\", _easycom_fui_list_cell);\n            const _component_fui_label = resolveEasyComponent(\"fui-label\", _easycom_fui_label);\n            const _component_fui_radio_group = resolveEasyComponent(\"fui-radio-group\", _easycom_fui_radio_group);\n            const _component_fui_bottom_popup = resolveEasyComponent(\"fui-bottom-popup\", _easycom_fui_bottom_popup);\n            return createElementVNode(\"view\", utsMapOf({ class: \"container\" }), [\n                createElementVNode(\"view\", utsMapOf({ class: \"device-total\" }), [\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-total-title\" }), [\n                        createElementVNode(\"text\", null, \"充值设备\"),\n                        createElementVNode(\"text\", utsMapOf({ class: \"device-total-title-color\" }), \"（共\" + toDisplayString(totalDevice.value) + \"台设备）\", 1 /* TEXT */)\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-total-title\" }), [\n                        createElementVNode(\"text\", utsMapOf({ onClick: showPopup }), \"更换设备\"),\n                        createVNode(_component_fui_icon, utsMapOf({\n                            name: \"arrowright\",\n                            size: 50\n                        }))\n                    ])\n                ]),\n                createElementVNode(\"view\", utsMapOf({ class: \"device-info-box\" }), [\n                    createElementVNode(\"text\", utsMapOf({ class: \"device-title\" }), \"设备信息\"),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-info-item\" }), [\n                        createElementVNode(\"text\", null, \"ICCID\"),\n                        createElementVNode(\"view\", utsMapOf({ class: \"iccid-info\" }), [\n                            createElementVNode(\"text\", null, toDisplayString(currentDeviceInfo.value.iccid), 1 /* TEXT */),\n                            createVNode(_component_fui_icon, utsMapOf({\n                                name: \"info\",\n                                size: 40,\n                                onOnclick: copyRight\n                            }))\n                        ])\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-info-item\" }), [\n                        createElementVNode(\"text\", null, \"卡号\"),\n                        createElementVNode(\"text\", null, toDisplayString(currentDeviceInfo.value.cardid), 1 /* TEXT */)\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-info-item\" }), [\n                        createElementVNode(\"text\", null, \"卡片状态\"),\n                        createElementVNode(\"text\", null, toDisplayString(currentDeviceInfo.value.cardState), 1 /* TEXT */)\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-info-item\" }), [\n                        createElementVNode(\"text\", null, \"当前套餐\"),\n                        createElementVNode(\"text\", null, toDisplayString(currentDeviceInfo.value.currentPackage), 1 /* TEXT */)\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-info-item add-style\" }), [\n                        createElementVNode(\"text\", null, \"生效日期\"),\n                        createElementVNode(\"text\", null, toDisplayString(currentDeviceInfo.value.useDate), 1 /* TEXT */)\n                    ]),\n                    createElementVNode(\"text\", null, \"流量\"),\n                    createElementVNode(\"view\", utsMapOf({ class: \"progess\" }), [\n                        createVNode(_component_l_progress, utsMapOf({\n                            percent: currentDeviceInfo.value.percent,\n                            \"show-info\": true\n                        }), null, 8 /* PROPS */, [\"percent\"])\n                    ]),\n                    createElementVNode(\"view\", utsMapOf({ class: \"device-info-item\" }), [\n                        createElementVNode(\"text\", null, \"已用50G(50%)\"),\n                        createElementVNode(\"text\", null, \"可用50G(共100G)\")\n                    ])\n                ]),\n                createElementVNode(\"view\", utsMapOf({ class: \"btn-box\" }), [\n                    createVNode(_component_fui_button, utsMapOf({\n                        color: \"#fff\",\n                        text: \"去充值\",\n                        background: \"#1296db\",\n                        height: \"80rpx\",\n                        onOnclick: submit\n                    }))\n                ]),\n                createVNode(_component_fui_bottom_popup, utsMapOf({\n                    visible: isShow.value,\n                    onClose: closePopup\n                }), utsMapOf({\n                    default: withSlotCtx((): any[] => [\n                        createElementVNode(\"view\", utsMapOf({ class: \"fui-scroll__wrap\" }), [\n                            createElementVNode(\"view\", utsMapOf({ class: \"popup-title\" }), [\n                                createElementVNode(\"text\", null, \"设备列表\"),\n                                createElementVNode(\"view\", utsMapOf({ onClick: closePopup }), [\n                                    createVNode(_component_fui_icon, utsMapOf({\n                                        name: \"close\",\n                                        size: 40\n                                    }))\n                                ])\n                            ]),\n                            createVNode(_component_fui_radio_group, utsMapOf({ onChange: getValue }), utsMapOf({\n                                default: withSlotCtx((): any[] => [\n                                    createElementVNode(Fragment, null, RenderHelpers.renderList(radioItems.value, (item, index, __index, _cached): any => {\n                                        return createVNode(_component_fui_label, utsMapOf({ key: index }), utsMapOf({\n                                            default: withSlotCtx((): any[] => [\n                                                createVNode(_component_fui_list_cell, null, utsMapOf({\n                                                    default: withSlotCtx((): any[] => [\n                                                        createElementVNode(\"view\", utsMapOf({ class: \"fui-list__cell\" }), [\n                                                            createElementVNode(\"text\", null, toDisplayString(item.deviceTitle), 1 /* TEXT */),\n                                                            createVNode(_component_fui_radio, utsMapOf({\n                                                                checked: item.checked,\n                                                                value: item.iccid\n                                                            }), null, 8 /* PROPS */, [\"checked\", \"value\"])\n                                                        ])\n                                                    ]),\n                                                    _: 2 /* DYNAMIC */\n                                                }), 1024 /* DYNAMIC_SLOTS */)\n                                            ]),\n                                            _: 2 /* DYNAMIC */\n                                        }), 1024 /* DYNAMIC_SLOTS */);\n                                    }), 128 /* KEYED_FRAGMENT */)\n                                ]),\n                                _: 1 /* STABLE */\n                            }))\n                        ])\n                    ]),\n                    _: 1 /* STABLE */\n                }), 8 /* PROPS */, [\"visible\"])\n            ]);\n        };\n    }\n});\nexport default __sfc__;\nconst GenPagesMineRechargeDataTrafficRechargeDataTrafficStyles = [utsMapOf([[\"container\", padStyleMapOf(utsMapOf([[\"height\", \"100%\"], [\"backgroundColor\", \"#f5f5f5\"], [\"paddingTop\", \"30rpx\"], [\"paddingRight\", \"20rpx\"], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", \"20rpx\"]]))], [\"device-total\", utsMapOf([[\".container \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"space-between\"]])]])], [\"device-total-title\", utsMapOf([[\".container .device-total \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"center\"], [\"alignItems\", \"center\"]])]])], [\"device-total-title-color\", utsMapOf([[\".container .device-total .device-total-title \", utsMapOf([[\"color\", \"#999999\"]])]])], [\"device-info-box\", utsMapOf([[\".container \", utsMapOf([[\"backgroundColor\", \"#ffffff\"], [\"borderTopLeftRadius\", \"20rpx\"], [\"borderTopRightRadius\", \"20rpx\"], [\"borderBottomRightRadius\", \"20rpx\"], [\"borderBottomLeftRadius\", \"20rpx\"], [\"paddingTop\", \"30rpx\"], [\"paddingRight\", \"40rpx\"], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", \"40rpx\"], [\"marginTop\", \"20rpx\"], [\"marginRight\", 0], [\"marginBottom\", \"20rpx\"], [\"marginLeft\", 0], [\"display\", \"flex\"], [\"flexDirection\", \"column\"]])]])], [\"device-title\", utsMapOf([[\".container .device-info-box \", utsMapOf([[\"fontSize\", \"35rpx\"]])]])], [\"device-info-item\", utsMapOf([[\".container .device-info-box \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"space-between\"], [\"marginTop\", \"20rpx\"]])]])], [\"iccid-info\", utsMapOf([[\".container .device-info-box .device-info-item \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"space-between\"], [\"alignItems\", \"center\"]])]])], [\"add-style\", utsMapOf([[\".container .device-info-box \", utsMapOf([[\"paddingBottom\", \"60rpx\"], [\"borderBottomWidth\", \"1rpx\"], [\"borderBottomStyle\", \"solid\"], [\"borderBottomColor\", \"#999999\"], [\"marginBottom\", \"60rpx\"]])]])], [\"progess\", utsMapOf([[\".container .device-info-box \", utsMapOf([[\"marginTop\", \"10rpx\"], [\"marginRight\", 0], [\"marginBottom\", \"10rpx\"], [\"marginLeft\", 0]])]])], [\"btn-box\", utsMapOf([[\".container \", utsMapOf([[\"marginTop\", \"60rpx\"]])]])], [\"popup-title\", utsMapOf([[\".container \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"space-between\"], [\"paddingTop\", 0], [\"paddingRight\", \"40rpx\"], [\"paddingBottom\", 0], [\"paddingLeft\", \"40rpx\"]])]])], [\"fui-scroll__wrap\", utsMapOf([[\".container \", utsMapOf([[\"width\", \"100%\"], [\"paddingTop\", \"30rpx\"], [\"paddingRight\", 0], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", 0], [\"position\", \"relative\"]])]])], [\"fui-sub__title\", utsMapOf([[\".container \", utsMapOf([[\"textAlign\", \"center\"], [\"fontSize\", \"24rpx\"], [\"color\", \"#7F7F7F\"], [\"transform\", \"scale(0.9)\"]])]])], [\"fui-scroll__view\", utsMapOf([[\".container \", utsMapOf([[\"width\", \"100%\"], [\"height\", \"50%\"]])]])], [\"fui-list__cell\", utsMapOf([[\".container \", utsMapOf([[\"flex\", 1], [\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"]])]])]])];\n//# sourceMappingURL=rechargeDataTraffic.uvue.map","<template>\r\n\t<view class=\"container\">\r\n\t\t<view class=\"device-total\">\r\n\t\t\t<view class=\"device-total-title\">\r\n\t\t\t\t<text>充值设备</text>\r\n\t\t\t\t<text class=\"device-total-title-color\">（共{{totalDevice}}台设备）</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"device-total-title\">\r\n\t\t\t\t<text @click=\"showPopup\">更换设备</text>\r\n\t\t\t\t<fui-icon name=\"arrowright\" :size=\"50\"></fui-icon>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"device-info-box\">\r\n\t\t\t<text class=\"device-title\">设备信息</text>\r\n\t\t\t<view class=\"device-info-item\">\r\n\t\t\t\t<text>ICCID</text>\r\n\t\t\t\t<view class=\"iccid-info\">\r\n\t\t\t\t\t<text>{{currentDeviceInfo.iccid}}</text>\r\n\t\t\t\t\t<fui-icon name=\"info\" :size=\"40\" @onclick=\"copyRight\"></fui-icon>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"device-info-item\">\r\n\t\t\t\t<text>卡号</text>\r\n\t\t\t\t<text>{{currentDeviceInfo.cardid}}</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"device-info-item\">\r\n\t\t\t\t<text>卡片状态</text>\r\n\t\t\t\t<text>{{currentDeviceInfo.cardState}}</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"device-info-item\">\r\n\t\t\t\t<text>当前套餐</text>\r\n\t\t\t\t<text>{{currentDeviceInfo.currentPackage}}</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"device-info-item add-style\">\r\n\t\t\t\t<text>生效日期</text>\r\n\t\t\t\t<text>{{currentDeviceInfo.useDate}}</text>\r\n\t\t\t</view>\r\n\t\t\t<text>流量</text>\r\n\t\t\t<view class=\"progess\">\r\n\t\t\t\t<l-progress :percent=\"currentDeviceInfo.percent\" :show-info=\"true\"></l-progress>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"device-info-item\">\r\n\t\t\t\t<text>已用50G(50%)</text>\r\n\t\t\t\t<text>可用50G(共100G)</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"btn-box\">\r\n\t\t\t<fui-button color=\"#fff\" text=\"去充值\" background=\"#1296db\" height=\"80rpx\" @onclick=\"submit\"></fui-button>\r\n\t\t</view>\r\n\r\n\t\t<fui-bottom-popup :visible=\"isShow\" @close=\"closePopup\">\r\n\t\t\t<view class=\"fui-scroll__wrap\">\r\n\t\t\t\t<view class=\"popup-title\">\r\n\t\t\t\t\t<text>设备列表</text>\r\n\t\t\t\t\t<view @click=\"closePopup\">\r\n\t\t\t\t\t\t<fui-icon name=\"close\" :size=\"40\"></fui-icon>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<fui-radio-group @change=\"getValue\">\r\n\t\t\t\t\t<fui-label v-for=\"(item,index) in radioItems\" :key=\"index\">\r\n\t\t\t\t\t\t<fui-list-cell>\r\n\t\t\t\t\t\t\t<view class=\"fui-list__cell\">\r\n\t\t\t\t\t\t\t\t<text>{{item.deviceTitle}}</text>\r\n\t\t\t\t\t\t\t\t<fui-radio :checked=\"item.checked\" :value=\"item.iccid\">\r\n\t\t\t\t\t\t\t\t</fui-radio>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</fui-list-cell>\r\n\t\t\t\t\t</fui-label>\r\n\t\t\t\t</fui-radio-group>\r\n\t\t\t</view>\r\n\t\t</fui-bottom-popup>\r\n\t</view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\n\timport { ref, onMounted } from 'vue'\r\n\timport { setClipboardData, getClipboardData, SetClipboardDataOption, GetClipboardDataOption, GetClipboardDataSuccessCallbackOption } from '@/uni_modules/lime-clipboard'\r\n\r\n\ttype RadioItem = {\r\n\t\tdeviceTitle : string;\r\n\t\ticcid : string;\r\n\t\tcardid : string;\r\n\t\tcardState : string;\r\n\t\tcurrentPackage : string;\r\n\t\tuseDate : string;\r\n\t\tpercent : number;\r\n\t\ttotal : string;\r\n\t\tchecked ?: boolean;\r\n\t}\r\n\r\n\tconst totalDevice = ref<number>(4)\r\n\tconst percent = ref<number>(50)\r\n\tconst isShow = ref<boolean>(false)\r\n\t\t\r\n\tconst currentDeviceInfo = ref<RadioItem>({\r\n\t\tdeviceTitle: '',\r\n\t\ticcid: '',\r\n\t\tcardid: '',\r\n\t\tcardState: '',\r\n\t\tcurrentPackage: '',\r\n\t\tuseDate: '',\r\n\t\tpercent: 0,\r\n\t\ttotal: '',\r\n\t\tchecked: true,\r\n\t})\r\n\r\n\tconst radioItems = ref<RadioItem[]>([{\r\n\t\tdeviceTitle: '设备信息',\r\n\t\ticcid: '1123456667777887',\r\n\t\tcardid: '13000001111',\r\n\t\tcardState: '在用',\r\n\t\tcurrentPackage: '店长推荐【终身流量】',\r\n\t\tuseDate: '2025-07-07',\r\n\t\tpercent: 50,\r\n\t\ttotal: '100',\r\n\t},\r\n\t{\r\n\t\tdeviceTitle: '设备信息1',\r\n\t\ticcid: '1123456667777888',\r\n\t\tcardid: '13000001111',\r\n\t\tcardState: '停机',\r\n\t\tcurrentPackage: '店长推荐【100G流量】',\r\n\t\tuseDate: '2025-07-08',\r\n\t\tpercent: 70,\r\n\t\ttotal: '200',\r\n\t},\r\n\t{\r\n\t\tdeviceTitle: '设备信息2',\r\n\t\tcardid: '13000001111',\r\n\t\ticcid: '310203030443',\r\n\t\tcardState: '注销',\r\n\t\tcurrentPackage: '加油包',\r\n\t\tuseDate: '2025-07-09',\r\n\t\tpercent: 100,\r\n\t\ttotal: '300',\r\n\t}])\r\n\r\n\r\n\r\n\tconst getValue = (e : string) => {\r\n\t\tconst selectedItem = radioItems.value.find(item => item.iccid == e)\r\n\t\tif (selectedItem != null) {\r\n\t\t\tconsole.log(selectedItem)\r\n\t\t\tselectedItem.checked = true\r\n\t\t\tcurrentDeviceInfo.value = selectedItem\r\n\t\t}\r\n\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '更换成功',\r\n\t\t\ticon: 'none'\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tconst currentInfo = () => {\r\n\t\tradioItems.value.forEach(item => {\r\n\t\t\titem.checked = false\r\n\t\t})\r\n\t\tradioItems.value[0].checked = true\r\n\t\tcurrentDeviceInfo.value = radioItems.value[0]\r\n\t}\r\n\r\n\tconst showPopup = () => {\r\n\t\tisShow.value = true\r\n\t}\r\n\r\n\tconst closePopup = () => {\r\n\t\tisShow.value = false\r\n\t}\r\n\r\n\tconst submit = () => {\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '去充值',\r\n\t\t\ticon: 'none'\r\n\t\t})\r\n\t}\r\n\r\n\tconst copyRight = () => {\r\n\t\tsetClipboardData({\r\n\t\t\tdata: currentDeviceInfo.value.iccid,\r\n\t\t\tsuccess: function () {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '复制成功',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonMounted(() => {\r\n\t\tcurrentInfo()\r\n\t})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.container {\r\n\t\theight: 100%;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\tpadding: 30rpx 20rpx;\r\n\r\n\t\t.device-total {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\tjustify-content: space-between;\r\n\r\n\t\t\t.device-total-title {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t.device-total-title-color {\r\n\t\t\t\t\tcolor: #999\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.device-info-box {\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tborder-radius: 20rpx;\r\n\t\t\tpadding: 30rpx 40rpx;\r\n\t\t\tmargin: 20rpx 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\t.device-title {\r\n\t\t\t\tfont-size: 35rpx;\r\n\t\t\t}\r\n\r\n\t\t\t.device-info-item {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\tmargin-top: 20rpx;\r\n\r\n\t\t\t\t.iccid-info {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.add-style {\r\n\t\t\t\tpadding-bottom: 60rpx;\r\n\t\t\t\tborder-bottom: 1rpx solid #999;\r\n\t\t\t\tmargin-bottom: 60rpx;\r\n\t\t\t}\r\n\r\n\t\t\t.progess {\r\n\t\t\t\tmargin: 10rpx 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.btn-box {\r\n\t\t\tmargin-top: 60rpx;\r\n\t\t}\r\n\r\n\t\t.popup-title {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tpadding: 0 40rpx;\r\n\t\t}\r\n\r\n\t\t.fui-scroll__wrap {\r\n\t\t\twidth: 100%;\r\n\t\t\tpadding: 30rpx 0;\r\n\t\t\tposition: relative;\r\n\t\t}\r\n\r\n\t\t.fui-sub__title {\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #7F7F7F;\r\n\t\t\ttransform: scale(.9);\r\n\t\t}\r\n\r\n\t\t.fui-scroll__view {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 50%;\r\n\t\t}\r\n\r\n\t\t.fui-list__cell {\r\n\t\t\tflex: 1;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t}\r\n</style>","// 完整类型定义\nexport interface LoadingProps {\n    color?: string;\n    type: 'circular' | 'spinner' | 'failed';\n    size: string;\n    text?: string;\n    textColor?: string;\n    textSize?: string;\n    mode: 'raf' | 'animate';\n    vertical: boolean;\n    animated: boolean;\n}\n// defineOptions({\n// \tname: 'l-loading'\n// })\n// const props = defineProps({\n// \tcolor: {\n// \t\ttype: String,\n//\n// \t\tdefault: '#1677ff' // '#c9c9c9'\n//\n// \t},\n// \ttype: {\n// \t\ttype: String,\n// \t\tdefault: 'circular'\n// \t},\n// \tsize: {\n// \t\ttype: String,\n//\n// \t\tdefault: '40rpx',\n//\n// \t},\n// \ttext: {\n// \t\ttype: String,\n// \t\tdefault: ''\n// \t},\n// \ttextColor: {\n// \t\ttype: String,\n// \t\tdefault: ''\n// \t},\n// \ttextSize: {\n// \t\ttype: String,\n// \t\tdefault: ''\n// \t},\n// \tvertical: {\n// \t\ttype: Boolean,\n// \t\tdefault: false\n// \t},\n// \tanimated: {\n// \t\ttype: Boolean,\n// \t\tdefault: true\n// \t}\n// })\n//# sourceMappingURL=type.uts.map","// 完整类型定义\nexport interface LoadingProps {\n  color?: string;\n  type: 'circular' | 'spinner' | 'failed';\n\n\n\n\n  size: string;\n\n  text?: string;\n  textColor?: string;\n  textSize?: string;\n  mode: 'raf' | 'animate';\n  vertical: boolean;\n  animated: boolean;\n}\n\n// defineOptions({\n\t// \tname: 'l-loading'\n\t// })\n\t// const props = defineProps({\n\t// \tcolor: {\n\t// \t\ttype: String,\n\t//\n\t// \t\tdefault: '#1677ff' // '#c9c9c9'\n\t//\n\t// \t},\n\t// \ttype: {\n\t// \t\ttype: String,\n\t// \t\tdefault: 'circular'\n\t// \t},\n\t// \tsize: {\n\t// \t\ttype: String,\n\t//\n\t// \t\tdefault: '40rpx',\n\t//\n\t// \t},\n\t// \ttext: {\n\t// \t\ttype: String,\n\t// \t\tdefault: ''\n\t// \t},\n\t// \ttextColor: {\n\t// \t\ttype: String,\n\t// \t\tdefault: ''\n\t// \t},\n\t// \ttextSize: {\n\t// \t\ttype: String,\n\t// \t\tdefault: ''\n\t// \t},\n\t// \tvertical: {\n\t// \t\ttype: Boolean,\n\t// \t\tdefault: false\n\t// \t},\n\t// \tanimated: {\n\t// \t\ttype: Boolean,\n\t// \t\tdefault: true\n\t// \t}\n\t// })","export type RGB = {\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n}\r\nexport type RGBA = {\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n\ta : number;\r\n}\r\nexport type RGBAString = {\r\n\tr : string;\r\n\tg : string;\r\n\tb : string;\r\n\ta : number;\r\n}\r\nexport type HSL = {\r\n\th : number;\r\n\ts : number;\r\n\tl : number;\r\n}\r\n\r\nexport type HSLA = {\r\n\th : number;\r\n\ts : number;\r\n\tl : number;\r\n\ta : number;\r\n}\r\nexport type HSV = {\r\n\th : number;\r\n\ts : number;\r\n\tv : number;\r\n}\r\n\r\nexport type HSVA = {\r\n\th : number;\r\n\ts : number;\r\n\tv : number;\r\n\ta : number;\r\n}\r\n\r\n// 增加部分\r\nexport type HSB = {\r\n\th : number;\r\n\ts : number;\r\n\tb : number;\r\n}\r\nexport type HSBA = {\r\n\th : number;\r\n\ts : number;\r\n\tb : number;\r\n\ta : number;\r\n}\r\n\r\nexport type LColorInfo = {\r\n\tok ?: boolean;\r\n\tformat ?: LColorFormats;\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n\ta : number;\r\n}\r\n\r\nexport type LColorFormats =\r\n\t| 'rgb'\r\n\t| 'prgb'\r\n\t| 'hex'\r\n\t| 'hex3'\r\n\t| 'hex4'\r\n\t| 'hex6'\r\n\t| 'hex8'\r\n\t| 'name'\r\n\t| 'hsl'\r\n\t| 'hsb'\r\n\t| 'hsv';\r\n\r\nexport type LColorOptions = {\r\n\tformat ?: LColorFormats;\r\n\tgradientType ?: string;\r\n}\r\nexport type LColorInput = any //string | number | RGB | RGBA | HSL | HSLA | HSV | HSVA | LimeColor;\r\n\r\nexport type LGenerateOptions = {\r\n\ttheme ?: 'dark' | 'default';\r\n\tbackgroundColor ?: string;\r\n}\r\n","import { RGB,HSL,HSV } from '../utssdk/interface.uts';\r\nimport { bound01, pad2 } from './util';\r\n\r\n\r\n/**\r\n * Handle bounds / percentage checking to conform to CSS color spec\r\n * 处理边界/百分比检查以符合 CSS 颜色规范\r\n * <http://www.w3.org/TR/css3-color/>\r\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n * *Returns:* { r, g, b } in [0, 255]\r\n */\r\nfunction rgbToRgb(r: string, g: string, b: string):RGB;\r\nfunction rgbToRgb(r: number, g: string, b: string):RGB;\r\nfunction rgbToRgb(r: number, g: number, b: string):RGB;\r\nfunction rgbToRgb(r: number, g: number, b: number):RGB;\r\nfunction rgbToRgb(r: any,    g: any,    b: any) : RGB {\r\n\treturn {\r\n\t\tr: bound01(r, 255) * 255,\r\n\t\tg: bound01(g, 255) * 255,\r\n\t\tb: bound01(b, 255) * 255,\r\n\t} as RGB;\r\n}\r\nexport {\r\n\trgbToRgb\r\n}\r\n/**\r\n * Converts an RGB color value to HSL.\r\n * 将 RGB 颜色值转换为 HSL。\r\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n * *Returns:* { h, s, l } in [0,1]\r\n */\r\nfunction rgbToHsl(r: string, g: string, b: string):HSL;\r\nfunction rgbToHsl(r: number, g: string, b: string):HSL;\r\nfunction rgbToHsl(r: number, g: number, b: string):HSL;\r\nfunction rgbToHsl(r: number, g: number, b: number):HSL;\r\nfunction rgbToHsl(r : any, g : any, b : any) : HSL {\r\n\tr = bound01(r, 255);\r\n\tg = bound01(g, 255);\r\n\tb = bound01(b, 255);\r\n\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tlet s:number// = 0;\r\n\tconst l = (max + min) / 2;\r\n\r\n\tif (max == min) {\r\n\t\ts = 0;\r\n\t\th = 0; // achromatic\r\n\t} else {\r\n\t\tconst d = max - min;\r\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t\tswitch (max) {\r\n\t\t\tcase r:\r\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase g:\r\n\t\t\t\th = (b - r) / d + 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase b:\r\n\t\t\t\th = (r - g) / d + 4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t__f__('log','at uni_modules/lime-color/common/conversion.uts:64','h')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn { h, s, l } as HSL;\r\n}\r\n\r\nexport {\r\n\trgbToHsl\r\n}\r\n\r\nexport function hue2rgb(p : number, q : number, t : number) : number {\r\n\tlet _t = t\r\n\tif (_t < 0) {\r\n\t\t_t += 1;\r\n\t}\r\n\r\n\tif (_t > 1) {\r\n\t\t_t -= 1;\r\n\t}\r\n\r\n\tif (_t < 1 / 6) {\r\n\t\treturn p + (q - p) * (6 * _t);\r\n\t}\r\n\r\n\tif (_t < 1 / 2) {\r\n\t\treturn q;\r\n\t}\r\n\r\n\tif (_t < 2 / 3) {\r\n\t\treturn p + (q - p) * (2 / 3 - _t) * 6;\r\n\t}\r\n\r\n\treturn p;\r\n}\r\n\r\n/**\r\n * Converts an HSL color value to RGB.\r\n * 将 HSL 颜色值转换为 RGB。\r\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n * *Returns:* { r, g, b } in the set [0, 255]\r\n */ \r\nfunction hslToRgb(h : string,s : string,l : string) : RGB \r\nfunction hslToRgb(h : number,s : string,l : string) : RGB \r\nfunction hslToRgb(h : number,s : number,l : string) : RGB \r\nfunction hslToRgb(h : number,s : number,l : number) : RGB \r\nfunction hslToRgb(h : any,s : any,l : any) : RGB {\r\n\tlet r : number;\r\n\tlet g : number;\r\n\tlet b : number;\r\n\th = bound01(h, 360);\r\n\ts = bound01(s, 100);\r\n\tl = bound01(l, 100);\r\n\t\r\n\tif (s == 0) {\r\n\t\t// achromatic\r\n\t\tg = l;\r\n\t\tb = l;\r\n\t\tr = l;\r\n\t} else {\r\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tconst p = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1 / 3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1 / 3);\r\n\t}\r\n\r\n\treturn { r: r * 255, g: g * 255, b: b * 255 } as RGB;\r\n}\r\nexport {\r\n\thslToRgb\r\n}\r\n/**\r\n * Converts an RGB color value to HSV\r\n * 将RGB颜色值转换为HSV颜色值\r\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n * *Returns:* { h, s, v } in [0,1]\r\n */\r\nexport function rgbToHsv(r : number, g : number, b : number) : HSV {\r\n\tr = bound01(r, 255);\r\n\tg = bound01(g, 255);\r\n\tb = bound01(b, 255);\r\n\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tconst v = max;\r\n\tconst d = max - min;\r\n\tconst s = max == 0 ? 0 : d / max;\r\n\r\n\tif (max == min) {\r\n\t\th = 0; // achromatic\r\n\t} else {\r\n\t\tswitch (max) {\r\n\t\t\tcase r:\r\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase g:\r\n\t\t\t\th = (b - r) / d + 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase b:\r\n\t\t\t\th = (r - g) / d + 4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t__f__('log','at uni_modules/lime-color/common/conversion.uts:171','1')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn { h, s, v } as HSV;\r\n}\r\n\r\n/**\r\n * Converts an HSV color value to RGB.\r\n * 将HSV颜色值转换为RGB。\r\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n * *Returns:* { r, g, b } in the set [0, 255]\r\n */\r\nfunction hsvToRgb( h : string, s : string, v : string) : RGB \r\nfunction hsvToRgb( h : number, s : string, v : string) : RGB \r\nfunction hsvToRgb( h : number, s : number, v : string) : RGB \r\nfunction hsvToRgb( h : number, s : number, v : number) : RGB \r\nfunction hsvToRgb( h : any, s : any, v : any) : RGB {\r\n\th = bound01(h, 360) * 6;\r\n\ts = bound01(s, 100);\r\n\tv = bound01(v, 100);\r\n\r\n\tconst i = Math.floor(h);\r\n\tconst f = h - i;\r\n\tconst p = v * (1 - s);\r\n\tconst q = v * (1 - f * s);\r\n\tconst t = v * (1 - (1 - f) * s);\r\n\tconst mod = i % 6;\r\n\tconst r = [v, q, p, p, t, v][mod];\r\n\tconst g = [t, v, v, q, p, p][mod];\r\n\tconst b = [p, p, t, v, v, q][mod];\r\n\r\n\treturn { r: r * 255, g: g * 255, b: b * 255 } as RGB;\r\n}\r\nexport {\r\n\thsvToRgb\r\n}\r\n/**\r\n * Converts an RGB color to hex\r\n * 将RGB颜色转换为十六进制。\r\n * Assumes r, g, and b are contained in the set [0, 255]\r\n * Returns a 3 or 6 character hex\r\n */\r\nexport function rgbToHex(r : number, g : number, b : number, allow3Char : boolean = false) : string {\r\n\tconst hex = [\r\n\t\tpad2(Math.round(r).toString(16)),\r\n\t\tpad2(Math.round(g).toString(16)),\r\n\t\tpad2(Math.round(b).toString(16)),\r\n\t];\r\n\r\n\t// Return a 3 character hex if possible\r\n\tif (\r\n\t\tallow3Char &&\r\n\t\thex[0].startsWith(hex[0].charAt(1)) &&\r\n\t\thex[1].startsWith(hex[1].charAt(1)) &&\r\n\t\thex[2].startsWith(hex[2].charAt(1))\r\n\t) {\r\n\t\treturn hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n\t}\r\n\r\n\treturn hex.join('');\r\n}\r\n\r\n/**\r\n * Converts an RGBA color plus alpha transparency to hex\r\n * 将带有透明度的RGBA颜色转换为十六进制。\r\n * Assumes r, g, b are contained in the set [0, 255] and\r\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\r\n */\r\n// eslint-disable-next-line max-params\r\nexport function rgbaToHex(r : number, g : number, b : number, a : number, allow4Char : boolean = false) : string {\r\n\tconst hex = [\r\n\t\tpad2(Math.round(r).toString(16)),\r\n\t\tpad2(Math.round(g).toString(16)),\r\n\t\tpad2(Math.round(b).toString(16)),\r\n\t\tpad2(convertDecimalToHex(a)),\r\n\t];\r\n\r\n\t// Return a 4 character hex if possible\r\n\tif (\r\n\t\tallow4Char &&\r\n\t\thex[0].startsWith(hex[0].charAt(1)) &&\r\n\t\thex[1].startsWith(hex[1].charAt(1)) &&\r\n\t\thex[2].startsWith(hex[2].charAt(1)) &&\r\n\t\thex[3].startsWith(hex[3].charAt(1))\r\n\t) {\r\n\t\treturn hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\r\n\t}\r\n\r\n\treturn hex.join('');\r\n}\r\n\r\n/**\r\n * Converts an RGBA color to an ARGB Hex8 string\r\n * 将RGBA颜色转换为ARGB十六进制字符串。\r\n * Rarely used, but required for \"toFilter()\"\r\n */\r\nexport function rgbaToArgbHex(r : number, g : number, b : number, a : number) : string {\r\n\tconst hex = [\r\n\t\tpad2(convertDecimalToHex(a)),\r\n\t\tpad2(Math.round(r).toString(16)),\r\n\t\tpad2(Math.round(g).toString(16)),\r\n\t\tpad2(Math.round(b).toString(16)),\r\n\t];\r\n\r\n\treturn hex.join('');\r\n}\r\n\r\n/** Converts a decimal to a hex value */\r\n/** 将十进制转换为十六进制值。 */\r\nfunction convertDecimalToHex(d : number) : string\r\nfunction convertDecimalToHex(d : string) : string\r\nfunction convertDecimalToHex(d : any) : string {\r\n\treturn Math.round(parseFloat(`${d}`) * 255).toString(16);\r\n}\r\nexport {convertDecimalToHex}\r\n/** Converts a hex value to a decimal */\r\nexport function convertHexToDecimal(h : string) : number {\r\n\treturn parseIntFromHex(h) / 255;\r\n}\r\n\r\n/** Parse a base-16 hex value into a base-10 integer */\r\nexport function parseIntFromHex(val : string) : number {\r\n\treturn parseInt(val, 16);\r\n}\r\n\r\nexport function numberInputToObject(color : number) : RGB {\r\n\treturn {\r\n\t\tr: color >> 16,\r\n\t\tg: (color & 0xff00) >> 8,\r\n\t\tb: color & 0xff,\r\n\t} as RGB;\r\n}","// @ts-nocheck\r\n// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\r\n/**\r\n * @hidden\r\n */\r\nexport const names: Map<string, string> = new Map<string, string>([\n  ['aliceblue', '#f0f8ff'],\n  ['antiquewhite', '#faebd7'],\n  ['aqua', '#00ffff'],\n  ['aquamarine', '#7fffd4'],\n  ['azure', '#f0ffff'],\n  ['beige', '#f5f5dc'],\n  ['bisque', '#ffe4c4'],\n  ['black', '#000000'],\n  ['blanchedalmond', '#ffebcd'],\n  ['blue', '#0000ff'],\n  ['blueviolet', '#8a2be2'],\n  ['brown', '#a52a2a'],\n  ['burlywood', '#deb887'],\n  ['cadetblue', '#5f9ea0'],\n  ['chartreuse', '#7fff00'],\n  ['chocolate', '#d2691e'],\n  ['coral', '#ff7f50'],\n  ['cornflowerblue', '#6495ed'],\n  ['cornsilk', '#fff8dc'],\n  ['crimson', '#dc143c'],\n  ['cyan', '#00ffff'],\n  ['darkblue', '#00008b'],\n  ['darkcyan', '#008b8b'],\n  ['darkgoldenrod', '#b8860b'],\n  ['darkgray', '#a9a9a9'],\n  ['darkgreen', '#006400'],\n  ['darkgrey', '#a9a9a9'],\n  ['darkkhaki', '#bdb76b'],\n  ['darkmagenta', '#8b008b'],\n  ['darkolivegreen', '#556b2f'],\n  ['darkorange', '#ff8c00'],\n  ['darkorchid', '#9932cc'],\n  ['darkred', '#8b0000'],\n  ['darksalmon', '#e9967a'],\n  ['darkseagreen', '#8fbc8f'],\n  ['darkslateblue', '#483d8b'],\n  ['darkslategray', '#2f4f4f'],\n  ['darkslategrey', '#2f4f4f'],\n  ['darkturquoise', '#00ced1'],\n  ['darkviolet', '#9400d3'],\n  ['deeppink', '#ff1493'],\n  ['deepskyblue', '#00bfff'],\n  ['dimgray', '#696969'],\n  ['dimgrey', '#696969'],\n  ['dodgerblue', '#1e90ff'],\n  ['firebrick', '#b22222'],\n  ['floralwhite', '#fffaf0'],\n  ['forestgreen', '#228b22'],\n  ['fuchsia', '#ff00ff'],\n  ['gainsboro', '#dcdcdc'],\n  ['ghostwhite', '#f8f8ff'],\n  ['goldenrod', '#daa520'],\n  ['gold', '#ffd700'],\n  ['gray', '#808080'],\n  ['green', '#008000'],\n  ['greenyellow', '#adff2f'],\n  ['grey', '#808080'],\n  ['honeydew', '#f0fff0'],\n  ['hotpink', '#ff69b4'],\n  ['indianred', '#cd5c5c'],\n  ['indigo', '#4b0082'],\n  ['ivory', '#fffff0'],\n  ['khaki', '#f0e68c'],\n  ['lavenderblush', '#fff0f5'],\n  ['lavender', '#e6e6fa'],\n  ['lawngreen', '#7cfc00'],\n  ['lemonchiffon', '#fffacd'],\n  ['lightblue', '#add8e6'],\n  ['lightcoral', '#f08080'],\n  ['lightcyan', '#e0ffff'],\n  ['lightgoldenrodyellow', '#fafad2'],\n  ['lightgray', '#d3d3d3'],\n  ['lightgreen', '#90ee90'],\n  ['lightgrey', '#d3d3d3'],\n  ['lightpink', '#ffb6c1'],\n  ['lightsalmon', '#ffa07a'],\n  ['lightseagreen', '#20b2aa'],\n  ['lightskyblue', '#87cefa'],\n  ['lightslategray', '#778899'],\n  ['lightslategrey', '#778899'],\n  ['lightsteelblue', '#b0c4de'],\n  ['lightyellow', '#ffffe0'],\n  ['lime', '#00ff00'],\n  ['limegreen', '#32cd32'],\n  ['linen', '#faf0e6'],\n  ['magenta', '#ff00ff'],\n  ['maroon', '#800000'],\n  ['mediumaquamarine', '#66cdaa'],\n  ['mediumblue', '#0000cd'],\n  ['mediumorchid', '#ba55d3'],\n  ['mediumpurple', '#9370db'],\n  ['mediumseagreen', '#3cb371'],\n  ['mediumslateblue', '#7b68ee'],\n  ['mediumspringgreen', '#00fa9a'],\n  ['mediumturquoise', '#48d1cc'],\n  ['mediumvioletred', '#c71585'],\n  ['midnightblue', '#191970'],\n  ['mintcream', '#f5fffa'],\n  ['mistyrose', '#ffe4e1'],\n  ['moccasin', '#ffe4b5'],\n  ['navajowhite', '#ffdead'],\n  ['navy', '#000080'],\n  ['oldlace', '#fdf5e6'],\n  ['olive', '#808000'],\n  ['olivedrab', '#6b8e23'],\n  ['orange', '#ffa500'],\n  ['orangered', '#ff4500'],\n  ['orchid', '#da70d6'],\n  ['palegoldenrod', '#eee8aa'],\n  ['palegreen', '#98fb98'],\n  ['paleturquoise', '#afeeee'],\n  ['palevioletred', '#db7093'],\n  ['papayawhip', '#ffefd5'],\n  ['peachpuff', '#ffdab9'],\n  ['peru', '#cd853f'],\n  ['pink', '#ffc0cb'],\n  ['plum', '#dda0dd'],\n  ['powderblue', '#b0e0e6'],\n  ['purple', '#800080'],\n  ['rebeccapurple', '#663399'],\n  ['red', '#ff0000'],\n  ['rosybrown', '#bc8f8f'],\n  ['royalblue', '#4169e1'],\n  ['saddlebrown', '#8b4513'],\n  ['salmon', '#fa8072'],\n  ['sandybrown', '#f4a460'],\n  ['seagreen', '#2e8b57'],\n  ['seashell', '#fff5ee'],\n  ['sienna', '#a0522d'],\n  ['silver', '#c0c0c0'],\n  ['skyblue', '#87ceeb'],\n  ['slateblue', '#6a5acd'],\n  ['slategray', '#708090'],\n  ['slategrey', '#708090'],\n  ['snow', '#fffafa'],\n  ['springgreen', '#00ff7f'],\n  ['steelblue', '#4682b4'],\n  ['tan', '#d2b48c'],\n  ['teal', '#008080'],\n  ['thistle', '#d8bfd8'],\n  ['tomato', '#ff6347'],\n  ['turquoise', '#40e0d0'],\n  ['violet', '#ee82ee'],\n  ['wheat', '#f5deb3'],\n  ['white', '#ffffff'],\n  ['whitesmoke', '#f5f5f5'],\n  ['yellow', '#ffff00'],\n  ['yellowgreen', '#9acd32'],\n]);\r\n","// @ts-nocheck\r\nimport { HSL, HSLA, HSV, HSVA, HSB, HSBA,RGB, RGBA, LColorInfo, LColorFormats } from '../utssdk/interface.uts';\r\nimport { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\r\nimport { names } from './css-color-names';\r\nimport { boundAlpha, convertToPercentage, toBoolean } from './util';\r\ntype ColorMatchers = {\r\n\tCSS_UNIT : RegExp,\r\n\trgb : RegExp,\r\n\trgba : RegExp,\r\n\thsl : RegExp,\r\n\thsla : RegExp,\r\n\thsv : RegExp,\r\n\thsva : RegExp,\r\n\thsb : RegExp,\r\n\thsba : RegExp,\r\n\thex3 : RegExp,\r\n\thex6 : RegExp,\r\n\thex4 : RegExp,\r\n\thex8 : RegExp,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// <http://www.w3.org/TR/css3-values/#integers>\r\nconst CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\r\n\r\n// <http://www.w3.org/TR/css3-values/#number-value>\r\nconst CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\r\n\r\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n// 允许正负整数/数字。不要捕获要么/或者，只需捕获整个结果。\r\nconst CSS_UNIT = `(?:${CSS_NUMBER})|(?:${CSS_INTEGER})`;\r\n\r\n// Actual matching.\r\n// Parentheses and commas are optional, but not required.\r\n// Whitespace can take the place of commas or opening paren\r\n// 实际匹配。\r\n// 圆括号和逗号是可选的，但不是必需的。\r\n// 空格可以代替逗号或左括号\r\nconst PERMISSIVE_MATCH3 = '[\\\\s|\\\\(]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')\\\\s*\\\\)?';;\r\n// const PERMISSIVE_MATCH3 = `[\\\\s|\\\\(]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})\\\\s*\\\\)?`;\r\nconst PERMISSIVE_MATCH4 = '[\\\\s|\\\\(]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')\\\\s*\\\\)?';\r\n// const PERMISSIVE_MATCH4 = `[\\\\s|\\\\(]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})\\\\s*\\\\)?`;\r\n\r\nexport const matchers = {\r\n\tCSS_UNIT: new RegExp(CSS_UNIT),\r\n\trgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\r\n\trgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\r\n\thsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\r\n\thsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\r\n\thsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\r\n\thsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\r\n\thsb: new RegExp('hsb' + PERMISSIVE_MATCH3),\r\n\thsba: new RegExp('hsba' + PERMISSIVE_MATCH4),\r\n\thex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n\thex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n\thex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n\thex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n} as ColorMatchers;\r\n\r\n/**\r\n * Check to see if it looks like a CSS unit\r\n * 检查它是否看起来像一个 CSS 单位\r\n * (see `matchers` above for definition).\r\n */\r\nfunction isValidCSSUnit(color : string) : boolean\r\nfunction isValidCSSUnit(color : number) : boolean\r\n\r\n\r\n\r\nfunction isValidCSSUnit(color : any|null) : boolean {\r\n\treturn toBoolean(matchers.CSS_UNIT.exec(`${color}`));\r\n}\r\nexport { isValidCSSUnit }\r\n\r\nfunction inputToRGB(color : string) : LColorInfo\r\nfunction inputToRGB(color : RGB) : LColorInfo\r\nfunction inputToRGB(color : RGBA) : LColorInfo\r\nfunction inputToRGB(color : HSL) : LColorInfo\r\nfunction inputToRGB(color : HSLA) : LColorInfo\r\nfunction inputToRGB(color : HSV) : LColorInfo\r\nfunction inputToRGB(color : HSVA) : LColorInfo\r\nfunction inputToRGB(color : HSB) : LColorInfo\r\nfunction inputToRGB(color : HSBA) : LColorInfo\r\nfunction inputToRGB(color : any) : LColorInfo {\r\n\tlet _color: UTSJSONObject|null = null\r\n\tlet rgb = { r: 0, g: 0, b: 0 } as RGB;\r\n\tlet a:any = 1;\r\n\tlet s: any | null;\r\n\tlet v: any | null;\r\n\tlet l: any | null;\r\n\tlet ok = false;\r\n\tlet format: LColorFormats | null = null;\r\n\t\r\n\tif (typeof color == 'string') {\r\n\t\t_color = stringInputToObject(color as string);\r\n\t} else if(typeof color == 'object'){\r\n\t\t_color = JSON.parse(JSON.stringify(color)) as UTSJSONObject\r\n\t} else {\r\n\t\t// _color = {} as UTSJSONObject\r\n\t}\r\n\tif(_color != null){\r\n\t\tif (isValidCSSUnit(_color['r']) && isValidCSSUnit(_color['g']) && isValidCSSUnit(_color['b'])){\r\n\t\t\trgb = rgbToRgb(_color['r']!, _color['g']!, _color['b']!);\r\n\t\t\tok = true;\r\n\t\t\tformat = `${_color['r']}`.endsWith('%') ? 'prgb' : 'rgb';\r\n\t\t} else if(isValidCSSUnit(_color['h']) && isValidCSSUnit(_color['s']) && (isValidCSSUnit(_color['v']) || isValidCSSUnit(_color['b'])) ){\r\n\t\t\tconst isHSV = _color['v'] != null\r\n\t\t\ts = convertToPercentage(_color['s']!);\r\n\t\t\tv = isHSV ? convertToPercentage(_color['v']!) : convertToPercentage(_color['b']!);\r\n\t\t\trgb = hsvToRgb(_color['h']!, s, v);\r\n\t\t\tok = true;\r\n\t\t\tformat = isHSV ? 'hsv' : 'hsb';\r\n\t\t} else if(isValidCSSUnit(_color['h']) && isValidCSSUnit(_color['s']) && isValidCSSUnit(_color['l'])){\r\n\t\t\ts = convertToPercentage(_color['s']!);\r\n\t\t\tl = convertToPercentage(_color['l']!);\r\n\r\n\t\t\trgb = hslToRgb(_color['h']!, s, l);\r\n\t\t\tok = true;\r\n\t\t\tformat = 'hsl';\r\n\t\t}\r\n\t\tif(_color['a']!=null){\r\n\t\t\ta = _color['a']!;\r\n\t\t}\r\n\t}\r\n\ta = boundAlpha(a);\r\n\treturn {\r\n\t\tok,\r\n\t\tformat: _color?.['format'] as (string | null) ?? format,\r\n\t\tr: Math.min(255, Math.max(rgb.r, 0)),\r\n\t\tg: Math.min(255, Math.max(rgb.g, 0)),\r\n\t\tb: Math.min(255, Math.max(rgb.b, 0)),\r\n\t\ta,\r\n\t} as LColorInfo\r\n}\r\n\r\nexport {\r\n\tinputToRGB\r\n}\r\n\r\n/**\r\n * Permissive string parsing.  Take in a number of formats, and output an object\r\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n */\r\n\r\nexport function stringInputToObject(color : string) : UTSJSONObject | null {\r\n\tlet _color = color.trim().toLowerCase();\r\n\tif (_color.length == 0) {\r\n\t\treturn null;\r\n\t}\r\n\tlet named = false;\r\n\tif (names.get(_color) != null) {\r\n\t\t_color = names.get(_color)!;\r\n\t\tnamed = true;\r\n\t} else if (_color == 'transparent') {\r\n\t\treturn { r: 0, g: 0, b: 0, a: 0, format: 'name' } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', 0],\r\n\t\t// \t['g', 0],\r\n\t\t// \t['b', 0],\r\n\t\t// \t['a', 0],\r\n\t\t// \t['format', 'name'],\r\n\t\t// ])\r\n\t}\r\n\t// Try to match string input using regular expressions.\r\n\t// Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n\t// Just return an object and let the conversion functions handle that.\r\n\t// This way the result will be the same whether the tinycolor is initialized with string or object.\r\n\r\n\tlet match = matchers.rgb.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = match[1]\r\n\t\tconst g = match[2]\r\n\t\tconst b = match[3]\r\n                                     \r\n\t\treturn { r, g, b } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', match[1]],\r\n\t\t// \t['g', match[2]],\r\n\t\t// \t['b', match[3]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.rgba.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = match[1]\r\n\t\tconst g = match[2]\r\n\t\tconst b = match[3]\r\n\t\tconst a = match[4]\r\n\t\treturn { r, g, b, a } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', match[1]],\r\n\t\t// \t['g', match[2]],\r\n\t\t// \t['b', match[3]],\r\n\t\t// \t['a', match[4]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsl.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst l = match[3]\r\n\t\treturn { h, s, l } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['l', match[3]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsla.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst l = match[3]\r\n\t\tconst a = match[4]\r\n\t\treturn { h, s, l, a } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['l', match[3]],\r\n\t\t// \t['a', match[4]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsv.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst v = match[3]\r\n\t\treturn { h, s, v } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['v', match[3]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsva.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst v = match[3]\r\n\t\tconst a = match[4]\r\n\t\treturn { h, s, v, a } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['v', match[3]],\r\n\t\t// \t['a', match[4]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex8.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex(match[1]!)\r\n\t\tconst g = parseIntFromHex(match[2]!)\r\n\t\tconst b = parseIntFromHex(match[3]!)\r\n\t\tconst a = convertHexToDecimal(match[4]!)\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  a,\r\n\t\t  format: named ? 'name' : 'hex8',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3])],\r\n\t\t// \t['a', convertHexToDecimal(match[4])],\r\n\t\t// \t['format', named ? 'name' : 'hex8'],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex6.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex(match[1]!)\r\n\t\tconst g = parseIntFromHex(match[2]!)\r\n\t\tconst b = parseIntFromHex(match[3]!)\r\n\t\t// const a = parseIntFromHex(match[4])\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  format: named ? 'name' : 'hex',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3])],\r\n\t\t// \t['format', named ? 'name' : 'hex'],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex4.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex((match[1] + match[1]))\r\n\t\tconst g = parseIntFromHex((match[2] + match[2]))\r\n\t\tconst b = parseIntFromHex((match[3] + match[3]))\r\n\t\tconst a = convertHexToDecimal((match[4] + match[4]))\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  a,\r\n\t\t  format: named ? 'name' : 'hex8',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1] + match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2] + match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3] + match[3])],\r\n\t\t// \t['a', convertHexToDecimal(match[4] + match[4])],\r\n\t\t// \t['format', named ? 'name' : 'hex8'],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex3.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex((match[1] + match[1]))\r\n\t\tconst g = parseIntFromHex((match[2] + match[2]))\r\n\t\tconst b = parseIntFromHex((match[3] + match[3]))\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  format: named ? 'name' : 'hex',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1] + match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2] + match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3] + match[3])],\r\n\t\t// \t['format', named ? 'name' : 'hex'],\r\n\t\t// ])\r\n\t}\r\n\treturn null\r\n}\r\n\r\n\r\n","// @ts-nocheck\r\nimport { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\r\nimport { names } from './css-color-names';\r\nimport { inputToRGB } from './format-input';\r\nimport { HSL, HSLA, HSV, HSVA, HSBA, RGB, RGBA, RGBAString, LColorInfo, LColorFormats, LColorOptions, LColorInput } from '../utssdk/interface.uts';\r\nimport { bound01, boundAlpha, clamp01, toBoolean, isNumber } from './util';\r\n\r\nexport class TinyColor {\r\n\tr : number;\r\n\tg : number;\r\n\tb : number;\r\n\ta : number;\r\n\t/** 用于创建 limeColor 实例的格式 */\r\n\tformat ?: LColorFormats;\r\n\t/** 传递给构造函数以创建 limeColor 实例的输入 */\r\n\toriginalInput : LColorInput;\r\n\t/** 颜色已被成功解析 */\r\n\tisValid : boolean;\r\n\r\n\tgradientType ?: string;\r\n\r\n\t/** rounded alpha */\r\n\troundA : number;\r\n\r\n\treversedNames : Map<string, string>;\r\n\r\n\tconstructor(color : LColorInput = '', opts : LColorOptions = {} as LColorOptions) {\r\n\t\tlet _color : any = color\r\n\t\t// if(color instanceof TinyColor){\r\n\t\t// \treturn color as TinyColor\r\n\t\t// } \r\n\t\tif (isNumber(color)) {\r\n\t\t\t_color = numberInputToObject(color as number);\r\n\t\t}\r\n\t\tthis.originalInput = _color;\r\n\t\tconst rgb = inputToRGB(_color);\r\n\t\tthis.r = rgb.r;\r\n\t\tthis.g = rgb.g;\r\n\t\tthis.b = rgb.b;\r\n\t\tthis.a = rgb.a;\r\n\t\tthis.roundA = Math.round(100 * this.a) / 100;\r\n\t\tthis.format = opts.format ?? rgb.format;\r\n\t\tthis.gradientType = opts.gradientType;\r\n\r\n\t\t// 不要让范围在 [0,255] 中的值返回成 [0,1]。 \r\n\t\t// 这里可能会失去一些精度，但可以解决原来 \r\n\t\t// .5 被解释为总数的半数，而不是1的一半的问题 \r\n\t\t// 如果本来应该是128，那么这个已经在 inputToRgb 中处理过了\t\tif (this.r < 1) {\r\n\t\tif (this.r < 1) {\r\n\t\t\tthis.r = Math.round(this.r);\r\n\t\t}\r\n\r\n\t\tif (this.g < 1) {\r\n\t\t\tthis.g = Math.round(this.g);\r\n\t\t}\r\n\r\n\t\tif (this.b < 1) {\r\n\t\t\tthis.b = Math.round(this.b);\r\n\t\t}\r\n\r\n\t\tthis.isValid = rgb.ok ?? false;\r\n\r\n\r\n\t\tthis.reversedNames = new Map<string, string>()\r\n\t\tnames.forEach((value : string, key : string) => {\r\n\t\t\tthis.reversedNames.set(value, key)\r\n\t\t})\r\n\r\n\t}\r\n\t/**\r\n\t * 判断当前颜色是否为暗色。\r\n\t * @returns 一个布尔值，表示当前颜色是否为暗色。\r\n\t */\r\n\tisDark() : boolean {\r\n\t\treturn this.getBrightness() < 128;\r\n\t}\r\n\t/**\r\n\t * 判断当前颜色是否为亮色。\r\n\t * @returns 一个布尔值，表示当前颜色是否为亮色。\r\n\t */\r\n\tisLight() : boolean {\r\n\t\treturn !this.isDark();\r\n\t}\r\n\r\n\t/**\r\n\t * 计算当前颜色的亮度值。\r\n\t * 亮度值是根据 RGB 颜色空间中的红、绿、蓝三个通道的值计算得出的，计算公式为：(r * 299 + g * 587 + b * 114) / 1000。\r\n\t * @returns 返回颜色的感知亮度，范围从0-255。\r\n\t */\r\n\tgetBrightness() : number {\r\n\t\t// http://www.w3.org/TR/AERT#color-contrast\r\n\t\tconst rgb = this.toRgb();\r\n\t\treturn (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n\t}\r\n\t/**\r\n\t * 计算当前颜色的相对亮度值。\r\n\t * 相对亮度值是根据 RGB 颜色空间中的红、绿、蓝三个通道的值计算得出的，计算公式为：0.2126 * R + 0.7152 * G + 0.0722 * B。\r\n\t * @returns 返回颜色的感知亮度，范围从0-1。\r\n\t */\r\n\tgetLuminance() : number {\r\n\t\t// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n\t\tconst rgb = this.toRgb();\r\n\t\tlet R : number;\r\n\t\tlet G : number;\r\n\t\tlet B : number;\r\n\t\tconst RsRGB : number = rgb.r / 255;\r\n\t\tconst GsRGB : number = rgb.g / 255;\r\n\t\tconst BsRGB : number = rgb.b / 255;\r\n\r\n\t\tif (RsRGB <= 0.03928) {\r\n\t\t\tR = RsRGB / 12.92;\r\n\t\t} else {\r\n\t\t\t// eslint-disable-next-line prefer-exponentiation-operator\r\n\t\t\tR = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\r\n\t\t}\r\n\r\n\t\tif (GsRGB <= 0.03928) {\r\n\t\t\tG = GsRGB / 12.92;\r\n\t\t} else {\r\n\t\t\t// eslint-disable-next-line prefer-exponentiation-operator\r\n\t\t\tG = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\r\n\t\t}\r\n\r\n\t\tif (BsRGB <= 0.03928) {\r\n\t\t\tB = BsRGB / 12.92;\r\n\t\t} else {\r\n\t\t\t// eslint-disable-next-line prefer-exponentiation-operator\r\n\t\t\tB = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\r\n\t\t}\r\n\r\n\t\treturn 0.2126 * R + 0.7152 * G + 0.0722 * B;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前颜色的透明度值。\r\n\t * 透明度值的范围是 0 到 1，其中 0 表示完全透明，1 表示完全不透明。\r\n\t * @returns 一个数字，表示当前颜色的透明度值。\r\n\t */\r\n\tgetAlpha() : number {\r\n\t\treturn this.a;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置当前颜色的透明度值。\r\n\t * @param alpha - 要设置的透明度值。透明度值的范围是 0 到 1，其中 0 表示完全透明，1 表示完全不透明。\r\n\t * @returns 一个 `TinyColor` 对象，表示设置透明度后的颜色。\r\n\t */\r\n\tsetAlpha(alpha ?: string) : TinyColor\r\n\tsetAlpha(alpha ?: number) : TinyColor\r\n\tsetAlpha(alpha ?: any) : TinyColor {\r\n\t\tthis.a = boundAlpha(alpha);\r\n\t\tthis.roundA = Math.round(100 * this.a) / 100;\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * 判断当前颜色是否为单色。\r\n\t * 单色是指颜色的饱和度（S）为 0 的颜色，这些颜色只有明度（L）变化，没有颜色变化。\r\n\t * @returns 一个布尔值，表示当前颜色是否为单色。\r\n\t */\r\n\tisMonochrome() : boolean {\r\n\t\tconst { s } = this.toHsl();\r\n\t\treturn s == 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 将当前颜色转换为 HSV（色相、饱和度、亮度）颜色空间。\r\n\t * @returns 一个对象，包含四个属性：`h`（色相）、`s`（饱和度）、`v`（亮度）和 `a`（透明度）。\r\n\t */\r\n\ttoHsv() : HSVA {\r\n\t\tconst hsv = rgbToHsv(this.r, this.g, this.b);\r\n\t\treturn { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a } as HSVA;\r\n\t}\r\n\r\n\t/**\r\n\t * 将当前颜色转换为 HSV（色相、饱和度、亮度）颜色空间的字符串表示。\r\n\t * @returns 一个字符串，表示当前颜色的 HSV 或 HSVA 格式 hsva(xxx, xxx, xxx, xx)。\r\n\t */\r\n\ttoHsvString() : string {\r\n\t\tconst hsv = rgbToHsv(this.r, this.g, this.b);\r\n\t\tconst h = Math.round(hsv.h * 360);\r\n\t\tconst s = Math.round(hsv.s * 100);\r\n\t\tconst v = Math.round(hsv.v * 100);\r\n\t\treturn this.a == 1 ? `hsv(${h}, ${s}%, ${v}%)` : `hsva(${h}, ${s}%, ${v}%, ${this.roundA})`;\r\n\t}\r\n\r\n\t/**\r\n\t * 将当前颜色对象转换为HSBA颜色空间,即Hue（色相）、Saturation（饱和度）、Brightness（亮度）和Alpha（透明度\r\n\t * @returns {HSBA} 返回一个HSBA对象，表示当前颜色对象在HSBA颜色空间中的值\r\n\t */\r\n\ttoHsb() : HSBA {\r\n\t\tconst hsv = rgbToHsv(this.r, this.g, this.b);\r\n\t\treturn { h: hsv.h * 360, s: hsv.s, b: hsv.v, a: this.a } as HSBA;\r\n\t}\r\n\t/**\r\n\t * 将当前颜色对象转换为CSS风格的HSB或HSVA字符串\r\n\t * @returns {string} 返回一个CSS风格的HSB或HSVA字符串，表示当前颜色对象的颜色值\r\n\t */\r\n\ttoHsbString() : string {\r\n\t\tconst hsb = this.toHsb();\r\n\t\tconst h = Math.round(hsb.h);\r\n\t\tconst s = Math.round(hsb.s * 100);\r\n\t\tconst b = Math.round(hsb.b * 100);\r\n\t\treturn this.a == 1\r\n\t\t\t? `hsb(${h}, ${s}%, ${b}%)`\r\n\t\t\t: `hsva(${h}, ${s}%, ${b}%, ${this.roundA})`;\r\n\t}\r\n\t/**\r\n\t * 将当前颜色转换为 HSL（色相、饱和度、明度）颜色空间。\r\n\t * @returns 一个对象，包含四个属性：`h`（色相）、`s`（饱和度）、`l`（明度）和 `a`（透明度）。\r\n\t */\r\n\ttoHsl() : HSLA {\r\n\t\tconst hsl = rgbToHsl(this.r, this.g, this.b);\r\n\t\treturn { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a } as HSLA;\r\n\t}\r\n\r\n\t/**\r\n\t * 将当前颜色转换为 HSL（色相、饱和度、明度）颜色空间的字符串表示。\r\n\t * @returns 一个字符串，表示当前颜色的 HSL 或 HSLA 格式 hsla(xxx, xxx, xxx, xx)。\r\n\t */\r\n\ttoHslString() : string {\r\n\t\tconst hsl = rgbToHsl(this.r, this.g, this.b);\r\n\t\tconst h = Math.round(hsl.h * 360);\r\n\t\tconst s = Math.round(hsl.s * 100);\r\n\t\tconst l = Math.round(hsl.l * 100);\r\n\t\treturn this.a == 1 ? `hsl(${h}, ${s}%, ${l}%)` : `hsla(${h}, ${s}%, ${l}%, ${this.roundA})`;\r\n\t}\r\n\r\n\t/**\r\n\t * 将当前颜色转换为十六进制颜色表示。\r\n\t * @param allow3Char 是否允许返回简写的十六进制颜色表示（如果可能）。默认值为 `false`。\r\n\t * @returns 一个字符串，表示当前颜色的十六进制格式。\r\n\t */\r\n\ttoHex(allow3Char = false) : string {\r\n\t\treturn rgbToHex(this.r, this.g, this.b, allow3Char);\r\n\t}\r\n\t/**\r\n\t * 将当前颜色转换为带有井号（`#`）前缀的十六进制颜色表示。\r\n\t * @param allow3Char 是否允许返回简写的十六进制颜色表示（如果可能）。默认值为 `false`。\r\n\t * @returns 一个字符串，表示当前颜色的带有井号前缀的十六进制格式。\r\n\t */\r\n\ttoHexString(allow3Char = false) : string {\r\n\t\treturn '#' + this.toHex(allow3Char);\r\n\t}\r\n\t/**\r\n\t * 返回颜色的八位十六进制值.\r\n\t * @param allow4Char 如果可能的话，将十六进制值缩短为4个字符\r\n\t */\r\n\ttoHex8(allow4Char = false) : string {\r\n\t\treturn rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\r\n\t}\r\n\t/**\r\n\t * 返回颜色的八位十六进制值，并且值前面带有#符号.\r\n\t * @param allow4Char 如果可能的话，将十六进制值缩短为4个字符\r\n\t */\r\n\ttoHex8String(allow4Char = false) : string {\r\n\t\treturn '#' + this.toHex8(allow4Char);\r\n\t}\r\n\t/**\r\n\t * 根据颜色的透明度（Alpha值）返回较短的十六进制值，并且值前面带有#符号。\r\n\t * @param allowShortChar 如果可能的话，将十六进制值缩短至3个或4个字符\r\n\t */\r\n\ttoHexShortString(allowShortChar = false) : string {\r\n\t\treturn this.a == 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);\r\n\t}\r\n\t/**\r\n\t * 将当前颜色转换为 RGB（红、绿、蓝）颜色空间的对象表示。\r\n\t * @returns 一个包含 `r`、`g`、`b` 和 `a` 属性的对象，表示当前颜色的 RGB 格式。\r\n\t */\r\n\ttoRgb() : RGBA {\r\n\t\treturn {\r\n\t\t\tr: Math.round(this.r),\r\n\t\t\tg: Math.round(this.g),\r\n\t\t\tb: Math.round(this.b),\r\n\t\t\ta: this.a,\r\n\t\t} as RGBA;\r\n\t}\r\n\r\n\t/**\r\n\t * 将当前颜色对象转换为CSS风格的RGB或RGBA字符串\r\n\t * @returns {string} 返回一个CSS风格的RGB或RGBA字符串，表示当前颜色对象的颜色值\r\n\t */\r\n\ttoRgbString() : string {\r\n\t\tconst r = Math.round(this.r);\r\n\t\tconst g = Math.round(this.g);\r\n\t\tconst b = Math.round(this.b);\r\n\t\treturn this.a == 1 ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${this.roundA})`;\r\n\t}\r\n\t/**\r\n\t * 将当前颜色转换为百分比表示的 RGB（红、绿、蓝）颜色空间的对象表示。\r\n\t * @returns 一个包含 `r`、`g`、`b` 和 `a` 属性的对象，表示当前颜色的百分比表示的 RGB 格式。\r\n\t */\r\n\ttoPercentageRgb() : RGBAString {\r\n\t\t// 定义一个格式化函数，将颜色值转换为百分比表示\r\n\t\tconst fmt = (x : number) : string => `${Math.round(bound01(x, 255) * 100)}%`;\r\n\t\t// 返回一个RGBA对象，其中颜色值已转换为百分比表示\r\n\t\treturn {\r\n\t\t\tr: fmt(this.r),\r\n\t\t\tg: fmt(this.g),\r\n\t\t\tb: fmt(this.b),\r\n\t\t\ta: this.a,\r\n\t\t} as RGBAString;\r\n\t}\r\n\t/**\r\n\t * 将RGBA相对值插值为一个字符串，颜色值以百分比表示。\r\n\t */\r\n\ttoPercentageRgbString() : string {\r\n\t\t// 定义一个四舍五入函数，将颜色值转换为百分比表示的整数\r\n\t\tconst rnd = (x : number) : number => Math.round(bound01(x, 255) * 100);\r\n\t\t// 根据alpha值返回不同的字符串表示\r\n\t\treturn this.a == 1\r\n\t\t\t? `rgb(${rnd(this.r)}%, ${rnd(this.g)}%, ${rnd(this.b)}%)`\r\n\t\t\t: `rgba(${rnd(this.r)}%, ${rnd(this.g)}%, ${rnd(this.b)}%, ${this.roundA})`;\r\n\t}\r\n\t/**\r\n\t * 返回这个颜色的'真实'名称,不存在返回null\r\n\t */\r\n\ttoName() : string | null {\r\n\t\tif (this.a == 0) {\r\n\t\t\treturn 'transparent';\r\n\t\t}\r\n\r\n\t\tif (this.a < 1) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst hex = this.toHexString()//'#' + rgbToHex(this.r, this.g, this.b, false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\treturn this.reversedNames.get(hex)\r\n\r\n\t}\r\n\t/**\r\n\t * 将颜色转换为字符串表示。\r\n\t *\r\n\t * @param format - 用于显示字符串表示的格式。\r\n\t */\r\n\t// toString<T extends 'name'>(format : T) : string;\r\n\t// toString<T extends LColorFormats>(format ?: T) : string;\r\n\r\n\r\n\toverride toString() : string {\r\n\t\treturn this.toString(null)\r\n\t}\r\n\r\n\ttoString(format ?: LColorFormats) : string {\r\n\t\tconst formatSet = toBoolean(format);\r\n\t\tlet _format = format ?? this.format;\r\n\r\n\t\tlet formattedString : string | null = null;\r\n\t\tconst hasAlpha = this.a < 1 && this.a >= 0;\r\n\t\tconst needsAlphaFormat = !formatSet && hasAlpha && (_format != null && _format.startsWith('hex') || _format == 'name');\r\n\r\n\t\tif (needsAlphaFormat) {\r\n\t\t\t// 特殊情况：透明度，所有其他非透明度格式都会在有透明度时返回rgba。\r\n\t\t\t// 当透明度为0时，返回\"transparent\"。\r\n\t\t\tif (_format == 'name' && this.a == 0) {\r\n\t\t\t\treturn this.toName() ?? 'transparent';\r\n\t\t\t}\r\n\t\t\treturn this.toRgbString();\r\n\t\t}\r\n\r\n\t\tif (_format == 'rgb') {\r\n\t\t\tformattedString = this.toRgbString();\r\n\t\t}\r\n\r\n\t\tif (_format == 'prgb') {\r\n\t\t\tformattedString = this.toPercentageRgbString();\r\n\t\t}\r\n\r\n\t\tif (_format == 'hex' || _format == 'hex6') {\r\n\t\t\tformattedString = this.toHexString();\r\n\t\t}\r\n\r\n\t\tif (_format == 'hex3') {\r\n\t\t\tformattedString = this.toHexString(true);\r\n\t\t}\r\n\r\n\t\tif (_format == 'hex4') {\r\n\t\t\tformattedString = this.toHex8String(true);\r\n\t\t}\r\n\r\n\t\tif (_format == 'hex8') {\r\n\t\t\tformattedString = this.toHex8String();\r\n\t\t}\r\n\r\n\t\tif (_format == 'name') {\r\n\t\t\tformattedString = this.toName();\r\n\t\t}\r\n\r\n\t\tif (_format == 'hsl') {\r\n\t\t\tformattedString = this.toHslString();\r\n\t\t}\r\n\r\n\t\tif (_format == 'hsv') {\r\n\t\t\tformattedString = this.toHsvString();\r\n\t\t}\r\n\t\tif (_format == 'hsb') {\r\n\t\t\tformattedString = this.toHsbString();\r\n\t\t}\r\n\t\treturn formattedString ?? this.toHexString();\r\n\t}\r\n\ttoNumber() : number {\r\n\t\treturn (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\r\n\t}\r\n\tclone() : TinyColor {\r\n\t\treturn new TinyColor(this.toString());\r\n\t}\r\n\t/**\r\n\t * 将颜色变浅指定的量。提供100将始终返回白色。\r\n\t * @param amount - 有效值介于1-100之间\r\n\t */\r\n\tlighten(amount = 10) : TinyColor {\r\n\t\tconst hsl = this.toHsl();\r\n\t\thsl.l += amount / 100;\r\n\t\thsl.l = clamp01(hsl.l);\r\n\t\treturn new TinyColor(hsl, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 将颜色变亮一定的量，范围从0到100。\r\n\t * @param amount - 有效值在1-100之间\r\n\t */\r\n\tbrighten(amount = 10) : TinyColor {\r\n\t\tconst rgb = this.toRgb();\r\n\t\trgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\r\n\t\trgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\r\n\t\trgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\r\n\t\treturn new TinyColor(rgb, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 将颜色变暗一定的量，范围从0到100。\r\n\t * 提供100将始终返回黑色。\r\n\t * @param amount - 有效值在1-100之间\r\n\t */\r\n\tdarken(amount = 10) : TinyColor {\r\n\t\tconst hsl = this.toHsl();\r\n\t\thsl.l -= amount / 100;\r\n\t\thsl.l = clamp01(hsl.l);\r\n\t\treturn new TinyColor(hsl, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 将颜色与纯白色混合，范围从0到100。\r\n\t * 提供0将什么都不做，提供100将始终返回白色。\r\n\t * @param amount - 有效值在1-100之间\r\n\t */\r\n\ttint(amount = 10) : TinyColor {\r\n\t\treturn this.mix('white', amount);\r\n\t}\r\n\t/**\r\n\t * 将颜色与纯黑色混合，范围从0到100。\r\n\t * 提供0将什么都不做，提供100将始终返回黑色。\r\n\t * @param amount - 有效值在1-100之间\r\n\t */\r\n\tshade(amount = 10) : TinyColor {\r\n\t\treturn this.mix('black', amount);\r\n\t}\r\n\t/**\r\n\t * 将颜色的饱和度降低一定的量，范围从0到100。\r\n\t * 提供100与调用greyscale相同\r\n\t * @param amount - 有效值在1-100之间\r\n\t */\r\n\tdesaturate(amount = 10) : TinyColor {\r\n\t\tconst hsl = this.toHsl();\r\n\t\thsl.s -= amount / 100;\r\n\t\thsl.s = clamp01(hsl.s);\r\n\t\treturn new TinyColor(hsl, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 将颜色饱和度提高一定数量，范围从 0 到 100。\r\n\t * @param amount - 有效值介于 1 到 100 之间。\r\n\t */\r\n\tsaturate(amount = 10) : TinyColor {\r\n\t\tconst hsl = this.toHsl();\r\n\t\thsl.s += amount / 100;\r\n\t\thsl.s = clamp01(hsl.s);\r\n\t\treturn new TinyColor(hsl, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 将颜色完全去饱和为灰度。\r\n\t * 等同于调用 `desaturate(100)`。\r\n\t */\r\n\tgreyscale() : TinyColor {\r\n\t\treturn this.desaturate(100);\r\n\t}\r\n\t/**\r\n\t * spin 方法接收一个正数或负数作为参数，表示色相的变化量，变化范围在 [-360, 360] 之间。\r\n\t * 如果提供的值超出此范围，它将被限制在此范围内。\r\n\t */\r\n\tspin(amount : number) : TinyColor {\r\n\t\tconst hsl = this.toHsl();\r\n\t\tconst hue = (hsl.h + amount) % 360;\r\n\t\thsl.h = hue < 0 ? 360 + hue : hue;\r\n\t\treturn new TinyColor(hsl, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 将当前颜色与另一种颜色按给定的比例混合，范围从0到100。\r\n\t * 0表示不混合（返回当前颜色）\r\n\t */\r\n\tmix(color : LColorInput, amount = 50) : TinyColor {\r\n\t\tconst rgb1 = this.toRgb();\r\n\t\tconst rgb2 = new TinyColor(color).toRgb();\r\n\r\n\t\tconst p = amount / 100;\r\n\t\tconst rgba = {\r\n\t\t\tr: (rgb2.r - rgb1.r) * p + rgb1.r,\r\n\t\t\tg: (rgb2.g - rgb1.g) * p + rgb1.g,\r\n\t\t\tb: (rgb2.b - rgb1.b) * p + rgb1.b,\r\n\t\t\ta: (rgb2.a - rgb1.a) * p + rgb1.a,\r\n\t\t};\r\n\r\n\t\treturn new TinyColor(rgba, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 生成一组与当前颜色相似的颜色。\r\n\t * 这些颜色在色相环上是相邻的，形成一个类似于彩虹的颜色序列。\r\n\t * @param results - 要生成的相似颜色的数量，默认值为 6。\r\n\t * @param slices - 将色相环划分为多少个部分，默认值为 30。\r\n\t * @returns 一个包含当前颜色及其相似颜色的 TinyColor 对象数组。\r\n\t */\r\n\tanalogous(results = 6, slices = 30) : TinyColor[] {\r\n\t\tconst hsl = this.toHsl();\r\n\t\tconst part = 360 / slices;\r\n\t\tconst ret : TinyColor[] = [this];\r\n\t\tlet _results = results\r\n\t\t// for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\r\n\t\t// \thsl.h = (hsl.h + part) % 360;\r\n\t\t// \tret.push(new TinyColor(hsl));\r\n\t\t// }\r\n\t\thsl.h = (hsl.h - ((part * _results) >> 1) + 720) % 360;\r\n\t\twhile (_results > 0) {\r\n\t\t\thsl.h = (hsl.h + part) % 360;\r\n\t\t\tret.push(new TinyColor(hsl));\r\n\t\t\t_results--;\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n\t/**\r\n\t * 计算当前颜色的补色。\r\n\t * 补色是指在色相环上相对位置的颜色，它们的色相差为 180°。\r\n\t * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\r\n\t * @returns 一个 TinyColor 对象，表示当前颜色的补色。\r\n\t */\r\n\tcomplement() : TinyColor {\r\n\t\tconst hsl = this.toHsl();\r\n\t\thsl.h = (hsl.h + 180) % 360;\r\n\t\treturn new TinyColor(hsl, { format: this.format } as LColorOptions);\r\n\t}\r\n\t/**\r\n\t * 生成一组与当前颜色具有相同色相和饱和度的颜色。\r\n\t * 这些颜色的亮度值不同，形成一个单色调的颜色序列。\r\n\t * @param results - 要生成的单色调颜色的数量，默认值为 6。\r\n\t * @returns 一个包含当前颜色及其单色调颜色的 TinyColor 对象数组。\r\n\t */\r\n\tmonochromatic(results = 6) : TinyColor[] {\r\n\t\tconst hsv = this.toHsv();\r\n\t\tconst { h } = hsv;\r\n\t\tconst { s } = hsv;\r\n\t\tlet { v } = hsv;\r\n\t\tconst res : TinyColor[] = [];\r\n\t\tconst modification = 1 / results;\r\n\t\tlet _results = results\r\n\t\t// while (results--) {\r\n\t\t// \tres.push(new TinyColor({ h, s, v }));\r\n\t\t// \tv = (v + modification) % 1;\r\n\t\t// }\r\n\t\twhile (_results > 0) {\r\n\t\t\tres.push(new TinyColor({ h, s, v }));\r\n\t\t\tv = (v + modification) % 1;\r\n\t\t\t_results--\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\t/**\r\n\t * 生成当前颜色的分裂补色。\r\n\t * 分裂补色是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 180°。\r\n\t * @returns 一个包含当前颜色及其分裂补色的 TinyColor 对象数组。\r\n\t */\r\n\tsplitcomplement() : TinyColor[] {\r\n\t\tconst hsl = this.toHsl();\r\n\t\tconst { h } = hsl;\r\n\t\treturn [\r\n\t\t\tthis,\r\n\t\t\tnew TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\r\n\t\t\tnew TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\r\n\t\t] as TinyColor[];\r\n\t}\r\n\t/**\r\n\t * 计算当前颜色在给定背景颜色上的显示效果。\r\n\t * @param background - 背景颜色，可以是任何 LColorInput 类型的值。\r\n\t * @returns 一个 TinyColor 对象，表示当前颜色在给定背景颜色上的显示效果。\r\n\t */\r\n\tonBackground(background : LColorInput) : TinyColor {\r\n\t\tconst fg = this.toRgb();\r\n\t\tconst bg = new TinyColor(background).toRgb();\r\n\t\tconst alpha = fg.a + bg.a * (1 - fg.a);\r\n\r\n\t\treturn new TinyColor({\r\n\t\t\tr: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,\r\n\t\t\tg: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,\r\n\t\t\tb: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,\r\n\t\t\ta: alpha,\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * 生成当前颜色的三色调。\r\n\t * 三色调是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 120°。\r\n\t * 这是 `polyad(3)` 方法的别名。\r\n\t * @returns 一个包含当前颜色及其三色调颜色的 TinyColor 对象数组。\r\n\t */\r\n\ttriad() : TinyColor[] {\r\n\t\treturn this.polyad(3);\r\n\t}\r\n\t/**\r\n\t * 生成当前颜色的四色调。\r\n\t * 四色调是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 90°。\r\n\t * 这是 `polyad(4)` 方法的别名。\r\n\t * @returns 一个包含当前颜色及其四色调颜色的 TinyColor 对象数组。\r\n\t */\r\n\ttetrad() : TinyColor[] {\r\n\t\treturn this.polyad(4);\r\n\t}\r\n\t/**\r\n\t * 生成当前颜色的 n 色调。\r\n\t * n 色调是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 360° / n。\r\n\t * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\r\n\t * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\r\n\t * @param n - 一个整数，表示要生成的色调数量。\r\n\t * @returns 一个包含当前颜色及其 n 色调颜色的 TinyColor 对象数组。\r\n\t */\r\n\tpolyad(n : number) : TinyColor[] {\r\n\t\tconst hsl = this.toHsl();\r\n\t\tconst { h } = hsl;\r\n\r\n\t\tconst result : TinyColor[] = [this];\r\n\t\tconst increment = 360 / n;\r\n\t\tfor (let i = 1; i < n; i++) {\r\n\t\t\tresult.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t/**\r\n\t * 比较当前颜色与给定颜色是否相等。\r\n\t * @param color - 一个 LColorInput 类型的值，表示要比较的颜色。\r\n\t * @returns 一个布尔值，表示当前颜色与给定颜色是否相等。\r\n\t */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\toverride equals(other ?: LColorInput) : boolean {\r\n\t\tif (other == null) {\r\n\t\t\treturn false\r\n\t\t} else if (other instanceof TinyColor) {\r\n\t\t\treturn this.toRgbString() == (other as TinyColor).toRgbString()\r\n\t\t}\r\n\t\treturn this.toRgbString() == new TinyColor(other).toRgbString();\r\n\t}\r\n\r\n}\r\n\r\nexport function tinyColor(color : LColorInput = '', opts : LColorOptions = {} as LColorOptions) : TinyColor {\r\n\treturn new TinyColor(color, opts);\r\n}","// 引入颜色处理库\r\nimport { tinyColor } from '@/uni_modules/lime-color';\r\n\r\n\r\n/**\r\n * 操作类型\r\n * play: 开始动画\r\n * failed: 显示失败状态\r\n * clear: 清除动画\r\n * destroy: 销毁实例\r\n */\r\nexport type TickType = 'play' | 'failed' | 'clear' | 'destroy' | 'pause'\r\n/**\r\n * 加载动画类型\r\n * circular: 环形加载动画\r\n * spinner: 旋转器加载动画\r\n * failed: 失败状态动画\r\n */\r\nexport type LoadingType = 'circular' | 'spinner' | 'failed';\r\n/**\r\n * 加载组件返回接口\r\n */\r\nexport type UseLoadingReturn = {\r\n\tratio : 1;\r\n\ttype : LoadingType;\r\n\tmode : 'raf' | 'animate'; // \r\n\tcolor : string;//Ref<string>;\r\n\tplay : () => void;\r\n\tfailed : () => void;\r\n\tclear : () => void;\r\n\tdestroy : () => void;\r\n\tpause : () => void;\r\n}\r\n\r\n\r\n/**\r\n * 计算圆周上指定角度的点的坐标\r\n * @param centerX 圆心的 X 坐标\r\n * @param centerY 圆心的 Y 坐标\r\n * @param radius 圆的半径\r\n * @param angleDegrees 角度（以度为单位）\r\n * @returns 包含 X 和 Y 坐标的对象\r\n */\r\nfunction getPointOnCircle(\r\n\tcenterX : number,\r\n\tcenterY : number,\r\n\tradius : number,\r\n\tangleDegrees : number\r\n) : number[] {\r\n\t// 将角度转换为弧度\r\n\tconst angleRadians = (angleDegrees * Math.PI) / 180;\r\n\r\n\t// 计算点的 X 和 Y 坐标\r\n\tconst x = centerX + radius * Math.cos(angleRadians);\r\n\tconst y = centerY + radius * Math.sin(angleRadians);\r\n\r\n\treturn [x, y]\r\n}\r\n\r\nexport function useLoading(element : Ref<UniElement | null>) : UseLoadingReturn {\r\n\r\n\tconst tick = ref<TickType>('pause')\r\n\r\n\tconst state = reactive<UseLoadingReturn>({\r\n\t\tcolor: '#000',\r\n\t\ttype: 'circular',\r\n\t\tratio: 1,\r\n\t\tmode: 'raf',\r\n\t\tplay: () => {\r\n\t\t\ttick.value = 'play'\r\n\t\t},\r\n\t\tfailed: () => {\r\n\t\t\ttick.value = 'failed'\r\n\t\t},\r\n\t\tclear: () => {\r\n\t\t\ttick.value = 'clear'\r\n\t\t},\r\n\t\tdestroy: () => {\r\n\t\t\ttick.value = 'destroy'\r\n\t\t},\r\n\t\tpause: () => {\r\n\t\t\ttick.value = 'pause'\r\n\t\t}\r\n\t})\r\n\r\n\tconst context = shallowRef<DrawableContext | null>(null);\r\n\t// let ctx:DrawableContext|null = null\r\n\r\n\t// let rotation = 0\r\n\tlet isPlaying = false\r\n\tlet canvasWidth = ref(0)\r\n\tlet canvasHeight = ref(0)\r\n\tlet canvasSize = ref(0)\r\n\r\n\tlet animationFrameId = -1\r\n\tlet animation : UniAnimation | null = null\r\n\r\n\tlet drawFrame : (() => void) | null = null\r\n\tconst size = computed(() : number => state.ratio > 1 ? state.ratio : canvasSize.value * state.ratio)\r\n\t// 绘制圆形加载\r\n\tconst drawCircular = () => {\r\n\t\tlet startAngle = 0;   // 起始角度\r\n\t\tlet endAngle = 0;     // 结束角度\r\n\t\tlet rotate = 0;       // 旋转角度\r\n\r\n\t\t// const ctx = context.value!\r\n\t\t// 动画参数配置\r\n\t\tconst MIN_ANGLE = 5;          // 最小保持角度\r\n\t\tconst ARC_LENGTH = 359.5      // 最大弧长（避免闭合）\r\n\t\tconst PI = Math.PI / 180      // 角度转弧度系数\r\n\t\tconst SPEED = 0.018 / 4           // 动画速度\r\n\t\tconst ROTATE_INTERVAL = 0.09 / 4  // 旋转增量\r\n\r\n\t\tconst lineWidth = size.value / 10;  // 线宽计算\r\n\t\tconst x = canvasWidth.value / 2           // 中心点X\r\n\t\tconst y = canvasHeight.value / 2          // 中心点Y\r\n\t\tconst radius = size.value / 2 - lineWidth // 实际绘制半径\r\n\r\n\t\tdrawFrame = () => {\r\n\t\t\tif (context.value == null || !isPlaying) return\r\n\t\t\tlet ctx = context.value!\r\n\r\n\r\n\t\t\t// __f__('log','at uni_modules/lime-loading/index.uts:124','radius', radius, size.value)\r\n\t\t\tctx.reset();\r\n\r\n\t\t\t// 绘制圆弧\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(\r\n\t\t\t\tx,\r\n\t\t\t\ty,\r\n\t\t\t\tradius,\r\n\t\t\t\tstartAngle * PI + rotate,\r\n\t\t\t\tendAngle * PI + rotate\r\n\t\t\t);\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeStyle = state.color;\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\t// 角度更新逻辑\r\n\t\t\tif (endAngle < ARC_LENGTH) {\r\n\t\t\t\tendAngle = Math.min(ARC_LENGTH, endAngle + (ARC_LENGTH - MIN_ANGLE) * SPEED);\r\n\t\t\t} else if (startAngle < ARC_LENGTH) {\r\n\t\t\t\tstartAngle = Math.min(ARC_LENGTH, startAngle + (ARC_LENGTH - MIN_ANGLE) * SPEED);\r\n\t\t\t} else {\r\n\t\t\t\t// 重置时保留最小可见角度\r\n\t\t\t\tstartAngle = 0;\r\n\t\t\t\tendAngle = MIN_ANGLE;\r\n\t\t\t}\r\n\r\n\t\t\tctx.update()\r\n\r\n\r\n\r\n\t\t\tif (state.mode == 'raf') {\r\n\t\t\t\trotate = (rotate + ROTATE_INTERVAL) % 360; // 持续旋转并限制范围\r\n\t\t\t\tif (isPlaying && drawFrame != null) {\r\n\t\t\t\t\tanimationFrameId = requestAnimationFrame(drawFrame!)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet lastTime = Date.now();\r\n\tconst drawSpinner = () => {\r\n\t\tconst steps = 12;     // 旋转线条数量\r\n\t\t// const size = state.ratio > 1 ? state.ratio : canvasSize.value\r\n\t\tconst lineWidth = size.value / 10;  // 线宽\r\n\t\tconst x = canvasWidth.value / 2  // 中心坐标\r\n\t\tconst y = canvasHeight.value / 2\r\n\r\n\t\tlet step = 0;         // 当前步数\r\n\r\n\r\n\r\n\r\n\t\tconst length = size.value / 3.6 - lineWidth;  // 线长\r\n\r\n\t\tconst offset = size.value / 4;      // 距中心偏移\r\n\r\n\t\t/** 生成颜色渐变数组 */\r\n\t\tfunction generateColorGradient(hex : string, steps : number) : string[] {\r\n\t\t\tconst colors : string[] = []\r\n\t\t\tconst _color = tinyColor(hex)\r\n\r\n\t\t\tfor (let i = 1; i <= steps; i++) {\r\n\t\t\t\t_color.setAlpha(i / steps);\r\n\t\t\t\tcolors.push(_color.toRgbString());\r\n\t\t\t}\r\n\t\t\treturn colors\r\n\t\t}\r\n\r\n\t\t// 计算颜色渐变\r\n\t\tlet colors = computed(() : string[] => generateColorGradient(state.color, steps))\r\n\r\n\t\t/** 帧绘制函数 */\r\n\t\tdrawFrame = () => {\r\n\t\t\tif (context.value == null || !isPlaying) return\r\n\t\t\tconst delta = Date.now() - lastTime;\r\n\r\n\r\n\t\t\tif (delta >= 1000 / 10) {\r\n\t\t\t\tlastTime = Date.now();\r\n\t\t\t\tlet ctx = context.value!\r\n\t\t\t\tctx.reset();\r\n\t\t\t\tfor (let i = 0; i < steps; i++) {\r\n\t\t\t\t\tconst stepAngle = 360 / steps;    // 单步角度\r\n\t\t\t\t\tconst angle = stepAngle * i;      // 当前角度\r\n\t\t\t\t\tconst index = (steps + i - step) % steps // 颜色索引\r\n\t\t\t\t\t// 计算线段坐标\r\n\t\t\t\t\tconst radian = angle * Math.PI / 180;\r\n\t\t\t\t\tconst cos = Math.cos(radian);\r\n\t\t\t\t\tconst sin = Math.sin(radian);\r\n\r\n\t\t\t\t\t// 绘制线段\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x + offset * cos, y + offset * sin);\r\n\t\t\t\t\tctx.lineTo(x + (offset + length) * cos, y + (offset + length) * sin);\r\n\t\t\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t\t\tctx.lineCap = 'round';\r\n\t\t\t\t\tctx.strokeStyle = colors.value[index];\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx.update()\r\n\t\t\t\tif(state.mode == 'raf') {\r\n\t\t\t\t\t// step += 1\r\n\t\t\t\t\tstep = (step + 1) % steps; // 限制step范围\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (state.mode == 'raf') {\r\n\t\t\t\tif (isPlaying && drawFrame != null) {\r\n\t\t\t\t\tanimationFrameId = requestAnimationFrame(drawFrame!)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst drwaFailed = () => {\r\n\t\tif (context.value == null) return\r\n\t\tlet ctx = context.value!\r\n\r\n\t\t// const size = state.ratio > 1 ? state.ratio : canvasSize.value\r\n\t\tconst innerSize = size.value * 0.8 // 内圈尺寸\r\n\t\tconst lineWidth = innerSize / 10; // 线宽\r\n\t\tconst lineLength = (size.value - lineWidth) / 2 // X长度\r\n\t\tconst centerX = canvasWidth.value / 2;\r\n\t\tconst centerY = canvasHeight.value / 2;\r\n\t\tconst radius = (size.value - lineWidth) / 2\r\n\r\n\r\n\r\n\t\tconst angleRadians1 = 45 * Math.PI / 180\r\n\t\tconst angleRadians2 = (45 - 90) * Math.PI / 180\r\n\r\n\t\tctx.reset()\r\n\t\tctx.lineWidth = lineWidth;\r\n\t\tctx.strokeStyle = state.color;\r\n\r\n\t\t// 绘制逐渐显示的圆\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\r\n\t\tctx.lineWidth = lineWidth;\r\n\t\tctx.strokeStyle = state.color;\r\n\t\tctx.stroke();\r\n\r\n\t\tconst [startX1, startY] = getPointOnCircle(centerX, centerY, lineLength / 2, 180 + 45)\r\n\t\tconst [startX2] = getPointOnCircle(centerX, centerY, lineLength / 2, 180 + 90 + 45)\r\n\r\n\t\tconst x2 = Math.sin(angleRadians1) * lineLength + startX1\r\n\t\tconst y2 = Math.cos(angleRadians1) * lineLength + startY\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(startX1, startY)\r\n\t\tctx.lineTo(x2, y2)\r\n\t\tctx.stroke();\r\n\r\n\t\tconst x3 = Math.sin(angleRadians2) * lineLength + startX2\r\n\t\tconst y3 = Math.cos(angleRadians2) * lineLength + startY\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(startX2, startY)\r\n\t\tctx.lineTo(x3, y3)\r\n\t\tctx.stroke();\r\n\r\n\r\n\t\tctx.update()\r\n\t}\r\n\r\n\tlet currentType : LoadingType | null = null\r\n\tconst useMode = () => {\r\n\t\tif (state.mode != 'raf') {\r\n\t\t\tconst keyframes = [{ transform: 'rotate(0)' }, { transform: 'rotate(360)' }]\r\n\t\t\tanimation = element.value!.animate(keyframes, {\r\n\t\t\t\tduration: 80000,\r\n\t\t\t\teasing: 'linear',\r\n\t\t\t\t// fill: 'forwards',\r\n\t\t\t\titerations: Infinity\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst startAnimation = (type : string) => {\r\n\t\tif (context.value == null || element.value == null) return\r\n\t\tanimation?.pause()\r\n\r\n\t\tif (currentType == type) {\r\n\t\t\tisPlaying = true\r\n\t\t\tanimation?.play()\r\n\t\t\tdrawFrame?.()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (type == 'circular') {\r\n\t\t\tcurrentType = 'circular'\r\n\t\t\tdrawCircular()\r\n\t\t\tuseMode()\r\n\r\n\t\t}\r\n\r\n\t\tif (type == 'spinner') {\r\n\t\t\tcurrentType = 'spinner'\r\n\t\t\tdrawSpinner()\r\n\t\t\tuseMode()\r\n\t\t}\r\n\r\n\t\tisPlaying = true\r\n\t\tdrawFrame?.()\r\n\t}\r\n\r\n\t// 监听元素尺寸\r\n\tconst resizeObserver : UniResizeObserver = new UniResizeObserver((_entries : UniResizeObserverEntry[]) => {\r\n\t\trequestAnimationFrame(()=> {\r\n\t\t\telement.value?.getBoundingClientRectAsync()?.then(rect => {\r\n\t\t\t\tif (rect.width == 0 || rect.height == 0) return\r\n\t\t\t\tcontext.value = element.value!.getDrawableContext() as DrawableContext;\r\n\t\t\t\tcanvasWidth.value = rect.width;\r\n\t\t\t\tcanvasHeight.value = rect.height;\r\n\t\t\t\tcanvasSize.value = Math.min(rect.width, rect.height);\r\n\t\t\t\t// startAnimation(state.type)\r\n\t\t\t})\r\n\t\t})\r\n\t});\r\n\r\n\twatchEffect(() => {\r\n\t\tif (element.value == null) return\r\n\t\tresizeObserver.observe(element.value!);\r\n\t})\r\n\r\n\twatchEffect(() => {\r\n\t\tif (context.value == null) return\r\n\t\tif (tick.value == 'play') {\r\n\t\t\tstartAnimation(state.type)\r\n\t\t}\r\n\t\tif (tick.value == 'failed') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tanimation?.pause()\r\n\t\t\tanimation?.cancel()\r\n\t\t\tdrwaFailed()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (tick.value == 'clear') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tanimation?.pause()\r\n\t\t\tanimation?.cancel()\r\n\t\t\tcontext.value?.reset();\r\n\t\t\tcontext.value?.update();\r\n\t\t\tisPlaying = false\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (tick.value == 'destroy') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tanimation?.pause()\r\n\t\t\tanimation?.cancel()\r\n\t\t\tcontext.value?.reset();\r\n\t\t\tcontext.value?.update();\r\n\t\t\tcontext.value = null\r\n\t\t\tanimation = null\r\n\t\t\tisPlaying = false\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (tick.value == 'pause') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tisPlaying = false\r\n\t\t\tanimation?.pause()\r\n\t\t\treturn\r\n\t\t}\r\n\t})\r\n\r\n\treturn state\r\n}","// @ts-nocheck\nexport type SizeEnum = 'small' | 'medium' | 'large';\nexport interface ButtonProps {\n    ariaLabel?: string;\n    lId?: string;\n    content?: string;\n    /**\n     * 是否为块级元素\n     */\n    block: boolean;\n    /**\n     * 禁用状态\n     */\n    disabled: boolean;\n    /**\n     * 是否为幽灵按钮（镂空按钮）\n     */\n    ghost: boolean;\n    /**\n     * 按钮内部图标，可完全自定义\n     */\n    icon?: string;\n    iconSize?: string;\n    /**\n     * 是否显示为加载状态\n     */\n    loading: boolean;\n    /**\n     * 透传加载组件全部属性\n     */\n    loadingProps?: UTSJSONObject; //LoadingProps;\n    /**\n     * 按钮形状：长方形、正方形、圆角长方形、圆形\n     */\n    shape: 'rectangle' | 'square' | 'round' | 'circle';\n    /**\n     * 组件尺寸\n     */\n    size: SizeEnum;\n    /**\n     * 右侧内容，可用于定义右侧图标\n     */\n    suffix?: string;\n    /**\n     * 组件风格，依次为品牌色、危险色、\n     */\n    type: 'default' | 'primary' | 'danger' | 'warning' | 'success' | 'info';\n    /**\n     * 按钮形式，基础、线框、文字、高亮、虚线\n     */\n    variant?: 'solid' | 'outline' | 'text' | 'light' | 'dashed';\n    radius?: string;\n    fontSize?: string;\n    textColor?: string;\n    color?: string;\n    lStyle?: string;\n    gap?: string;\n    formType?: string;\n    openType?: string;\n    /** 指定按钮按下去的样式类，按钮不为加载或禁用状态时有效。当 `hover-class=\"none\"` 时，没有点击态效果 */\n    hoverClass?: string;\n    /** 指定是否阻止本节点的祖先节点出现点击态 */\n    hoverStopPropagation: boolean;\n    /** 按住后多久出现点击态，单位毫秒 */\n    hoverStartTime: number;\n    /** 手指松开后点击态保留时间，单位毫秒 */\n    hoverStayTime: number;\n    /** 指定返回用户信息的语言，zh_CN 简体中文，zh_TW 繁体中文，en 英文。。<br />具体释义：<br />`en` 英文；<br />`zh_CN` 简体中文；<br />`zh_TW` 繁体中文。<br />[小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/component/button.html) */\n    lang: string;\n    /** 会话来源，open-type=\"contact\"时有效 */\n    sessionFrom: string;\n    /** 会话内消息卡片标题，open-type=\"contact\"时有效 */\n    sendMessageTitle: string;\n    /** 会话内消息卡片点击跳转小程序路径，open-type=\"contact\"时有效 */\n    sendMessagePath: string;\n    /** 会话内消息卡片图片，open-type=\"contact\"时有效 */\n    sendMessageImg: string;\n    /** 打开 APP 时，向 APP 传递的参数，open-type=launchApp时有效 */\n    appParameter: string;\n    /** 是否显示会话内消息卡片，设置此参数为 true，用户进入客服会话会在右下角显示\"可能要发送的小程序\"提示，用户点击后可以快速发送小程序消息，open-type=\"contact\"时有效 */\n    showMessageCard: boolean;\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport type SizeEnum = 'small' | 'medium' | 'large';\r\nexport interface ButtonProps {\r\n\tariaLabel?: string;\r\n\tlId ?: string;\r\n\tcontent ?: string\r\n\t/**\r\n\t * 是否为块级元素\r\n\t */\r\n\tblock : boolean;\r\n\t/**\r\n\t * 禁用状态\r\n\t */\r\n\tdisabled : boolean;\r\n\t/**\r\n\t * 是否为幽灵按钮（镂空按钮）\r\n\t */\r\n\tghost : boolean;\r\n\t/**\r\n\t * 按钮内部图标，可完全自定义\r\n\t */\r\n\ticon ?: string;\r\n\ticonSize ?: string;\r\n\r\n\t/**\r\n\t * 是否显示为加载状态\r\n\t */\r\n\tloading : boolean;\r\n\t/**\r\n\t * 透传加载组件全部属性\r\n\t */\r\n\tloadingProps ?: UTSJSONObject//LoadingProps;\r\n\t/**\r\n\t * 按钮形状：长方形、正方形、圆角长方形、圆形\r\n\t */\r\n\tshape : 'rectangle' | 'square' | 'round' | 'circle';\r\n\t/**\r\n\t * 组件尺寸\r\n\t */\r\n\tsize : SizeEnum;\r\n\t/**\r\n\t * 右侧内容，可用于定义右侧图标\r\n\t */\r\n\tsuffix ?: string;\r\n\t/**\r\n\t * 组件风格，依次为品牌色、危险色、\r\n\t */\r\n\ttype : 'default' | 'primary' | 'danger' | 'warning' | 'success' | 'info';\r\n\t/**\r\n\t * 按钮形式，基础、线框、文字、高亮、虚线\r\n\t */\r\n\tvariant ?: 'solid' | 'outline' | 'text' | 'light' | 'dashed';\r\n\tradius ?: string\r\n\tfontSize ?: string;\r\n\ttextColor ?: string;\r\n\tcolor ?: string;\r\n\tlStyle?: string;\r\n\tgap?: string;\r\n\tformType ?: string\r\n\topenType ?: string\r\n\r\n\t/** 指定按钮按下去的样式类，按钮不为加载或禁用状态时有效。当 `hover-class=\"none\"` 时，没有点击态效果 */\r\n\thoverClass ?: string\r\n\t/** 指定是否阻止本节点的祖先节点出现点击态 */\r\n\thoverStopPropagation : boolean\r\n\t/** 按住后多久出现点击态，单位毫秒 */\r\n\thoverStartTime : number\r\n\t/** 手指松开后点击态保留时间，单位毫秒 */\r\n\thoverStayTime : number\r\n\t/** 指定返回用户信息的语言，zh_CN 简体中文，zh_TW 繁体中文，en 英文。。<br />具体释义：<br />`en` 英文；<br />`zh_CN` 简体中文；<br />`zh_TW` 繁体中文。<br />[小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/component/button.html) */\r\n\tlang :string\r\n\t/** 会话来源，open-type=\"contact\"时有效 */\r\n\tsessionFrom : string,\r\n\t/** 会话内消息卡片标题，open-type=\"contact\"时有效 */\r\n\tsendMessageTitle : string,\r\n\t/** 会话内消息卡片点击跳转小程序路径，open-type=\"contact\"时有效 */\r\n\tsendMessagePath : string,\r\n\t/** 会话内消息卡片图片，open-type=\"contact\"时有效 */\r\n\tsendMessageImg : string,\r\n\t/** 打开 APP 时，向 APP 传递的参数，open-type=launchApp时有效 */\r\n\tappParameter : string,\r\n\t/** 是否显示会话内消息卡片，设置此参数为 true，用户进入客服会话会在右下角显示\"可能要发送的小程序\"提示，用户点击后可以快速发送小程序消息，open-type=\"contact\"时有效 */\r\n\tshowMessageCard : boolean,\r\n}","// @ts-nocheck\nexport interface SearchProps {\n    /**\n        * 自定义右侧操作按钮文字\n        */\n    action?: string;\n    /**\n        * 键盘弹起时，是否自动上推页面\n        */\n    adjustPosition: boolean;\n    /**\n         * 强制 input 处于同层状态，默认 focus 时 input 会切到非同层状态 (仅在 iOS 下生效)\n         */\n    alwaysEmbed: boolean;\n    /**\n         * 是否居中\n         */\n    center: boolean;\n    // inputAlign : 'left' | 'center' | 'right';\n    /**\n        * 是否启用清除控件\n        */\n    clearable: boolean;\n    /**\n         * 点击键盘右下角按钮时是否保持键盘不收起\n         */\n    confirmHold: boolean;\n    /**\n        * 设置键盘右下角按钮的文字，仅在type='text'时生效。<br />具体释义：<br />`send` 右下角按钮为“发送”；<br />`search` 右下角按钮为“搜索”；<br />`next` 右下角按钮为“下一个”；<br />`go` 右下角按钮为“前往”；<br />`done` 右下角按钮为“完成”。<br />[小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/component/input.html)\n        */\n    confirmType: 'send' | 'search' | 'next' | 'go' | 'done';\n    /**\n         * 指定 focus 时的光标位置\n         */\n    cursor?: number;\n    /**\n         * 搜索框聚焦时底部与键盘的距离\n         */\n    cursorSpacing: number;\n    /**\n        * 是否禁用\n        */\n    disabled: boolean;\n    /**\n        * 是否聚焦\n        */\n    focus: boolean;\n    /**\n         * focus时，点击页面的时候不收起键盘\n         */\n    holdKeyboard: boolean;\n    /**\n        * 左侧图标。\n        */\n    leftIcon: string;\n    /**\n         * 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用\n         */\n    maxcharacter?: number;\n    /**\n        * 用户最多可以输入的文本长度，一个中文等于一个计数长度。默认为 -1，不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用\n        */\n    maxlength: number;\n    /**\n        * 占位符\n        */\n    placeholder: string;\n    /**\n        * 指定 placeholder 的样式类\n        */\n    placeholderClass?: string;\n    /**\n         * 指定 placeholder 的样式\n         */\n    placeholderStyle?: string;\n    /**\n        * 光标结束位置，自动聚集时有效，需与 selection-start 搭配使用\n        */\n    selectionEnd: number;\n    /**\n         * 光标起始位置，自动聚集时有效，需与 selection-end 搭配使用\n         */\n    selectionStart: number;\n    /**\n         * 搜索框形状\n         */\n    shape: 'square' | 'round';\n    /**\n         * 拉起键盘的类型\n         */\n    type: 'text' | 'number' | 'idcard' | 'digit' | 'nickname';\n    /**\n        * 值\n        */\n    value?: string;\n    lStyle?: string;\n    cursorColor?: string;\n    padding?: string;\n    radius?: string;\n    height?: string;\n    bgColor?: string;\n    fontSize?: string;\n    textColor?: string;\n    iconColor?: string;\n    clearIconColor?: string;\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport interface SearchProps {\r\n\t/**\r\n\t\t* 自定义右侧操作按钮文字\r\n\t\t*/\r\n\taction ?: string;\r\n\t/**\r\n\t\t* 键盘弹起时，是否自动上推页面\r\n\t\t*/\r\n\tadjustPosition : boolean;\r\n\t/**\r\n\t\t * 强制 input 处于同层状态，默认 focus 时 input 会切到非同层状态 (仅在 iOS 下生效)\r\n\t\t */\r\n\talwaysEmbed : boolean;\r\n\t/**\r\n\t\t * 是否居中\r\n\t\t */\r\n\tcenter : boolean;\r\n\t// inputAlign : 'left' | 'center' | 'right';\r\n\t/**\r\n\t\t* 是否启用清除控件\r\n\t\t*/\r\n\tclearable : boolean;\r\n\t/**\r\n\t\t * 点击键盘右下角按钮时是否保持键盘不收起\r\n\t\t */\r\n\tconfirmHold : boolean;\r\n\t/**\r\n\t\t* 设置键盘右下角按钮的文字，仅在type='text'时生效。<br />具体释义：<br />`send` 右下角按钮为“发送”；<br />`search` 右下角按钮为“搜索”；<br />`next` 右下角按钮为“下一个”；<br />`go` 右下角按钮为“前往”；<br />`done` 右下角按钮为“完成”。<br />[小程序官方文档](https://developers.weixin.qq.com/miniprogram/dev/component/input.html)\r\n\t\t*/\r\n\tconfirmType : 'send' | 'search' | 'next' | 'go' | 'done';\r\n\t/**\r\n\t\t * 指定 focus 时的光标位置\r\n\t\t */\r\n\tcursor ?: number;\r\n\t/**\r\n\t\t * 搜索框聚焦时底部与键盘的距离\r\n\t\t */\r\n\tcursorSpacing : number;\r\n\t/**\r\n\t\t* 是否禁用\r\n\t\t*/\r\n\tdisabled : boolean;\r\n\t/**\r\n\t\t* 是否聚焦\r\n\t\t*/\r\n\tfocus : boolean;\r\n\t/**\r\n\t\t * focus时，点击页面的时候不收起键盘\r\n\t\t */\r\n\tholdKeyboard : boolean;\r\n\t/**\r\n\t\t* 左侧图标。\r\n\t\t*/\r\n\tleftIcon : string;\r\n\t/**\r\n\t\t * 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用\r\n\t\t */\r\n\tmaxcharacter ?: number;\r\n\t/**\r\n\t\t* 用户最多可以输入的文本长度，一个中文等于一个计数长度。默认为 -1，不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用\r\n\t\t*/\r\n\tmaxlength : number;\r\n\t/**\r\n\t\t* 占位符\r\n\t\t*/\r\n\tplaceholder : string;\r\n\t/**\r\n\t\t* 指定 placeholder 的样式类\r\n\t\t*/\r\n\tplaceholderClass ?: string;\r\n\t/**\r\n\t\t * 指定 placeholder 的样式\r\n\t\t */\r\n\tplaceholderStyle ?: string;\r\n\t/**\r\n\t\t* 光标结束位置，自动聚集时有效，需与 selection-start 搭配使用\r\n\t\t*/\r\n\tselectionEnd : number;\r\n\t/**\r\n\t\t * 光标起始位置，自动聚集时有效，需与 selection-end 搭配使用\r\n\t\t */\r\n\tselectionStart : number;\r\n\t/**\r\n\t\t * 搜索框形状\r\n\t\t */\r\n\tshape : 'square' | 'round';\r\n\t/**\r\n\t\t * 拉起键盘的类型\r\n\t\t */\r\n\ttype : 'text' | 'number' | 'idcard' | 'digit' | 'nickname';\r\n\t/**\r\n\t\t* 值\r\n\t\t*/\r\n\tvalue ?: string;\r\n\tlStyle?: string;\r\n\tcursorColor?: string;\r\n\tpadding?: string;\r\n\tradius?: string;\r\n\theight?: string;\r\n\tbgColor?: string;\r\n\tfontSize?: string;\r\n\ttextColor?: string;\r\n\ticonColor?: string;\r\n\tclearIconColor?: string\r\n}","// @ts-nocheck\n/**\n * 计算字符串字符的长度并可以截取字符串。\n * @param char 传入字符串（maxcharacter条件下，一个汉字表示两个字符）\n * @param max 规定最大字符串长度\n * @returns 当没有传入maxCharacter/maxLength 时返回字符串字符长度，当传入maxCharacter/maxLength时返回截取之后的字符串和长度。\n */\nexport type CharacterLengthResult = {\n    length: number;\n    characters: string;\n};\ntype ChartType = any;\nexport function characterLimit(type: string, char: ChartType, max: number): CharacterLengthResult {\n    const str = `${char}`;\n    if (str.length == 0) {\n        return {\n            length: 0,\n            characters: '',\n        } as CharacterLengthResult;\n    }\n    if (type == 'maxcharacter') {\n        let len = 0;\n        for (let i = 0; i < str.length; i += 1) {\n            let currentStringLength: number; // = 0;\n            const code = str.charCodeAt(i)!;\n            if (code > 127 || code == 94) {\n                currentStringLength = 2;\n            }\n            else {\n                currentStringLength = 1;\n            }\n            if (len + currentStringLength > max) {\n                return {\n                    length: len,\n                    characters: str.slice(0, i),\n                } as CharacterLengthResult;\n            }\n            len += currentStringLength;\n        }\n        return {\n            length: len,\n            characters: str,\n        } as CharacterLengthResult;\n    }\n    else if (type == 'maxlength') {\n        const length = str.length > max ? max : str.length;\n        return {\n            length: length,\n            characters: str.slice(0, length),\n        } as CharacterLengthResult;\n    }\n    return {\n        length: str.length,\n        characters: str,\n    } as CharacterLengthResult;\n}\n;\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\n/**\r\n * 计算字符串字符的长度并可以截取字符串。\r\n * @param char 传入字符串（maxcharacter条件下，一个汉字表示两个字符）\r\n * @param max 规定最大字符串长度\r\n * @returns 当没有传入maxCharacter/maxLength 时返回字符串字符长度，当传入maxCharacter/maxLength时返回截取之后的字符串和长度。\r\n */\r\nexport type CharacterLengthResult = {\r\n\tlength : number;\r\n\tcharacters : string;\r\n}\r\n\r\ntype ChartType = any\r\n\r\n\r\n\r\n\r\n\r\nexport function characterLimit(type : string, char : ChartType, max : number) : CharacterLengthResult {\r\n\tconst str = `${char}`;\r\n\r\n\tif (str.length == 0) {\r\n\t\treturn {\r\n\t\t\tlength: 0,\r\n\t\t\tcharacters: '',\r\n\t\t} as CharacterLengthResult\r\n\t}\r\n\r\n\tif (type == 'maxcharacter') {\r\n\t\tlet len = 0;\r\n\t\tfor (let i = 0; i < str.length; i += 1) {\r\n\t\t\tlet currentStringLength : number// = 0;\r\n\t\t\tconst code = str.charCodeAt(i)!\r\n\t\t\tif (code > 127 || code == 94) {\r\n\t\t\t\tcurrentStringLength = 2;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentStringLength = 1;\r\n\t\t\t}\r\n\t\t\tif (len + currentStringLength > max) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlength: len,\r\n\t\t\t\t\tcharacters: str.slice(0, i),\r\n\t\t\t\t} as CharacterLengthResult\r\n\t\t\t}\r\n\t\t\tlen += currentStringLength;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tlength: len,\r\n\t\t\tcharacters: str,\r\n\t\t} as CharacterLengthResult\r\n\t} else if (type == 'maxlength') {\r\n\t\tconst length = str.length > max ? max : str.length;\r\n\t\treturn {\r\n\t\t\tlength: length,\r\n\t\t\tcharacters: str.slice(0, length),\r\n\t\t} as CharacterLengthResult\r\n\t}\r\n\r\n\treturn {\r\n\t\tlength: str.length,\r\n\t\tcharacters: str,\r\n\t} as CharacterLengthResult\r\n};","// @ts-nocheck\nexport interface TabPanelProps {\n    /**\n     * 透传至 Badge 组件\n     */\n    badge?: any;\n    offset?: any[];\n    dot?: boolean;\n    /**\n     * 选项卡内容隐藏时是否销毁\n     */\n    destroyOnHide?: boolean;\n    /**\n     * 是否禁用当前选项卡\n     */\n    disabled?: boolean;\n    /**\n     * 选项卡名称，可自定义选项卡导航内容\n     */\n    label?: string;\n    /**\n     * 是否启用选项卡懒加载\n     */\n    lazy?: boolean;\n    /**\n     * 选项卡的值，唯一标识\n     */\n    value?: number;\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport interface TabPanelProps {\n  /**\n   * 透传至 Badge 组件\n   */\r\n  badge?: any;\r\n  offset?: any[];\r\n  dot?: boolean;\n  /**\n   * 选项卡内容隐藏时是否销毁\n   */\n  destroyOnHide?: boolean;\n  /**\n   * 是否禁用当前选项卡\n   */\n  disabled?: boolean;\n  /**\n   * 选项卡名称，可自定义选项卡导航内容\n   */\n  label?: string;\n  /**\n   * 是否启用选项卡懒加载\n   */\n  lazy?: boolean;\n  /**\n   * 选项卡的值，唯一标识\n   */\n  value?: number;\n}\r\n\r\n","// @ts-nocheck\nexport type TabPanel = {\n    /**\n     * 透传至 Badge 组件\n     */\n    badge?: any;\n    dot?: boolean;\n    offset?: any[];\n    /**\n     * 选项卡内容隐藏时是否销毁\n     */\n    destroyOnHide?: boolean;\n    /**\n     * 是否禁用当前选项卡\n     */\n    disabled: boolean;\n    /**\n     * 选项卡名称，可自定义选项卡导航内容\n     */\n    label?: string;\n    /**\n     * 是否启用选项卡懒加载\n     */\n    lazy?: boolean;\n    /**\n     * 选项卡的值，唯一标识\n     */\n    value?: number;\n    ccs?: UTSJSONObject;\n    node: UTSJSONObject;\n};\nexport interface TabsProps {\n    /**\n     * 选项卡列表\n     */\n    list?: UTSJSONObject[];\n    ellipsis: boolean;\n    /**\n     * 动画效果设置\n     */\n    animated: boolean;\n    duration: number;\n    /**\n     * 是否展示底部激活线条\n     */\n    showLine: boolean;\n    /**\n     * 组件尺寸\n     */\n    size: 'medium' | 'large';\n    /**\n     * 选项卡头部空间是否均分\n     */\n    spaceEvenly: boolean;\n    /**\n     * 是否可以滑动切换\n     */\n    swipeable: boolean;\n    /**\n     * 激活的选项卡值\n     */\n    value?: number;\n    color?: string;\n    activeColor?: string;\n    lineColor?: string;\n    lineWidth?: string;\n    lineHeight?: string;\n    bgColor?: string;\n    fontSize?: string;\n    padding?: string;\n    split: boolean;\n    visible: boolean;\n    /**\n     * 和swiper联动 暂时未实现\n     */\n    swiperProgress: number;\n    syncSwiper: boolean;\n    lStyle?: string | UTSJSONObject;\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport type TabPanel = {\r\n\t/**\r\n\t * 透传至 Badge 组件\r\n\t */\r\n\tbadge ?: any;\r\n\tdot ?: boolean;\r\n\toffset ?: any[];\r\n\t/**\r\n\t * 选项卡内容隐藏时是否销毁\r\n\t */\r\n\tdestroyOnHide ?: boolean;\r\n\t/**\r\n\t * 是否禁用当前选项卡\r\n\t */\r\n\tdisabled : boolean;\r\n\t/**\r\n\t * 选项卡名称，可自定义选项卡导航内容\r\n\t */\r\n\tlabel ?: string;\r\n\t/**\r\n\t * 是否启用选项卡懒加载\r\n\t */\r\n\tlazy ?: boolean;\r\n\t/**\r\n\t * 选项卡的值，唯一标识\r\n\t */\r\n\tvalue ?: number;\r\n\tccs?: UTSJSONObject\r\n\t\r\n\tnode: UTSJSONObject\r\n}\r\n\r\n\r\nexport interface TabsProps {\r\n\t/**\r\n\t * 选项卡列表\r\n\t */\r\n\tlist ?: UTSJSONObject[];\r\n\tellipsis : boolean;\r\n\t/**\r\n\t * 动画效果设置\r\n\t */\r\n\tanimated : boolean;\r\n\r\n\tduration : number\r\n\t\r\n\t/**\r\n\t * 是否展示底部激活线条\r\n\t */\r\n\tshowLine : boolean;\r\n\t/**\r\n\t * 组件尺寸\r\n\t */\r\n\tsize : 'medium' | 'large';\r\n\t/**\r\n\t * 选项卡头部空间是否均分\r\n\t */\r\n\tspaceEvenly : boolean;\r\n\t/**\r\n\t * 是否可以滑动切换\r\n\t */\r\n\tswipeable : boolean;\r\n\t/**\r\n\t * 激活的选项卡值\r\n\t */\r\n\tvalue?: number;\r\n\r\n\tcolor?: string;\r\n\tactiveColor ?: string;\r\n\tlineColor ?: string;\r\n\tlineWidth ?: string;\r\n\tlineHeight ?: string;\r\n\tbgColor ?: string;\r\n\tfontSize ?: string;\r\n\tpadding ?: string;\r\n\tsplit: boolean;\r\n\tvisible: boolean;\r\n\t/**\r\n\t * 和swiper联动 暂时未实现\r\n\t */\r\n\tswiperProgress : number\r\n\tsyncSwiper: boolean\r\n\t\r\n\tlStyle?:string|UTSJSONObject\r\n}","import { TabPanelProps } from './type';\nimport { TabPanel } from '../l-tabs/type';\nconst __sfc__ = defineComponent({\n    __name: 'l-tab-panel',\n    __props: TabPanelProps,\n    props: {\n        badge: { type: Object, required: false },\n        offset: { type: Array as PropType<any[]>, required: false },\n        dot: { type: Boolean, required: false },\n        destroyOnHide: { type: Boolean, required: false },\n        disabled: { type: Boolean, required: false },\n        label: { type: String, required: false },\n        lazy: { type: Boolean, required: false },\n        value: { type: Number, required: false }\n    },\n    setup(__props, { expose: __expose }: SetupContext): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        /**\n         * TabPanel 标签页面板组件\n         * @description 用于构建Tabs组件的单个内容面板，必须作为Tabs的子组件使用\n         * <br>插件类型：LTabPanelComponentPublicInstance\n         * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-tabs\n         *\n         * @property {any} badge 徽标配置\n         * @property {number[]} offset 徽标位置偏移量[x,y]\n         * @property {boolean} dot 是否显示圆点徽标（默认：false）\n         * @property {boolean} destroyOnHide 内容隐藏时销毁DOM（默认：false）\n         * @property {boolean} disabled 禁用当前选项卡（默认：false）\n         * @property {string} label 选项卡标题内容\n         * @property {boolean} lazy 启用懒加载（默认：false）\n         * @property {number} value 选项卡唯一标识\n         */\n        const props = __props;\n        const children = inject<LTabPanelComponentPublicInstance[] | null>('LimeTabs', null) as Ref<LTabPanelComponentPublicInstance[]> | null;\n        const instance = getCurrentInstance()!.proxy!;\n        onMounted(() => {\n            if (children == null)\n                return;\n            children.value.push(instance as LTabPanelComponentPublicInstance);\n        });\n        // 安卓端数组属性存在BUG 死循环\n        const innderOffset = ref<any[]>([]);\n        watch((): any[] | null => props.offset, (n: any[] | null) => {\n            if (innderOffset.value.join('') == n?.join(''))\n                return;\n            innderOffset.value = n ?? [];\n        }, { immediate: true });\n        __expose({\n            innderOffset\n        });\n        onUnmounted(() => {\n            if (children == null)\n                return;\n            children.value = children.value.filter((it): boolean => it != (instance));\n        });\n        return (): any | null => {\n            return createElementVNode(\"view\", utsMapOf({\n                class: \"l-tab__panel\",\n                \"aria-role\": \"tabpanel\"\n            }), [\n                renderSlot(_ctx.$slots, \"default\")\n            ]);\n        };\n    }\n});\nexport default __sfc__;\nexport type LTabPanelComponentPublicInstance = InstanceType<typeof __sfc__>;\nconst GenUniModulesLimeTabsComponentsLTabPanelLTabPanelStyles = [utsMapOf([[\"l-tab__panel\", padStyleMapOf(utsMapOf([[\"width\", \"100%\"], [\"flex\", 1], [\"flexShrink\", 0], [\"boxSizing\", \"border-box\"]]))]])];\n//# sourceMappingURL=l-tab-panel.uvue.map","// @ts-nocheck\nimport { isNumber } from '../isNumber';\nimport { isString } from '../isString';\n// 函数重载，定义多个函数签名\n// function toBoolean(value : any) : boolean;\n// function toBoolean(value : string) : boolean;\n// function toBoolean(value : number) : boolean;\n// function toBoolean(value : boolean) : boolean;\nfunction toBoolean(value: any | null): boolean {\n    // 根据输入值的类型，返回相应的布尔值\n    // if (isNumber(value)) {\n    // \treturn (value as number) != 0;\n    // }\n    // if (isString(value)) {\n    // \treturn `${value}`.length > 0;\n    // }\n    // if (typeof value == 'boolean') {\n    // \treturn value as boolean;\n    // }\n    return value != null;\n}\nexport { toBoolean };\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\nimport { isNumber } from '../isNumber'\r\nimport { isString } from '../isString'\r\n// 函数重载，定义多个函数签名\r\n// function toBoolean(value : any) : boolean;\r\n// function toBoolean(value : string) : boolean;\r\n// function toBoolean(value : number) : boolean;\r\n// function toBoolean(value : boolean) : boolean;\r\n\r\n\r\nfunction toBoolean(value : any | null) : boolean {\r\n\t// 根据输入值的类型，返回相应的布尔值\r\n\t// if (isNumber(value)) {\r\n\t// \treturn (value as number) != 0;\r\n\t// }\r\n\t// if (isString(value)) {\r\n\t// \treturn `${value}`.length > 0;\r\n\t// }\r\n\t// if (typeof value == 'boolean') {\r\n\t// \treturn value as boolean;\r\n\t// }\r\n\r\n\r\n\r\n\r\n\treturn value != null\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n\ttoBoolean\r\n}","export function getOffsetWithMinusString(val: string): string {\n    return val.startsWith('-') ? val.replace('-', '') : `-${val}`;\n}\n;\n//# sourceMappingURL=utils.uts.map","export function getOffsetWithMinusString(val : string):string {\r\n\treturn val.startsWith('-') ? val.replace('-', '') : `-${val}`\r\n};","// @ts-nocheck\nexport interface BadgeProps {\n    /**\n     * 颜色\n     * @default ''\n     */\n    color?: string;\n    /**\n     * 徽标内容\n     */\n    content?: any;\n    /**\n     * 是否为红点\n     */\n    dot: boolean;\n    /**\n     * 封顶的数字值\n     * @default 99\n     */\n    max: number;\n    /**\n     * 设置状态点的位置偏移，示例：[-10, 20] 或 ['10rpx', '8rpx']\n     */\n    offset: any[];\n    position: string;\n    /**\n     * 形状 未实现\n     * @default circle\n     */\n    shape?: 'circle' | 'square' | 'bubble' | 'ribbon';\n    /**\n     * 当数值为 0 时，是否展示徽标\n     */\n    showZero: boolean;\n    /**\n     * 尺寸 未实现\n     * @default medium\n     */\n    size?: 'medium' | 'large';\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\nexport interface BadgeProps {\n  /**\n   * 颜色\n   * @default ''\n   */\n  color?: string;\n  /**\n   * 徽标内容\n   */\n\n\n\n\n  content?: any;\n\n  /**\n   * 是否为红点\n   */\n  dot: boolean;\n  /**\n   * 封顶的数字值\n   * @default 99\n   */\n  max: number;\n  /**\n   * 设置状态点的位置偏移，示例：[-10, 20] 或 ['10rpx', '8rpx']\n   */\n\n\n\n\n  offset: any[];\n\n  position: string;\n  /**\n   * 形状 未实现\n   * @default circle\n   */\n  shape?: 'circle' | 'square' | 'bubble' | 'ribbon';\n  /**\n   * 当数值为 0 时，是否展示徽标\n   */\n  showZero: boolean;\n  /**\n   * 尺寸 未实现\n   * @default medium\n   */\n  size?: 'medium' | 'large';\n}\n","// @ts-nocheck\n/**\n * 计算偏移\n * @param {number} containerWidth 容器宽度\n * @param {number} targetLeft 当前元素left值\n * @param {number} targetWidth 当前元素宽度\n * @param {number} offset 上一次 scroll-view left值\n * @return\n */\nexport function calcScrollOffset(containerWidth: number, targetLeft: number, targetWidth: number, offset: number): number {\n    return offset + targetLeft - (1 / 2) * containerWidth + targetWidth / 2;\n}\n/**\n * 根据提供的移动距离和基数进行缓动处理。\n * 如果移动距离的绝对值超过最大阈值，则应用缓动效果。\n *\n * @param {number} moveX - 水平移动的距离。\n * @param {number} base - 应用于缓动效果的基数。\n * @returns {number} 缓动处理后的移动距离。\n */\nexport function ease(moveX: number, base: number): number {\n    const absDistance = Math.abs(moveX);\n    const max = 50;\n    if (absDistance > max) {\n        return (max + (absDistance - max) * 0.2) * base;\n    }\n    return moveX;\n}\n;\n//# sourceMappingURL=utils.uts.map","// @ts-nocheck\r\n/**\r\n * 计算偏移\r\n * @param {number} containerWidth 容器宽度\r\n * @param {number} targetLeft 当前元素left值\r\n * @param {number} targetWidth 当前元素宽度\r\n * @param {number} offset 上一次 scroll-view left值\r\n * @return \r\n */\r\nexport function calcScrollOffset(containerWidth : number, targetLeft : number, targetWidth : number, offset : number) : number {\r\n\treturn offset + targetLeft - (1 / 2) * containerWidth + targetWidth / 2;\r\n}\r\n\r\n/**\n * 根据提供的移动距离和基数进行缓动处理。\n * 如果移动距离的绝对值超过最大阈值，则应用缓动效果。\n *\n * @param {number} moveX - 水平移动的距离。\n * @param {number} base - 应用于缓动效果的基数。\n * @returns {number} 缓动处理后的移动距离。\n */\r\nexport function ease(moveX : number, base : number) : number{\r\n\tconst absDistance = Math.abs(moveX);\r\n\tconst max = 50\r\n\tif (absDistance > max) {\r\n\t\treturn (max + (absDistance - max) * 0.2) * base;\r\n\t}\r\n\treturn moveX;\r\n};","// @ts-nocheck\n/**\n * 将一个值限制在指定的范围内\n * @param val 要限制的值\n * @param min 最小值\n * @param max 最大值\n * @returns 限制后的值\n */\nexport function clamp(val: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, val));\n}\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:14',clamp(5 ,0, 10)); // 输出: 5（在范围内，不做更改）\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:15',clamp(-5 ,0, 10)); // 输出: 0（小于最小值，被限制为最小值）\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:16',clamp(15 ,0, 10)); // 输出: 10（大于最大值，被限制为最大值）\n//# sourceMappingURL=index.uts.map","// @ts-nocheck\r\n/**\r\n * 将一个值限制在指定的范围内\r\n * @param val 要限制的值\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @returns 限制后的值\r\n */\r\nexport function clamp(val: number, min: number, max: number): number {\r\n  return Math.max(min, Math.min(max, val));\r\n}\r\n\r\n\r\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:14',clamp(5 ,0, 10)); // 输出: 5（在范围内，不做更改）\r\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:15',clamp(-5 ,0, 10)); // 输出: 0（小于最小值，被限制为最小值）\r\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:16',clamp(15 ,0, 10)); // 输出: 10（大于最大值，被限制为最大值）","// @ts-nocheck\ntype Direction = '' | 'vertical' | 'horizontal';\nfunction getDirection(x: number, y: number): Direction {\n    if (x > y) {\n        return 'horizontal';\n    }\n    if (y > x) {\n        return 'vertical';\n    }\n    return '';\n}\ntype TouchEventHandler = (event: UniTouchEvent) => void;\ntype BooleanFunction = () => boolean;\ntype UseTouchResult = {\n    start: TouchEventHandler;\n    move: TouchEventHandler;\n    startX: Ref<number>;\n    startY: Ref<number>;\n    deltaX: Ref<number>;\n    deltaY: Ref<number>;\n    offsetX: Ref<number>;\n    offsetY: Ref<number>;\n    direction: Ref<Direction>;\n    isVertical: BooleanFunction;\n    isHorizontal: BooleanFunction;\n    isTap: Ref<Boolean>;\n};\nexport function useTouch(): UseTouchResult {\n    const startX = ref<number>(0);\n    const startY = ref<number>(0);\n    const deltaX = ref<number>(0);\n    const deltaY = ref<number>(0);\n    const offsetX = ref<number>(0);\n    const offsetY = ref<number>(0);\n    const direction = ref<Direction>('');\n    const isTap = ref(true);\n    const isVertical = (): boolean => direction.value === 'vertical';\n    const isHorizontal = (): boolean => direction.value === 'horizontal';\n    const reset = () => {\n        deltaX.value = 0;\n        deltaY.value = 0;\n        offsetX.value = 0;\n        offsetY.value = 0;\n        direction.value = '';\n        isTap.value = true;\n    };\n    const start = (event: UniTouchEvent) => {\n        reset();\n        startX.value = event.touches[0].clientX;\n        startY.value = event.touches[0].clientY;\n    };\n    const move = (event: UniTouchEvent) => {\n        const touch = event.touches[0];\n        // safari back will set clientX to negative number\n        deltaX.value = (touch.clientX < 0 ? 0 : touch.clientX) - startX.value;\n        deltaY.value = touch.clientY - startY.value;\n        offsetX.value = Math.abs(deltaX.value);\n        offsetY.value = Math.abs(deltaY.value);\n        // lock direction when distance is greater than a certain value\n        const LOCK_DIRECTION_DISTANCE = 10;\n        const TAP_OFFSET = 5;\n        if (direction.value == '' ||\n            (offsetX.value < LOCK_DIRECTION_DISTANCE &&\n                offsetY.value < LOCK_DIRECTION_DISTANCE)) {\n            direction.value = getDirection(offsetX.value, offsetY.value);\n        }\n        if (isTap.value &&\n            (offsetX.value > TAP_OFFSET || offsetY.value > TAP_OFFSET)) {\n            isTap.value = false;\n        }\n    };\n    return {\n        start,\n        move,\n        startX,\n        startY,\n        deltaX,\n        deltaY,\n        offsetX,\n        offsetY,\n        direction,\n        isVertical,\n        isHorizontal,\n        isTap,\n    } as UseTouchResult;\n}\n//# sourceMappingURL=touch.uts.map","// @ts-nocheck\n\n\n\n\n\ntype Direction = '' | 'vertical' | 'horizontal';\n\nfunction getDirection(x : number, y : number) : Direction {\n\tif (x > y) {\n\t\treturn 'horizontal';\n\t}\n\tif (y > x) {\n\t\treturn 'vertical';\n\t}\n\treturn '';\n}\n\ntype TouchEventHandler = (event : UniTouchEvent) => void\ntype BooleanFunction = () => boolean;\ntype UseTouchResult = {\n\tstart : TouchEventHandler,\n\tmove : TouchEventHandler,\n\tstartX : Ref<number>,\n\tstartY : Ref<number>,\n\tdeltaX : Ref<number>,\n\tdeltaY : Ref<number>,\n\toffsetX : Ref<number>,\n\toffsetY : Ref<number>,\n\tdirection : Ref<Direction>,\n\tisVertical : BooleanFunction,\n\tisHorizontal : BooleanFunction,\n\tisTap : Ref<Boolean>,\n}\nexport function useTouch() : UseTouchResult {\n\tconst startX = ref<number>(0);\n\tconst startY = ref<number>(0);\n\tconst deltaX = ref<number>(0);\n\tconst deltaY = ref<number>(0);\n\tconst offsetX = ref<number>(0);\n\tconst offsetY = ref<number>(0);\n\tconst direction = ref<Direction>('');\n\tconst isTap = ref(true);\n\n\tconst isVertical = () : boolean => direction.value === 'vertical';\n\tconst isHorizontal = () : boolean => direction.value === 'horizontal';\n\n\tconst reset = () => {\n\t\tdeltaX.value = 0;\n\t\tdeltaY.value = 0;\n\t\toffsetX.value = 0;\n\t\toffsetY.value = 0;\n\t\tdirection.value = '';\n\t\tisTap.value = true;\n\t};\n\n\tconst start = (event : UniTouchEvent) => {\n\t\treset();\n\t\tstartX.value = event.touches[0].clientX;\n\t\tstartY.value = event.touches[0].clientY;\n\t}\n\tconst move = (event : UniTouchEvent) => {\n\t\tconst touch = event.touches[0];\n\t\t// safari back will set clientX to negative number\n\t\tdeltaX.value = (touch.clientX < 0 ? 0 : touch.clientX) - startX.value;\n\t\tdeltaY.value = touch.clientY - startY.value;\n\t\toffsetX.value = Math.abs(deltaX.value);\n\t\toffsetY.value = Math.abs(deltaY.value);\n\n\t\t// lock direction when distance is greater than a certain value\n\t\tconst LOCK_DIRECTION_DISTANCE = 10;\n\t\tconst TAP_OFFSET = 5;\n\t\tif (\n\t\t\tdirection.value == '' ||\n\t\t\t(offsetX.value < LOCK_DIRECTION_DISTANCE &&\n\t\t\t\toffsetY.value < LOCK_DIRECTION_DISTANCE)\n\t\t) {\n\t\t\tdirection.value = getDirection(offsetX.value, offsetY.value);\n\t\t}\n\n\t\tif (\n\t\t\tisTap.value &&\n\t\t\t(offsetX.value > TAP_OFFSET || offsetY.value > TAP_OFFSET)\n\t\t) {\n\t\t\tisTap.value = false;\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tmove,\n\t\tstartX,\n\t\tstartY,\n\t\tdeltaX,\n\t\tdeltaY,\n\t\toffsetX,\n\t\toffsetY,\n\t\tdirection,\n\t\tisVertical,\n\t\tisHorizontal,\n\t\tisTap,\n\t} as UseTouchResult\n}","import _easycom_l_badge from '@/uni_modules/lime-badge/components/l-badge/l-badge.uvue';\nimport { TabsProps, TabPanel } from './type';\nimport { TabPanelProps } from '../l-tab-panel/type';\nimport { calcScrollOffset, ease } from './utils';\nimport { clamp } from '@/uni_modules/lime-shared/clamp';\n// import { getRect } from '@/uni_modules/lime-shared/getRect';\nimport { getRect, getAllRect } from '@/uni_modules/lime-shared/getRect';\nimport { useTouch } from './touch';\nconst __sfc__ = defineComponent({\n    __name: 'l-tabs',\n    slots: Object as SlotsType<{\n        label: {\n            item: TabPanel;\n            active: boolean;\n            disabled: boolean;\n        };\n        default: {};\n        left: {};\n        right: {};\n    }>,\n    __props: TabsProps,\n    props: /*#__PURE__*/ mergeModels({\n        list: { type: Array as PropType<UTSJSONObject[]>, required: false },\n        ellipsis: { type: Boolean, required: true, default: false },\n        animated: { type: Boolean, required: true, default: false },\n        duration: { type: Number, required: true, default: 0.3 },\n        showLine: { type: Boolean, required: true, default: true },\n        size: { type: String, required: true, default: 'medium' },\n        spaceEvenly: { type: Boolean, required: true, default: true },\n        swipeable: { type: Boolean, required: true, default: false },\n        value: { type: Number, required: false },\n        color: { type: String, required: false },\n        activeColor: { type: String, required: false },\n        lineColor: { type: String, required: false },\n        lineWidth: { type: String, required: false },\n        lineHeight: { type: String, required: false },\n        bgColor: { type: String, required: false },\n        fontSize: { type: String, required: false },\n        padding: { type: String, required: false },\n        split: { type: Boolean, required: true, default: true },\n        visible: { type: Boolean, required: true, default: false },\n        swiperProgress: { type: Number, required: true, default: 0 },\n        syncSwiper: { type: Boolean, required: true, default: false },\n        lStyle: { type: [String, UTSJSONObject], required: false }\n    }, {\n        \"modelValue\": { type: Number },\n    }),\n    emits: /*#__PURE__*/ mergeModels(['change', 'click'], [\"update:modelValue\"]),\n    setup(__props): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        /**\n         * Tabs 标签页组件\n         * @description 用于内容分类展示和切换，支持多种样式和交互效果\n         * <br>插件类型：LTabsComponentPublicInstance\n         * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-tabs\n         *\n         * @property {TabPanel[]} list 选项卡配置数组\n         * @property {boolean} ellipsis 是否省略超长文本（默认：true）\n         * @property {boolean} animated 是否启用切换动画（默认：false）\n         * @property {number} duration 动画时长（ms，默认：300）\n         * @property {boolean} showLine 显示底部激活线条（默认：true）\n         * @property {'medium' | 'large'} size 组件尺寸（默认：\"medium\"）\n         * @value medium\n         * @value large\n         * @property {boolean} spaceEvenly 均分选项卡宽度（默认：false）\n         * @property {boolean} swipeable 支持滑动切换（默认：true）\n         * @property {number} value 当前激活选项卡索引（支持v-model）\n         * @property {string} color 默认文字颜色（默认：\"#333\"）\n         * @property {string} activeColor 激活状态颜色（默认：主题色）\n         * @property {string} lineColor 激活线条颜色（默认：跟随activeColor）\n         * @property {string} lineWidth 激活线条宽度（默认：\"20px\"）\n         * @property {string} lineHeight 激活线条高度（默认：\"3px\"）\n         * @property {string} bgColor 背景颜色\n         * @property {string} fontSize 文字大小（支持CSS单位）\n         * @property {string} padding 内边距（支持CSS简写）\n         * @property {boolean} split 显示分隔线（默认：false）\n         * @property {boolean} visible 是否显示组件（默认：true）\n         * @property {number} swiperProgress 与swiper联动，传入[-1, 1] 范围的滚动进度\n         * @property {boolean} syncSwiper 是否启用与swiper的同步联动\n         * @event {Function} change 选项卡切换时触发（返回激活索引）\n         * @event {Function} click 点击时触发（返回激活索引）\n         */\n        function emits(event: string, ...do_not_transform_spread: Array<any | null>) {\n            __ins.emit(event, ...do_not_transform_spread);\n        }\n        // const slots = defineSlots<{\n        // \tlabel : {\n        // \t\titem : TabPanel,\n        // \t\tactive : boolean,\n        // \t\tdisabled : boolean,\n        // \t}\n        // }>()\n        const slots = useSlots();\n        const props = __props;\n        const children = ref<LTabPanelComponentPublicInstance[]>([]);\n        const scrollLeft = ref(0);\n        const lastLeft = ref(0);\n        const innerStyle = { __$originalPosition: new UTSSourceMapPosition(\"innerStyle\", \"uni_modules/lime-tabs/components/l-tabs/l-tabs.uvue\", 159, 8),\n        } as UTSJSONObject;\n        const modelValue = useModel<Number>(__ins.props, \"modelValue\");\n        const currentValue = computed({\n            set(value: number) {\n                modelValue.value = value;\n                emits('change', value);\n            },\n            get(): number {\n                return props.value ?? modelValue.value;\n            }\n        } as WritableComputedOptions<number>);\n        const styles = computed((): Map<string, any> => {\n            const style = new Map<string, any>();\n            if (props.bgColor != null) {\n                style.set('background', props.bgColor!);\n            }\n            return style;\n        });\n        const trackStyle = computed((): Map<string, any> => {\n            const style = new Map<string, any>([]);\n            if (props.lineColor != null) {\n                style.set('background', props.lineColor!);\n            }\n            if (props.lineWidth != null) {\n                style.set('width', props.lineWidth!);\n            }\n            if (props.lineHeight != null) {\n                style.set('height', props.lineHeight!);\n            }\n            return style;\n        });\n        const itemStyle = computed((): Map<string, any> => {\n            const style = new Map<string, any>();\n            if (!['medium', 'large'].includes(props.size)) {\n                style.set('height', props.size);\n            }\n            if (props.padding != null) {\n                style.set('padding', props.padding!);\n            }\n            return style;\n        });\n        const textStyles = computed((): Map<string, any> => {\n            const style = new Map<string, any>();\n            if (props.fontSize != null) {\n                style.set('font-size', props.fontSize!);\n            }\n            return style;\n        });\n        const tabs = computed((): TabPanel[] => {\n            if (props.list != null && props.list!.length > 0) {\n                return props.list!.map((item): TabPanel => {\n                    return {\n                        badge: item.get('badge'),\n                        dot: item.getBoolean('dot') ?? false,\n                        disabled: item.getBoolean('disabled') ?? false,\n                        label: item.getString('label'),\n                        offset: item.getArray('offset') as any[] | null,\n                        value: item.getNumber('value'),\n                        node: item\n                    } as TabPanel;\n                });\n            }\n            return children.value.map((item): TabPanel => {\n                // 安卓端数组属性存在BUG 死循环\n                const offset = item.innderOffset;\n                return {\n                    badge: item.badge,\n                    dot: item.dot ?? false,\n                    disabled: item.disabled ?? false,\n                    label: item.label,\n                    offset: offset,\n                    value: item.value,\n                    node: {\n                        badge: item.badge,\n                        dot: item.dot ?? false,\n                        disabled: item.disabled ?? false,\n                        label: item.label,\n                        offset: offset,\n                        value: item.value,\n                    }\n                } as TabPanel;\n            });\n        });\n        const currentIndex = computed((): number => {\n            const index = tabs.value.findIndex((child, index): boolean => (child.value ?? index) == currentValue.value);\n            return index > -1 ? index : 0;\n        });\n        const scrollRef = ref<UniScrollViewElement | null>(null);\n        const trackRef = ref<UniElement | null>(null);\n        const navRef = ref<UniElement | null>(null);\n        const innerRef = ref<UniElement | null>(null);\n        const tabRects = ref<DOMRect[]>([]); // 存储每个tab的尺寸位置\n        const containerWidth = ref(0); // 容器宽度\n        const trackLineWidth = ref(0);\n        const isInteracting = ref(false); // 是否正在交互\n        let timer = 0;\n        const measureTabs = (): Promise<void> => {\n            return new Promise((resolve, _reject) => {\n                // nextTick(() => {\n                if (tabRects.value.length > 0 && tabRects.value[0].width > 0) {\n                    resolve(void 0);\n                }\n                if (scrollRef.value == null) { // navRef.value == null ||\n                    resolve(void 0);\n                    return;\n                }\n                ;\n                const elements = scrollRef.value!.children;\n                const tabsRects: DOMRect[] = [];\n                elements.forEach((el) => {\n                    if (el.tagName == 'VIEW') {\n                        tabsRects.push(el.getBoundingClientRect());\n                    }\n                });\n                tabRects.value = tabsRects;\n                containerWidth.value = scrollRef.value?.offsetWidth ?? 0;\n                trackLineWidth.value = trackRef.value?.offsetWidth ?? 0;\n                resolve(void 0);\n            });\n            // })\n        };\n        const moveToActiveTab = () => {\n            measureTabs().then(() => {\n                const index = currentIndex.value;\n                if (tabRects.value.length <= index)\n                    return;\n                const tabRect = tabRects.value[index];\n                let count = 0;\n                let distance = 0;\n                let totalSize = 0;\n                tabRects.value.forEach((item: DOMRect) => {\n                    if (count < index) {\n                        distance += item.width;\n                        count += 1;\n                    }\n                    totalSize += item.width;\n                });\n                if (totalSize == 0)\n                    return;\n                // 计算track最终位置\n                distance += (tabRect.width - trackLineWidth.value) / 2;\n                trackRef.value?.style.setProperty('transform', `translateX(${distance}px)`);\n                // 计算scroll-view需要滚动的距离\n                const scrollOffset = calcScrollOffset(containerWidth.value, tabRect.left, tabRect.width, lastLeft.value);\n                const maxOffset = totalSize - containerWidth.value;\n                scrollLeft.value = clamp(scrollOffset, 0, maxOffset);\n                // isInteracting.value = false\n            });\n        };\n        const updateInnerStyle = (offset: number) => {\n            nextTick(() => {\n                if (innerRef.value == null)\n                    return;\n                const width = innerRef.value!.parentElement?.offsetWidth ?? 0;\n                innerRef.value!.style.setProperty('width', `${tabs.value.length * width}px`);\n                innerRef.value!.style.setProperty('opacity', `1`);\n                const left = -width * currentIndex.value + offset;\n                if (offset != 0) {\n                    innerRef.value!.style.setProperty('transition-duration', `0s`);\n                    innerRef.value!.style.setProperty('transform', `translateX(${left}px)`);\n                }\n                else {\n                    if (props.animated) {\n                        innerRef.value!.style.setProperty('transition-duration', offset != 0 || !props.animated ? '0s' : `${props.duration}s`);\n                    }\n                    nextTick(() => {\n                        innerRef.value!.style.setProperty('transform', `translateX(${left}px)`);\n                    });\n                }\n            });\n        };\n        const onScroll = (e: UniScrollEvent) => {\n            lastLeft.value = e.detail.scrollLeft;\n        };\n        const updateDuration = (duration: number) => {\n            trackRef.value?.style.setProperty('transition-duration', `${duration}s`);\n        };\n        const onClick = (index: number, item: TabPanel) => {\n            isInteracting.value = true;\n            const { value = index, disabled, label } = item;\n            if (disabled || currentValue.value == value)\n                return;\n            currentValue.value = value;\n            emits('click', value);\n            updateDuration(0.3);\n            nextTick(() => {\n                moveToActiveTab();\n            });\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                isInteracting.value = false;\n            }, 500);\n        };\n        const getAvailableTabIndex = (deltaX: number): number => {\n            const step = deltaX > 0 ? -1 : 1;\n            const len = tabs.value.length;\n            for (let i = step; currentIndex.value + step >= 0 && currentIndex.value + step < len; i += step) {\n                const newIndex = currentIndex.value + i;\n                if (newIndex >= 0 && newIndex < len && tabs.value.length > newIndex && !tabs.value[newIndex].disabled) {\n                    return newIndex;\n                }\n            }\n            return -1;\n        };\n        const touch = useTouch();\n        const onTouchStart = (event: UniTouchEvent) => {\n            isInteracting.value = true;\n            if (!props.swipeable)\n                return;\n            touch.start(event);\n            updateDuration(0.3);\n        };\n        const onTouchMove = (event: UniTouchEvent) => {\n            if (!props.swipeable)\n                return;\n            touch.move(event);\n            const { direction, deltaX, startX } = touch;\n            if (direction.value != 'horizontal')\n                return;\n            if (!props.animated)\n                return;\n            const isAtFirstTab = currentIndex.value == 0;\n            const isAtLastTab = currentIndex.value == tabs.value.length - 1;\n            if ((isAtFirstTab && deltaX.value > 0) || (isAtLastTab && deltaX.value < 0)) {\n                const base = isAtFirstTab ? 1 : -1;\n                const adjustedDelta = ease(deltaX.value, base);\n                updateInnerStyle(adjustedDelta);\n            }\n            else {\n                updateInnerStyle(deltaX.value);\n            }\n        };\n        const onTouchEnd = () => {\n            isInteracting.value = false;\n            if (!props.swipeable)\n                return;\n            const { direction, deltaX, offsetX } = touch;\n            const minSwipeDistance = 50;\n            if (direction.value == 'horizontal' && offsetX.value >= minSwipeDistance) {\n                const index = getAvailableTabIndex(deltaX.value);\n                if (index != -1) {\n                    onClick(index, tabs.value[index]);\n                }\n            }\n            updateInnerStyle(0);\n        };\n        const stopWatch = watch(tabs, (_v: TabPanel[]) => {\n            // 鸿蒙增加项时渲染比较慢 需要延时一下\n            setTimeout(() => {\n                moveToActiveTab();\n            }, 50);\n        });\n        const stopValueWatch = watch(currentValue, (_v: number) => {\n            if (tabs.value.length == 0)\n                return;\n            moveToActiveTab();\n            updateInnerStyle(0);\n        });\n        const stopVisibleWatch = watch((): boolean => props.visible, (v: boolean) => {\n            if (!v)\n                return;\n            setTimeout(() => {\n                moveToActiveTab();\n                updateInnerStyle(0);\n            }, 100);\n        });\n        const updateTrackPosition = (progress: number) => {\n            if (!props.syncSwiper || !props.showLine || progress == 0 || isInteracting.value)\n                return;\n            updateDuration(0);\n            const currentIdx = currentIndex.value;\n            const next = () => {\n                const direction = progress > 0 ? 1 : -1;\n                const nextIdx = currentIdx + direction;\n                // 边界检查\n                if (nextIdx < 0 || nextIdx >= tabRects.value.length)\n                    return;\n                // 获取当前和下一个tab的位置信息\n                const currentTab = tabRects.value[currentIdx];\n                const nextTab = tabRects.value[nextIdx];\n                // 计算插值比例 (0~1)\n                const ratio = Math.abs(progress);\n                // 计算track的起始和结束位置\n                const currentPos = currentTab.left + (currentTab.width - trackLineWidth.value) / 2;\n                const nextPos = nextTab.left + (nextTab.width - trackLineWidth.value) / 2;\n                // 根据滚动方向计算最终位置\n                const newPosition = direction > 0\n                    ? currentPos + (nextPos - currentPos) * ratio\n                    : currentPos - (currentPos - nextPos) * ratio;\n                // 更新track位置（平台兼容写法）\n                nextTick(() => {\n                    trackRef.value?.style.setProperty('transform', `translateX(${newPosition}px)`);\n                });\n            };\n            measureTabs().then(next);\n        };\n        // 监听swiper进度变化\n        watch((): number => props.swiperProgress, (progress: number) => {\n            updateTrackPosition(progress);\n        });\n        onMounted(() => {\n            // 鸿蒙时间上不确定\n            nextTick(() => {\n                setTimeout(() => {\n                    if (tabs.value.length == 0)\n                        return;\n                    moveToActiveTab();\n                    updateInnerStyle(0);\n                }, 100);\n            });\n        });\n        onUnmounted(() => {\n            stopWatch();\n            stopValueWatch();\n            stopVisibleWatch();\n        });\n        provide('LimeTabs', children);\n        return (): any | null => {\n            const _component_l_badge = resolveEasyComponent(\"l-badge\", _easycom_l_badge);\n            return createElementVNode(\"view\", utsMapOf({ class: \"l-tabs\" }), [\n                createElementVNode(\"view\", utsMapOf({\n                    class: \"l-tabs__wrap\",\n                    style: normalizeStyle([unref(styles), _ctx.lStyle])\n                }), [\n                    renderSlot(_ctx.$slots, \"left\"),\n                    createElementVNode(\"scroll-view\", utsMapOf({\n                        class: normalizeClass([\"l-tabs__scroll\", utsMapOf({ 'l-tabs__scroll--split': _ctx.split })]),\n                        ref_key: \"scrollRef\",\n                        ref: scrollRef,\n                        \"scroll-left\": unref(scrollLeft),\n                        direction: \"horizontal\",\n                        \"scroll-x\": true,\n                        \"scroll-with-animation\": true,\n                        \"show-scrollbar\": false,\n                        enhanced: true,\n                        onScroll: onScroll\n                    }), [\n                        createElementVNode(Fragment, null, RenderHelpers.renderList(unref(tabs), (item, index, __index, _cached): any => {\n                            return createElementVNode(\"view\", utsMapOf({\n                                class: normalizeClass([\"l-tabs__item\", utsMapOf({\n                                        'l-tabs__item--active': index == unref(currentIndex),\n                                        'l-tabs__item--evenly': _ctx.spaceEvenly,\n                                        'l-tabs__item--disabled': item.disabled\n                                    })]),\n                                key: index,\n                                style: normalizeStyle([unref(itemStyle)]),\n                                onClick: () => { onClick(index, item); }\n                            }), [\n                                renderSlot(_ctx.$slots, \"label\", utsMapOf({\n                                    item: item,\n                                    active: index == unref(currentIndex),\n                                    disabled: item.disabled\n                                }), (): any[] => [\n                                    isTrue(item.dot == true || item.badge != null)\n                                        ? createVNode(_component_l_badge, utsMapOf({\n                                            key: 0,\n                                            dot: item.dot,\n                                            offset: item.offset,\n                                            content: item.badge\n                                        }), utsMapOf({\n                                            default: withSlotCtx((): any[] => [\n                                                createElementVNode(\"text\", utsMapOf({\n                                                    style: normalizeStyle([\n                                                        unref(textStyles),\n                                                        !item.disabled && _ctx.color != null && index != unref(currentIndex) ? ('color:' + _ctx.color) : '',\n                                                        !item.disabled && _ctx.activeColor != null && index == unref(currentIndex) ? 'color:' + _ctx.activeColor : '',\n                                                    ]),\n                                                    class: normalizeClass([\"l-tabs__item-text\", [\n                                                            'l-tabs__item-text--' + _ctx.size,\n                                                            utsMapOf({\n                                                                'l-tabs__item-text--disabled': item.disabled,\n                                                                'l-tabs__item-text--active': index == unref(currentIndex)\n                                                            })\n                                                        ]])\n                                                }), toDisplayString(item.label), 7 /* TEXT, CLASS, STYLE */)\n                                            ]),\n                                            _: 2 /* DYNAMIC */\n                                        }), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"dot\", \"offset\", \"content\"])\n                                        : createElementVNode(\"text\", utsMapOf({\n                                            key: 1,\n                                            style: normalizeStyle([\n                                                unref(textStyles),\n                                                !item.disabled && _ctx.color != null && index != unref(currentIndex) ? ('color:' + _ctx.color) : '',\n                                                !item.disabled && _ctx.activeColor != null && index == unref(currentIndex) ? 'color:' + _ctx.activeColor : '',\n                                            ]),\n                                            class: normalizeClass([\"l-tabs__item-text\", [\n                                                    'l-tabs__item-text--' + _ctx.size,\n                                                    utsMapOf({\n                                                        'l-tabs__item-text--disabled': item.disabled,\n                                                        'l-tabs__item-text--active': index == unref(currentIndex)\n                                                    })\n                                                ]])\n                                        }), toDisplayString(item.label), 7 /* TEXT, CLASS, STYLE */)\n                                ])\n                            ], 14 /* CLASS, STYLE, PROPS */, [\"onClick\"]);\n                        }), 128 /* KEYED_FRAGMENT */),\n                        createElementVNode(\"view\", utsMapOf({\n                            ref_key: \"trackRef\",\n                            ref: trackRef,\n                            style: normalizeStyle([unref(trackStyle)]),\n                            class: \"l-tabs__track\"\n                        }), null, 4 /* STYLE */)\n                    ], 42 /* CLASS, PROPS, NEED_HYDRATION */, [\"scroll-left\"]),\n                    renderSlot(_ctx.$slots, \"right\")\n                ], 4 /* STYLE */),\n                _ctx.$slots['default'] != null\n                    ? createElementVNode(\"view\", utsMapOf({\n                        key: 0,\n                        class: normalizeClass([\"l-tabs__content\", utsMapOf({ 'l-tabs__content--animated': _ctx.animated })]),\n                        onTouchstart: onTouchStart,\n                        onTouchmove: onTouchMove,\n                        onTouchend: onTouchEnd,\n                        onTouchcancel: onTouchEnd\n                    }), [\n                        createElementVNode(\"view\", utsMapOf({\n                            class: \"l-tabs__content-inner\",\n                            style: normalizeStyle([innerStyle]),\n                            ref_key: \"innerRef\",\n                            ref: innerRef\n                        }), [\n                            renderSlot(_ctx.$slots, \"default\")\n                        ], 4 /* STYLE */)\n                    ], 34 /* CLASS, NEED_HYDRATION */)\n                    : createCommentVNode(\"v-if\", true)\n            ]);\n        };\n    }\n});\nexport default __sfc__;\nexport type LTabsComponentPublicInstance = InstanceType<typeof __sfc__>;\nconst GenUniModulesLimeTabsComponentsLTabsLTabsStyles = [utsMapOf([[\"l-tabs\", padStyleMapOf(utsMapOf([[\"position\", \"relative\"], [\"backgroundImage\", \"none\"], [\"backgroundColor\", \"#FFFFFF\"]]))], [\"l-tabs__wrap\", padStyleMapOf(utsMapOf([[\"flex\", 1], [\"backgroundImage\", \"none\"], [\"backgroundColor\", \"#FFFFFF\"], [\"flexDirection\", \"row\"]]))], [\"l-tabs__scroll\", padStyleMapOf(utsMapOf([[\"position\", \"relative\"], [\"flex\", 1], [\"flexDirection\", \"row\"]]))], [\"l-tabs__scroll--split\", padStyleMapOf(utsMapOf([[\"borderBottomWidth\", \"1rpx\"], [\"borderBottomStyle\", \"solid\"], [\"borderBottomColor\", \"#eeeeee\"]]))], [\"l-tabs__nav\", padStyleMapOf(utsMapOf([[\"flexDirection\", \"row\"], [\"position\", \"relative\"], [\"flexWrap\", \"nowrap\"], [\"alignItems\", \"center\"]]))], [\"l-tabs__track\", padStyleMapOf(utsMapOf([[\"position\", \"absolute\"], [\"zIndex\", 1], [\"transitionDuration\", \"0.3s\"], [\"backgroundColor\", \"#3283ff\"], [\"left\", 0], [\"bottom\", \"1rpx\"], [\"width\", \"32rpx\"], [\"height\", \"6rpx\"], [\"borderTopLeftRadius\", \"8rpx\"], [\"borderTopRightRadius\", \"8rpx\"], [\"borderBottomRightRadius\", \"8rpx\"], [\"borderBottomLeftRadius\", \"8rpx\"]]))], [\"l-tabs__content\", padStyleMapOf(utsMapOf([[\"width\", \"100%\"], [\"overflow\", \"hidden\"]]))], [\"l-tabs__content-inner\", utsMapOf([[\"\", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"flex\", 1], [\"overflow\", \"visible\"], [\"opacity\", 0]])], [\".l-tabs__content--animated \", utsMapOf([[\"position\", \"relative\"], [\"width\", \"100%\"], [\"height\", \"100%\"], [\"transitionProperty\", \"transform\"]])]])], [\"l-tabs__item\", padStyleMapOf(utsMapOf([[\"position\", \"relative\"], [\"flex\", \"none\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"center\"], [\"paddingTop\", 0], [\"paddingRight\", \"32rpx\"], [\"paddingBottom\", 0], [\"paddingLeft\", \"32rpx\"], [\"boxSizing\", \"border-box\"], [\"overflow\", \"hidden\"], [\"height\", \"96rpx\"]]))], [\"l-tabs__item-text\", padStyleMapOf(utsMapOf([[\"fontWeight\", \"400\"], [\"fontSize\", 14], [\"whiteSpace\", \"nowrap\"], [\"transitionProperty\", \"color\"], [\"transitionDuration\", \"300ms\"], [\"color\", \"rgba(0,0,0,0.88)\"]]))], [\"l-tabs__item-text--large\", padStyleMapOf(utsMapOf([[\"fontSize\", 16]]))], [\"l-tabs__item-text--active\", padStyleMapOf(utsMapOf([[\"fontWeight\", \"700\"], [\"color\", \"#3283ff\"]]))], [\"l-tabs__item-text--disabled\", padStyleMapOf(utsMapOf([[\"color\", \"rgba(0,0,0,0.25)\"]]))], [\"l-tabs__item--evenly\", padStyleMapOf(utsMapOf([[\"flex\", 1]]))], [\"@TRANSITION\", utsMapOf([[\"l-tabs__track\", utsMapOf([[\"duration\", \"0.3s\"]])], [\"l-tabs__content-inner\", utsMapOf([[\"property\", \"transform\"]])], [\"l-tabs__item-text\", utsMapOf([[\"property\", \"color\"], [\"duration\", \"300ms\"]])]])]])];\nimport { LTabPanelComponentPublicInstance } from \"@/uni_modules/lime-tabs/components/l-tab-panel/l-tab-panel.uvue\";\n//# sourceMappingURL=l-tabs.uvue.map","/*!\r\n* type：组件内props属性参数、事件回调参数、方法参数类型\r\n* fui-types - v1.0.0 (2023/11/11, 11:07:14 AM)\r\n*\r\n* 注意：当页面使用时，Object、Array等类型使用any接收，暂时需要转化为UTSJSONObject使用，不可直接使用“.”访问属性\r\n* @example：const param  = JSON.parse(JSON.stringify(e)) as UTSJSONObject\r\n* 在 uts 中，只适合转 type，不适合使用 interface。[interface 中使用? 编译报错，需要使用 type]\r\n*\r\n* 官网地址：https://firstui.cn/\r\n* 文档地址：https://unix.firstui.cn/\r\n*/\r\n\r\n/**\r\n* fui-text 文本组件 @onclick 事件 回调参数类型\r\n* @description this.$emit('onclick',FuiTextClickParam)\r\n* @param {string} text {string} text文本\r\n* @param {string} param {string} 自定义参数 \r\n*/\r\nexport type FuiTextClickParam = {\r\n\ttext : string;\r\n\tparam : string;\r\n}\r\n\r\n/**\r\n* fui-number 数字组件 @onclick 事件 回调参数类型\r\n* @description this.$emit('onclick',FuiNumberClickParam)\r\n* @param {string} text {string} 数字文本内容\r\n* @param {string} param {string} 自定义参数 \r\n*/\r\nexport type FuiNumberClickParam = {\r\n\ttext : string;\r\n\tparam : string;\r\n};\r\n\r\n\r\n/**\r\n* fui-footer 页脚组件 navigate 属性参数类型\r\n* @description props navigate：Arrary：FuiFooterNavigateParam[]\r\n* @param {string} text {string} 链接文本\r\n* @param {string} url {string} 当前应用内的跳转链接，可选\r\n* @param {string} openType {string} 跳转方式，可选值：navigate、redirect、switchTab、reLaunch、navigateBack等，可选\r\n* @param {number} delta {number} 返回的页面数，如果 delta 大于现有页面数，则返回到首页【仅openType=navigateBack 有效】，可选\r\n* @param {string} color {string} 链接文本字体颜色，可选\r\n* @param {number} size {number} 链接文本字体大小，单位rpx，可选\r\n*/\r\nexport type FuiFooterNavigateParam = {\r\n\ttext : string;\r\n\turl ?: string;\r\n\topenType ?: string;\r\n\tdelta ?: number;\r\n\tcolor ?: string;\r\n\tsize ?: number;\r\n}\r\n\r\n/**\r\n* fui-input-number 数字输入框组件 @change 事件 回调参数类型\r\n* @description this.$emit('change',FuiInputNumberChangeParam)\r\n* @param {number} value {number} 数字文本内容\r\n* @param {number} index {number} 索引值\r\n* @param {string} param {string} 自定义参数 \r\n*/\r\nexport type FuiInputNumberChangeParam = {\r\n\tvalue : number;\r\n\tindex : number;\r\n\tparam : string;\r\n}\r\n\r\n/**\r\n* fui-checkbox 复选框组件 @change 事件 回调参数类型（单独使用fui-checkbox组件）\r\n* @description this.$emit('change',FuiCheckboxChangeParam)\r\n* @param {boolean} checked {boolean} 是否选中\r\n* @param {string} value {string} checkbox 标识，值\r\n*/\r\nexport type FuiCheckboxChangeParam = {\r\n\tchecked : boolean;\r\n\tvalue : string;\r\n}\r\n\r\n\r\n/**\r\n* fui-actionsheet 上拉菜单组件 itemList 属性 参数类型\r\n* @description props itemList：Arrary：FuiActionSheetItemParam[]\r\n* @param {string} text {string} 菜单按钮文本\r\n* @param {string} color {string} 菜单按钮文本颜色（主题（theme）为 light 下使用），可选\r\n* @param {string} darkColor {string} 菜单按钮文本颜色（主题（theme）为 dark 下使用），可选\r\n* @param {string} param {string} 自定义参数，可选\r\n* @param {number} index {number} 按钮索引值，点击按钮时内部返回，无需传值\r\n*/\r\nexport type FuiActionSheetItemParam = {\r\n\ttext : string;\r\n\tcolor ?: string;\r\n\tdarkColor ?: string;\r\n\tparam ?: string;\r\n\tindex ?: number;\r\n}\r\n\r\n\r\n/**\r\n* fui-toast 轻提示 组件show方法 参数类型\r\n* @description Toast 轻提示组件show方法参数类型\r\n* @param {number} duration {number} 显示持续时间，单位ms，可选\r\n* @param {string} src {string} 提示图标，可选\r\n* @param {string} text {string} 提示信息，使用插槽自定义内容时可不传\r\n*/\r\nexport type FuiToastShowParam = {\r\n\tduration ?: number;\r\n\tsrc ?: string;\r\n\ttext ?: string\r\n}\r\n\r\n\r\n/**\r\n* fui-dialog 对话框 组件 buttons属性 参数类型\r\n* @description Dialog 对话框组件 buttons属性 参数类型\r\n* @param {string} text {string} 按钮文本\r\n* @param {string} color {string} 按钮字体颜色，可选\r\n* @param {boolean} primary {boolean} 按钮字体颜色是否显示为primary主题色，color为空时有效，可选\r\n* @param {string} param {string} 自定义参数，可选\r\n* @param {number} index {number} 按钮索引值，点击按钮时内部返回，无需传值\r\n*/\r\nexport type FuiDialogButtonsParam = {\r\n\ttext : string;\r\n\tcolor ?: string;\r\n\tprimary ?: boolean;\r\n\tparam ?: string;\r\n\tindex ?: number;\r\n}\r\n\r\n/**\r\n* fui-dropdown-menu 下拉菜单 组件 menus属性 参数类型\r\n* @description DropdownMenu 下拉菜单组件 menus属性 参数类型\r\n* @param {string} text {string} 下拉菜单item项显示文本，必选\r\n* @param {string} value {string} 下拉菜单item项文本对应value值，可选\r\n* @param {string} src {string} 下拉菜单item项icon图片地址，可选\r\n* @param {boolean} checked {boolean} 是否选中，可选\r\n* @param {boolean} disabled {boolean} 是否禁用选择，可选\r\n* @param {string} param {string} 自定义参数，可选\r\n* @param {number} index {number} 索引值，点击菜单时内部返回，无需传值\r\n*/\r\nexport type FuiDropdownMenuOptionParam = {\r\n\ttext : string;\r\n\tvalue ?: string;\r\n\tsrc ?: string;\r\n\tchecked ?: boolean;\r\n\tdisabled ?: boolean;\r\n\tparam ?: string;\r\n\tindex ?: number;\r\n}\r\n\r\n/**\r\n* SwipeAction 滑动菜单 组件 buttons属性 参数类型\r\n* @description SwipeAction 滑动菜单 组件 buttons属性 参数类型\r\n* @param {string} text {string} 按钮文本，必选\r\n* @param {string} background {string} 按钮背景色，不传或为空则默认使用danger主题色，可选\r\n* @param {number} size {number} 按钮字体大小，单位rpx，可选\r\n* @param {string} color {string} 按钮字体颜色，可选\r\n* @param {number} param {number} 自定义参数，可选\r\n* @param {number} index {number} 当前点击的按钮索引，点击事件返回，无需传值\r\n*/\r\nexport type FuiSwipeActionButtonParam = {\r\n\ttext : string;\r\n\tbackground ?: string;\r\n\tsize ?: number;\r\n\tcolor ?: string;\r\n\tparam ?: number;\r\n\tindex ?: number;\r\n}\r\n\r\n/**\r\n* fui-pagination 分页器 组件 @change 事件 回调参数类型\r\n* @description Pagination 分页器组件 change 事件 回调参数类型\r\n* @param {string} type {string} 按钮类型（prev、next、pageNumber）\r\n* @param {number} current {number} 当前页码\r\n*/\r\nexport type FuiPaginationChangeParam = {\r\n\ttype : string;\r\n\tcurrent : number;\r\n}\r\n\r\n/**\r\n* fui-segmented-control 分段器 组件props 属性 values 参数类型\r\n* @description props 属性 values 参数类型\r\n* @param {string} name {string} 分段器显示文本，必选\r\n* @param {boolean} disabled {boolean} 是否禁用当前项，可选\r\n* @param {number} value {number} 对应的值，可选\r\n* @param {string} param {string} 自定义参数，可选\r\n* @param {number} index {number} 当前点击项索引值，点击事件返回，无需传值，可选\r\n*/\r\nexport type FuiSegmentedControlValueParam = {\r\n\tname : string;\r\n\tdisabled ?: boolean;\r\n\tvalue ?: number;\r\n\tparam ?: string;\r\n\tindex ?: number;\r\n}\r\n\r\n/**\r\n* fui-tabs 标签页 组件props 属性 tabs 参数类型\r\n* @description props 属性 tabs（item项） 参数类型\r\n* @param {string} name {string} 标签显示文本，必选\r\n* @param {string} src {string} 标签显示图标，图标尺寸默认为 40*40，单位rpx，可选\r\n* @param {string} selectedIcon {string} 当前选项图标src，可选，不传默认使用icon\r\n* @param {number} badge {number} 角标数值，可选\r\n* @param {boolean} isDot {boolean} 角标是否显示为圆点，可选\r\n* @param {boolean} disabled {boolean} 是否禁用当前项，可选\r\n* @param {number} index {number} 当前点击项索引值，change 事件返回，无需传值，可选\r\n*/\r\nexport type FuiTabsItemParam = {\r\n\tname : string;\r\n\ticon ?: string;\r\n\tselectedIcon ?: string;\r\n\tbadge ?: number;\r\n\tisDot ?: boolean;\r\n\tdisabled ?: boolean;\r\n\tindex ?: number;\r\n}\r\n\r\n/**\r\n*  Collapse 折叠面板组件 @change 事件 回调参数类型\r\n* @description Collapse 折叠面板组件 change 事件 回调参数类型\r\n* @param {number} index {number} item项索引\r\n* @param {boolean} isOpen {boolean} 是否展开\r\n*/\r\nexport type FuiCollapseChangeParam = {\r\n\tindex : number;\r\n\tisOpen : boolean;\r\n}\r\n\r\n\r\n/**\r\n * 【fui-validator 和 fui-form 组件】 FuiFormRulesValidatorParam 表单校验规则自定义方法参数类型\r\n * @description 表单校验自定义方法参数类型\r\n * @param {String} msg {String} 错误提示内容\r\n * @param {Function} method (value : any) => boolean 校验方法\r\n */\r\nexport type FuiFormRulesValidatorParam = {\r\n\tmsg : string;\r\n\tmethod : (value : any | null) => boolean;\r\n}\r\n\r\n/**\r\n * 【fui-validator 和 fui-form 组件】FuiFormRulesParam 表单校验规则参数类型\r\n * @description 表单校验规则参数类型\r\n * @param {String} name {String} 元素的名称，与formData中key一致\r\n * @param {Array} rule {string[]} 内置的校验方法名称集合，详细见下方说明\r\n * @param {Array} msg {string[]} 对应rule规则方法的错误提示信息\r\n * @param {Array} validator {FuiFormRulesValidatorParam[]} 表单校验规则自定义方法参数类型\r\n */\r\nexport type FuiFormRulesParam = {\r\n\tname : string;\r\n\trule ?: string[];\r\n\tmsg ?: string[];\r\n\tvalidator ?: FuiFormRulesValidatorParam[]\r\n}\r\n\r\n/**\r\n * 【fui-validator 和 fui-form 组件】FuiFormErrorMsgParam 表单校验错误消息参数类型\r\n * @description 表单校验错误消息参数类型\r\n * @param {String} name {String} 元素的名称，与formData中key一致\r\n * @param {String} msg {String} 错误提示信息\r\n */\r\nexport type FuiFormErrorMsgParam = {\r\n\tname : string;\r\n\tmsg : string;\r\n}\r\n\r\n/**\r\n * 【fui-validator 和 fui-form 组件】FuiFormValidatorResParam 表单校验结果参数类型\r\n * @description 表单校验结果参数类型\r\n * @param {Boolean} isPassed {Boolean} 是否校验通过\r\n * @param {Array} errorMsg {FuiFormErrorMsgParam[]} 错误提示信息\r\n */\r\nexport type FuiFormValidatorResParam = {\r\n\tisPassed : boolean;\r\n\terrorMsg : FuiFormErrorMsgParam[];\r\n}","export default \"/static/login_banner.png\";\n//# sourceMappingURL=login_banner.png.uts.map","export default \"/static/login_banner.png\"","import _easycom_fui_tag from '@/uni_modules/firstui-unix/components/fui-tag/fui-tag.uvue';\nimport _easycom_fui_button from '@/uni_modules/firstui-unix/components/fui-button/fui-button.uvue';\nimport { ref } from 'vue';\ntype msgType = {\n    __$originalPosition?: UTSSourceMapPosition<\"msgType\", \"pages/message/messageSystem/messageSystem.uvue\", 26, 7>;\n    id: number;\n    desc: string;\n    time: string;\n    type: string;\n    flag: string;\n};\nconst __sfc__ = defineComponent({\n    __name: 'messageSystem',\n    setup(__props): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        const content = ref<msgType[]>([\n            {\n                id: 1,\n                desc: '您的XXX设备(ICCID:123456789)流量即将到期，请及时续费',\n                time: '2024-10-24 15:58:32',\n                type: 'notice',\n                flag: 'unread',\n            } as msgType,\n            {\n                id: 2,\n                desc: '您的XXX设备(ICCID:123456789)流量已到期',\n                time: '2024-10-24 15:58:32',\n                type: 'announcement',\n                flag: 'read',\n            } as msgType,\n            {\n                id: 3,\n                desc: '您的XXX设备(ICCID:123456789)流量已到期',\n                time: '2024-10-24 15:58:32',\n                type: 'share',\n                flag: 'read',\n            } as msgType,\n        ]);\n        const read = (id: number) => {\n            uni.showToast({\n                title: '已标记为已读' + id.toString(10),\n            });\n        };\n        const submit = () => {\n            uni.showToast({\n                title: '确认分享',\n                icon: 'none',\n            });\n        };\n        return (): any | null => {\n            const _component_fui_tag = resolveEasyComponent(\"fui-tag\", _easycom_fui_tag);\n            const _component_fui_button = resolveEasyComponent(\"fui-button\", _easycom_fui_button);\n            return createElementVNode(\"view\", utsMapOf({ class: \"container\" }), [\n                createElementVNode(\"view\", utsMapOf({ class: \"content\" }), [\n                    createElementVNode(Fragment, null, RenderHelpers.renderList(content.value, (item, index, __index, _cached): any => {\n                        return createElementVNode(\"view\", utsMapOf({\n                            class: \"item\",\n                            key: index\n                        }), [\n                            createElementVNode(\"image\", utsMapOf({\n                                class: \"unread\",\n                                src: item.flag == 'unread' ? '/static/dot.png' : ''\n                            }), null, 8 /* PROPS */, [\"src\"]),\n                            createElementVNode(\"view\", utsMapOf({ class: \"item-content\" }), [\n                                createElementVNode(\"text\", utsMapOf({\n                                    onClick: () => { read(item.id); }\n                                }), toDisplayString(item.desc), 9 /* TEXT, PROPS */, [\"onClick\"]),\n                                createElementVNode(\"view\", utsMapOf({ class: \"item-content-bottom\" }), [\n                                    createElementVNode(\"view\", utsMapOf({ class: \"tag-time\" }), [\n                                        item.type == 'notice'\n                                            ? createVNode(_component_fui_tag, utsMapOf({\n                                                key: 0,\n                                                text: \"通知\",\n                                                \"margin-bottom\": 24,\n                                                \"margin-right\": 24\n                                            }))\n                                            : item.type == 'announcement'\n                                                ? createVNode(_component_fui_tag, utsMapOf({\n                                                    key: 1,\n                                                    text: \"公告\",\n                                                    type: \"success\",\n                                                    \"margin-bottom\": 24,\n                                                    \"margin-right\": 24\n                                                }))\n                                                : item.type == 'share'\n                                                    ? createVNode(_component_fui_tag, utsMapOf({\n                                                        key: 2,\n                                                        text: \"分享\",\n                                                        type: \"warning\",\n                                                        \"margin-bottom\": 24,\n                                                        \"margin-right\": 24\n                                                    }))\n                                                    : createCommentVNode(\"v-if\", true),\n                                        createElementVNode(\"text\", null, toDisplayString(item.time), 1 /* TEXT */)\n                                    ]),\n                                    item.type == 'share'\n                                        ? createVNode(_component_fui_button, utsMapOf({\n                                            key: 0,\n                                            width: \"100rpx\",\n                                            height: \"40rpx\",\n                                            size: 25,\n                                            text: \"确认\",\n                                            onOnclick: submit\n                                        }))\n                                        : createCommentVNode(\"v-if\", true)\n                                ])\n                            ])\n                        ]);\n                    }), 128 /* KEYED_FRAGMENT */)\n                ])\n            ]);\n        };\n    }\n});\nexport default __sfc__;\nconst GenPagesMessageMessageSystemMessageSystemStyles = [utsMapOf([[\"container\", padStyleMapOf(utsMapOf([[\"height\", \"100%\"], [\"paddingTop\", \"20rpx\"], [\"paddingRight\", \"20rpx\"], [\"paddingBottom\", \"20rpx\"], [\"paddingLeft\", \"20rpx\"], [\"backgroundColor\", \"#f5f5f5\"]]))], [\"content\", utsMapOf([[\".container \", utsMapOf([[\"backgroundColor\", \"#ffffff\"], [\"paddingTop\", \"30rpx\"], [\"paddingRight\", \"30rpx\"], [\"paddingBottom\", \"30rpx\"], [\"paddingLeft\", \"30rpx\"], [\"borderTopLeftRadius\", \"20rpx\"], [\"borderTopRightRadius\", \"20rpx\"], [\"borderBottomRightRadius\", \"20rpx\"], [\"borderBottomLeftRadius\", \"20rpx\"]])]])], [\"item\", utsMapOf([[\".container .content \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"]])]])], [\"unread\", utsMapOf([[\".container .content .item \", utsMapOf([[\"width\", \"20rpx\"], [\"height\", \"20rpx\"], [\"marginRight\", \"10rpx\"]])]])], [\"item-content\", utsMapOf([[\".container .content .item \", utsMapOf([[\"borderBottomWidth\", \"1rpx\"], [\"borderBottomStyle\", \"solid\"], [\"borderBottomColor\", \"#f1f1f1\"], [\"paddingBottom\", \"20rpx\"], [\"marginBottom\", \"20rpx\"], [\"flex\", 1]])]])], [\"item-content-bottom\", utsMapOf([[\".container .content .item .item-content \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"flex-end\"], [\"justifyContent\", \"space-between\"], [\"marginTop\", \"10rpx\"]])]])], [\"tag-time\", utsMapOf([[\".container .content .item .item-content \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"flex-end\"], [\"justifyContent\", \"space-between\"], [\"marginTop\", \"10rpx\"]])]])], [\"fui-tag__wrap\", utsMapOf([[\".container .content .item .item-content .tag-time \", utsMapOf([[\"!width\", \"70rpx\"], [\"!height\", \"40rpx\"], [\"!paddingTop\", \"5rpx\"], [\"!paddingRight\", \"10rpx\"], [\"!paddingBottom\", \"5rpx\"], [\"!paddingLeft\", \"10rpx\"], [\"!marginBottom\", 0]])]])], [\"fui-tag__text\", utsMapOf([[\".container .content .item .item-content .tag-time .fui-tag__wrap \", utsMapOf([[\"!fontSize\", \"22rpx\"]])]])]])];\n//# sourceMappingURL=messageSystem.uvue.map","<template>\r\n\t<view class=\"container\">\r\n\t\t<view class=\"content\">\r\n\t\t\t<view class=\"item\" v-for=\"(item,index) in content\" :key=\"index\">\r\n\t\t\t\t<image class=\"unread\" :src=\"item.flag == 'unread' ? '/static/dot.png' : ''\" />\r\n\t\t\t\t<view class=\"item-content\">\r\n\t\t\t\t\t<text @click=\"read(item.id)\">{{item.desc}}</text>\r\n\t\t\t\t\t<view class=\"item-content-bottom\">\r\n\t\t\t\t\t\t<view class=\"tag-time\">\r\n\t\t\t\t\t\t\t<fui-tag v-if=\"item.type == 'notice'\" text=\"通知\" :margin-bottom=\"24\" :margin-right=\"24\"></fui-tag>\r\n\t\t\t\t\t\t\t<fui-tag v-else-if=\"item.type == 'announcement'\" text=\"公告\" type=\"success\" :margin-bottom=\"24\" :margin-right=\"24\"></fui-tag>\r\n\t\t\t\t\t\t\t<fui-tag v-else-if=\"item.type == 'share'\" text=\"分享\" type=\"warning\" :margin-bottom=\"24\" :margin-right=\"24\"></fui-tag>\r\n\t\t\t\t\t\t\t<text>{{item.time}}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<fui-button width=\"100rpx\" height=\"40rpx\" :size=\"25\" v-if=\"item.type == 'share'\" text=\"确认\" @onclick=\"submit\"></fui-button>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\n\timport {ref} from 'vue'\r\n\r\n\ttype msgType = {\r\n\t\tid: number,\r\n\t\tdesc: string,\r\n\t\ttime: string,\r\n\t\ttype:string,\r\n\t\tflag:string,\r\n\t}\r\n\r\n\tconst content = ref<msgType[]>([\r\n\t\t{\r\n\t\t\tid:1,\r\n\t\t\tdesc:'您的XXX设备(ICCID:123456789)流量即将到期，请及时续费',\r\n\t\t\ttime:'2024-10-24 15:58:32',\r\n\t\t\ttype:'notice',\r\n\t\t\tflag:'unread',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid:2,\r\n\t\t\tdesc:'您的XXX设备(ICCID:123456789)流量已到期',\r\n\t\t\ttime:'2024-10-24 15:58:32',\r\n\t\t\ttype:'announcement',\r\n\t\t\tflag:'read',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid:3,\r\n\t\t\tdesc:'您的XXX设备(ICCID:123456789)流量已到期',\r\n\t\t\ttime:'2024-10-24 15:58:32',\r\n\t\t\ttype:'share',\r\n\t\t\tflag:'read',\r\n\t\t},\r\n\t])\r\n\r\n\tconst read = (id:number) => {\r\n\t\tuni.showToast({\r\n\t\t\ttitle:'已标记为已读'+ id.toString(),\r\n\t\t})\r\n\t}\r\n\r\n\tconst submit = () => {\r\n\t\tuni.showToast({\r\n\t\t\ttitle:'确认分享',\r\n\t\t\ticon:'none',\r\n\t\t})\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.container{\r\n\t\theight: 100%;\r\n\t\tpadding: 20rpx;\r\n\t\tbackground-color: #f5f5f5;\r\n\t\t.content{\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tpadding: 30rpx;\r\n\t\t\tborder-radius: 20rpx;\r\n\t\t\t.item{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\t.unread{\r\n\t\t\t\t\twidth: 20rpx;\r\n\t\t\t\t\theight: 20rpx;\r\n\t\t\t\t\tmargin-right: 10rpx;\r\n\t\t\t\t}\r\n\t\t\t\t.item-content{\r\n\t\t\t\t\tborder-bottom:1rpx solid #f1f1f1;\r\n\t\t\t\t\tpadding-bottom: 20rpx;\r\n\t\t\t\t\tmargin-bottom: 20rpx;\r\n\t\t\t\t\tflex: 1;\r\n\t\t\t\t\t.item-content-bottom{\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\t\talign-items: flex-end;\r\n\t\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\t\tmargin-top: 10rpx\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.tag-time{\r\n\t\t\t\t\t\t@extend .item-content-bottom;\r\n\t\t\t\t\t\t.fui-tag__wrap{\r\n\t\t\t\t\t\t\twidth: 70rpx !important;\r\n\t\t\t\t\t\t\theight: 40rpx !important ;\r\n\t\t\t\t\t\t\tpadding: 5rpx 10rpx !important;\r\n\t\t\t\t\t\t\tmargin-bottom:0 !important;\r\n\t\t\t\t\t\t\t.fui-tag__text{\r\n\t\t\t\t\t\t\t\tfont-size: 22rpx !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>","import _easycom_fui_button from '@/uni_modules/firstui-unix/components/fui-button/fui-button.uvue';\nimport _easycom_l_tab_panel from '@/uni_modules/lime-tabs/components/l-tab-panel/l-tab-panel.uvue';\nimport _easycom_l_tabs from '@/uni_modules/lime-tabs/components/l-tabs/l-tabs.uvue';\nimport { ref } from 'vue';\ntype tabItem = {\n    __$originalPosition?: UTSSourceMapPosition<\"tabItem\", \"pages/mine/myOrders/myOrders.uvue\", 33, 7>;\n    id: string;\n    title: string;\n    content: Array<Object>;\n};\ntype ContentType = {\n    __$originalPosition?: UTSSourceMapPosition<\"ContentType\", \"pages/mine/myOrders/myOrders.uvue\", 39, 7>;\n    id: string;\n    title: string;\n    date: string;\n    price: string;\n    state: string;\n    iccid: string;\n    isPay: string;\n};\nconst __sfc__ = defineComponent({\n    __name: 'myOrders',\n    setup(__props): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        const tabVal = ref(0);\n        const tabsVal = ref<tabItem[]>([\n            {\n                id: '0',\n                title: '全部',\n                content: []\n            } as tabItem,\n            {\n                id: '1',\n                title: '待付款',\n                content: []\n            } as tabItem,\n            {\n                id: '2',\n                title: '已完成',\n                content: []\n            } as tabItem,\n            {\n                id: '3',\n                title: '已取消',\n                content: []\n            } as tabItem,\n            {\n                id: '4',\n                title: '退款',\n                content: []\n            } as tabItem\n        ]);\n        const content = ref<ContentType[]>([\n            {\n                id: '1111',\n                title: '五年畅想套餐',\n                date: '2025-07-09 15:00:00',\n                price: '¥300',\n                state: '已完成',\n                iccid: '89862235957372384387456',\n                isPay: '2',\n            } as ContentType,\n            {\n                id: '1112',\n                title: '五年畅想套餐',\n                date: '2025-07-09 15:00:00',\n                price: '¥300',\n                state: '已取消',\n                iccid: '89862235957372384387454',\n                isPay: '3',\n            } as ContentType,\n            {\n                id: '1113',\n                title: '五年畅想套餐',\n                date: '2025-07-09 15:00:00',\n                price: '¥300',\n                state: '待付款',\n                iccid: '89862235957372384387467',\n                isPay: '1',\n            } as ContentType,\n            {\n                id: '1114',\n                title: '五年畅想套餐',\n                date: '2025-07-09 15:00:00',\n                price: '¥300',\n                state: '已退款',\n                iccid: '89862235957372384387465',\n                isPay: '4',\n            } as ContentType,\n        ]);\n        const getFilteredEvents = (): ContentType[] => {\n            if (tabVal.value == 0)\n                return [...content.value];\n            const selectedType = tabsVal.value[tabVal.value].id;\n            return content.value.filter((event): boolean => event.isPay == selectedType);\n        };\n        const changeTab = (val: number) => {\n            tabVal.value = val;\n        };\n        const goDetail = (id: string) => {\n            uni.navigateTo({\n                url: '/pages/mine/myOrders/orderDetail/orderDetail?id=' + id\n            });\n        };\n        const goPay = () => {\n            uni.showToast({\n                title: '去付款',\n                icon: 'none'\n            });\n        };\n        return (): any | null => {\n            const _component_fui_button = resolveEasyComponent(\"fui-button\", _easycom_fui_button);\n            const _component_l_tab_panel = resolveEasyComponent(\"l-tab-panel\", _easycom_l_tab_panel);\n            const _component_l_tabs = resolveEasyComponent(\"l-tabs\", _easycom_l_tabs);\n            return createElementVNode(\"view\", utsMapOf({ class: \"container\" }), [\n                createVNode(_component_l_tabs, utsMapOf({\n                    value: tabVal.value,\n                    onClick: changeTab,\n                    bgColor: \"transparent\",\n                    color: \"#000000\",\n                    activeColor: \"#FF5722\"\n                }), utsMapOf({\n                    default: withSlotCtx((): any[] => [\n                        createElementVNode(Fragment, null, RenderHelpers.renderList(tabsVal.value, (item, index, __index, _cached): any => {\n                            return createVNode(_component_l_tab_panel, utsMapOf({\n                                key: index,\n                                value: index,\n                                label: item.title\n                            }), utsMapOf({\n                                default: withSlotCtx((): any[] => [\n                                    createElementVNode(Fragment, null, RenderHelpers.renderList(getFilteredEvents(), (item, index, __index, _cached): any => {\n                                        return createElementVNode(\"view\", utsMapOf({\n                                            class: \"list-item\",\n                                            key: index\n                                        }), [\n                                            createElementVNode(\"view\", utsMapOf({\n                                                onClick: () => { goDetail(item.id); }\n                                            }), [\n                                                createElementVNode(\"view\", utsMapOf({ class: \"title-state\" }), [\n                                                    createElementVNode(\"text\", utsMapOf({ class: \"title-style\" }), toDisplayString(item.title), 1 /* TEXT */),\n                                                    createElementVNode(\"text\", utsMapOf({ class: \"state-style\" }), toDisplayString(item.state), 1 /* TEXT */)\n                                                ]),\n                                                createElementVNode(\"view\", utsMapOf({ class: \"device-type\" }), [\n                                                    createElementVNode(\"text\", null, \"办公室设备\"),\n                                                    createElementVNode(\"text\", null, \"ICCID \" + toDisplayString(item.iccid), 1 /* TEXT */)\n                                                ]),\n                                                createElementVNode(\"view\", utsMapOf({ class: \"date-price\" }), [\n                                                    createElementVNode(\"text\", null, toDisplayString(item.date), 1 /* TEXT */),\n                                                    createElementVNode(\"text\", utsMapOf({ class: \"price\" }), toDisplayString(item.price), 1 /* TEXT */)\n                                                ])\n                                            ], 8 /* PROPS */, [\"onClick\"]),\n                                            item.isPay == '1'\n                                                ? createElementVNode(\"view\", utsMapOf({\n                                                    key: 0,\n                                                    class: \"btn\"\n                                                }), [\n                                                    createVNode(_component_fui_button, utsMapOf({\n                                                        text: \"去付款\",\n                                                        type: \"primary\",\n                                                        width: \"120rpx\",\n                                                        height: \"50rpx\",\n                                                        size: 24,\n                                                        onClick: goPay\n                                                    }))\n                                                ])\n                                                : createCommentVNode(\"v-if\", true)\n                                        ]);\n                                    }), 128 /* KEYED_FRAGMENT */)\n                                ]),\n                                _: 2 /* DYNAMIC */\n                            }), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"label\"]);\n                        }), 128 /* KEYED_FRAGMENT */)\n                    ]),\n                    _: 1 /* STABLE */\n                }), 8 /* PROPS */, [\"value\"])\n            ]);\n        };\n    }\n});\nexport default __sfc__;\nconst GenPagesMineMyOrdersMyOrdersStyles = [utsMapOf([[\"container\", padStyleMapOf(utsMapOf([[\"width\", \"100%\"], [\"height\", \"100%\"], [\"backgroundColor\", \"#F5F5F5\"], [\"paddingTop\", \"20rpx\"], [\"paddingRight\", \"20rpx\"], [\"paddingBottom\", \"20rpx\"], [\"paddingLeft\", \"20rpx\"]]))], [\"l-tabs\", utsMapOf([[\".container \", utsMapOf([[\"!backgroundColor\", \"rgba(0,0,0,0)\"]])]])], [\"list-item\", utsMapOf([[\".container \", utsMapOf([[\"backgroundColor\", \"#ffffff\"], [\"paddingTop\", \"20rpx\"], [\"paddingRight\", \"30rpx\"], [\"paddingBottom\", \"20rpx\"], [\"paddingLeft\", \"30rpx\"], [\"marginTop\", \"20rpx\"], [\"borderTopLeftRadius\", \"20rpx\"], [\"borderTopRightRadius\", \"20rpx\"], [\"borderBottomRightRadius\", \"20rpx\"], [\"borderBottomLeftRadius\", \"20rpx\"]])]])], [\"title-state\", utsMapOf([[\".container .list-item \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"], [\"paddingTop\", \"10rpx\"], [\"paddingRight\", 0], [\"paddingBottom\", \"10rpx\"], [\"paddingLeft\", 0]])]])], [\"date-price\", utsMapOf([[\".container .list-item \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"], [\"paddingTop\", \"10rpx\"], [\"paddingRight\", 0], [\"paddingBottom\", \"10rpx\"], [\"paddingLeft\", 0]])]])], [\"device-type\", utsMapOf([[\".container .list-item \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"], [\"paddingTop\", \"10rpx\"], [\"paddingRight\", 0], [\"paddingBottom\", \"10rpx\"], [\"paddingLeft\", 0]])]])], [\"title-style\", utsMapOf([[\".container .list-item .title-state \", utsMapOf([[\"fontSize\", \"30rpx\"], [\"color\", \"#000000\"], [\"fontWeight\", \"bold\"]])], [\".container .list-item .date-price \", utsMapOf([[\"fontSize\", \"30rpx\"], [\"color\", \"#000000\"], [\"fontWeight\", \"bold\"]])], [\".container .list-item .device-type \", utsMapOf([[\"fontSize\", \"30rpx\"], [\"color\", \"#000000\"], [\"fontWeight\", \"bold\"]])]])], [\"state-style\", utsMapOf([[\".container .list-item .title-state \", utsMapOf([[\"fontSize\", \"24rpx\"], [\"color\", \"#FF5722\"]])], [\".container .list-item .date-price \", utsMapOf([[\"fontSize\", \"24rpx\"], [\"color\", \"#FF5722\"]])], [\".container .list-item .device-type \", utsMapOf([[\"fontSize\", \"24rpx\"], [\"color\", \"#FF5722\"]])]])], [\"price\", utsMapOf([[\".container .list-item .date-price \", utsMapOf([[\"fontSize\", \"38rpx\"]])]])], [\"btn\", utsMapOf([[\".container .list-item \", utsMapOf([[\"display\", \"flex\"], [\"flexDirection\", \"row\"], [\"justifyContent\", \"flex-end\"], [\"paddingTop\", \"10rpx\"], [\"paddingRight\", 0], [\"paddingBottom\", \"10rpx\"], [\"paddingLeft\", 0]])]])]])];\n//# sourceMappingURL=myOrders.uvue.map","<template>\n\t<view class=\"container\">\n\t\t<l-tabs :value=\"tabVal\" @click=\"changeTab\" bgColor=\"transparent\" color=\"#000000\" activeColor=\"#FF5722\">\n\t\t\t<l-tab-panel v-for=\"(item,index) in tabsVal\" :key=\"index\" :value=\"index\" :label=\"item.title\">\n\t\t\t\t<view class=\"list-item\" v-for=\"(item,index) in getFilteredEvents()\" :key=\"index\">\n\t\t\t\t\t<view @click=\"goDetail(item.id)\">\n\t\t\t\t\t\t<view class=\"title-state\">\n\t\t\t\t\t\t\t<text class=\"title-style\">{{item.title}}</text>\n\t\t\t\t\t\t\t<text class=\"state-style\">{{item.state}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"device-type\">\n\t\t\t\t\t\t\t<text>办公室设备</text>\n\t\t\t\t\t\t\t<text>ICCID {{item.iccid}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"date-price\">\n\t\t\t\t\t\t\t<text>{{item.date}}</text>\n\t\t\t\t\t\t\t<text class=\"price\">{{item.price}}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"btn\" v-if=\"item.isPay == '1'\">\n\t\t\t\t\t\t<fui-button text=\"去付款\" type=\"primary\" width=\"120rpx\" height=\"50rpx\" :size=\"24\" @click=\"goPay\"></fui-button>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</l-tab-panel>\n\t\t</l-tabs>\n\t</view>\n</template>\n\n<script setup lang=\"uts\">\n\timport { ref } from 'vue'\n\tconst tabVal = ref(0)\n\n\ttype tabItem = {\n\t\tid : string;\n\t\ttitle : string;\n\t\tcontent : Array<Object>\n\t}\n\n\ttype ContentType = {\n\t\tid : string;\n\t\ttitle : string;\n\t\tdate : string;\n\t\tprice : string;\n\t\tstate : string;\n\t\ticcid : string;\n\t\tisPay : string;\n\t}\n\n\tconst tabsVal = ref<tabItem[]>([\n\t\t{\n\t\t\tid:'0',\n\t\t\ttitle:'全部',\n\t\t\tcontent:[]\n\t\t},\n\t\t{\n\t\t\tid:'1',\n\t\t\ttitle:'待付款',\n\t\t\tcontent:[]\n\t\t},\n\t\t{\n\t\t\tid:'2',\n\t\t\ttitle:'已完成',\n\t\t\tcontent:[]\n\t\t},\n\t\t{\n\t\t\tid:'3',\n\t\t\ttitle:'已取消',\n\t\t\tcontent:[]\n\t\t},\n\t\t{\n\t\t\tid:'4',\n\t\t\ttitle:'退款',\n\t\t\tcontent:[]\n\t\t}\n\t])\n\n\tconst content  = ref<ContentType[]>([\n\t\t{\n\t\t\tid:'1111',\n\t\t\ttitle:'五年畅想套餐',\n\t\t\tdate:'2025-07-09 15:00:00',\n\t\t\tprice:'¥300',\n\t\t\tstate:'已完成',\n\t\t\ticcid:'89862235957372384387456',\n\t\t\tisPay:'2',\n\t\t},\n\t\t{\n\t\t\tid:'1112',\n\t\t\ttitle:'五年畅想套餐',\n\t\t\tdate:'2025-07-09 15:00:00',\n\t\t\tprice:'¥300',\n\t\t\tstate:'已取消',\n\t\t\ticcid:'89862235957372384387454',\n\t\t\tisPay:'3',\n\t\t},\n\t\t{\n\t\t\tid:'1113',\n\t\t\ttitle:'五年畅想套餐',\n\t\t\tdate:'2025-07-09 15:00:00',\n\t\t\tprice:'¥300',\n\t\t\tstate:'待付款',\n\t\t\ticcid:'89862235957372384387467',\n\t\t\tisPay:'1',\n\t\t},\n\t\t{\n\t\t\tid:'1114',\n\t\t\ttitle:'五年畅想套餐',\n\t\t\tdate:'2025-07-09 15:00:00',\n\t\t\tprice:'¥300',\n\t\t\tstate:'已退款',\n\t\t\ticcid:'89862235957372384387465',\n\t\t\tisPay:'4',\n\t\t},\n\t])\n\n\tconst getFilteredEvents = (): ContentType[] => {\n\t\tif (tabVal.value == 0) return [...content.value];\n\t\tconst selectedType = tabsVal.value[tabVal.value].id;\n\t\treturn content.value.filter(event => event.isPay == selectedType);\n\t}\n\n\tconst changeTab = (val: number) => {\n\t\ttabVal.value = val\n\t}\n\n\tconst goDetail = (id:string) => {\n\t\tuni.navigateTo({\n\t\t\turl: '/pages/mine/myOrders/orderDetail/orderDetail?id=' + id\n\t\t})\n\t}\n\n\tconst goPay = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '去付款',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #F5F5F5;\n\t\tpadding: 20rpx;\n\t\t.l-tabs{\n\t\t\tbackground-color: transparent !important;\n\t\t}\n\t\t.list-item{\n\t\t\tbackground-color:#fff;\n\t\t\tpadding:20rpx 30rpx;\n\t\t\tmargin-top: 20rpx;\n\t\t\tborder-radius: 20rpx;\n\t\t\t.title-state{\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\tpadding:10rpx 0;\n\t\t\t\t.title-style{\n\t\t\t\t\tfont-size: 30rpx;\n\t\t\t\t\tcolor: #000000;\n\t\t\t\t\tfont-weight: bold;\n\t\t\t\t}\n\t\t\t\t.state-style{\n\t\t\t\t\tfont-size: 24rpx;\n\t\t\t\t\tcolor: #FF5722;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.device-type{\n\t\t\t\t@extend .title-state;\n\t\t\t}\n\t\t\t.date-price{\n\t\t\t\t@extend .title-state;\n\t\t\t\t.price{\n\t\t\t\t\tfont-size:38rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.btn{\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t\tjustify-content: flex-end;\n\t\t\t\tpadding:10rpx 0;\n\t\t\t}\n\t\t}\n\t}\n</style>\n","// @ts-nocheck\nexport interface TextareaProps {\n    /**\n     * 键盘弹起时，是否自动上推页面\n     */\n    adjustPosition: boolean;\n    /**\n        * 自动聚焦，拉起键盘\n        */\n    autofocus: boolean;\n    /**\n        * 是否自动增高\n        */\n    autosize: boolean;\n    /**\n        * 是否显示外边框\n        */\n    bordered: boolean;\n    /**\n        * 点击键盘右下角按钮时是否保持键盘不收起点\n        */\n    confirmHold: boolean;\n    /**\n        * 设置键盘右下角按钮的文字，仅在 type='text'时生效\n        */\n    confirmType: 'return' | 'send' | 'search' | 'next' | 'go' | 'done';\n    /**\n        * 指定 focus 时的光标位置\n        */\n    cursor: number;\n    /**\n     * 指定光标与键盘的距离。取textarea距离底部的距离和cursor-spacing指定的距离的最小值作为光标与键盘的距离\n     */\n    cursorSpacing: number;\n    /**\n        * 是否去掉 iOS 下的默认内边距\n        */\n    disableDefaultPadding: boolean;\n    /**\n        * 是否禁用文本框\n        */\n    disabled: boolean;\n    readonly: boolean;\n    /**\n        * 如果 textarea 是在一个 `position:fixed` 的区域，需要显示指定属性 fixed 为 true\n        */\n    fixed: boolean;\n    defaultFixed: boolean;\n    /**\n        * 自动聚焦\n        */\n    focus: boolean;\n    /**\n        * focus时，点击页面的时候不收起键盘\n        */\n    holdKeyboard: boolean;\n    /**\n        * 显示文本计数器，如 0/140。当 `maxlength < 0 && maxcharacter < 0` 成立时， indicator无效\n        */\n    indicator: boolean;\n    /**\n        * 左侧文本\n        */\n    label?: string;\n    /**\n        * 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度\n        */\n    maxcharacter?: number;\n    /**\n        * 用户最多可以输入的字符个数，值为 -1 的时候不限制最大长度\n        */\n    maxlength: number;\n    /**\n        * 占位符\n        */\n    placeholder: string;\n    /**\n        * 光标结束位置，自动聚集时有效，需与 selection-start 搭配使用\n        */\n    selectionEnd: number;\n    /**\n        * 光标起始位置，自动聚集时有效，需与 selection-end 搭配使用\n        */\n    selectionStart: number;\n    /**\n        * 是否显示键盘上方带有”完成“按钮那一栏\n        */\n    showConfirmBar: boolean;\n    /**\n        * 文本框值\n        */\n    value?: string;\n    /**\n         * 标题输入框布局方式\n         */\n    layout: 'vertical' | 'horizontal';\n    /**\n        * 指定 placeholder 的样式，目前仅支持 color ,font-size和font-weight\n        */\n    placeholderStyle: string;\n    lStyle?: string;\n    labelStyle?: string;\n    indicatorStyle?: string;\n    innerStyle?: string;\n    /**\n     * 经典\n     */\n    classic: boolean;\n    borderColor?: string;\n    focusedBorderColor?: string;\n    focused: boolean;\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport interface TextareaProps {\r\n\t/**\r\n\t * 键盘弹起时，是否自动上推页面\r\n\t */\r\n\tadjustPosition : boolean;\r\n\t/**\r\n\t\t* 自动聚焦，拉起键盘\r\n\t\t*/\r\n\tautofocus : boolean;\r\n\t/**\r\n\t\t* 是否自动增高\r\n\t\t*/\r\n\tautosize : boolean;\r\n\t/**\r\n\t\t* 是否显示外边框\r\n\t\t*/\r\n\tbordered : boolean;\r\n\t/**\r\n\t\t* 点击键盘右下角按钮时是否保持键盘不收起点\r\n\t\t*/\r\n\tconfirmHold : boolean;\r\n\t/**\r\n\t\t* 设置键盘右下角按钮的文字，仅在 type='text'时生效\r\n\t\t*/\r\n\tconfirmType : 'return' | 'send' | 'search' | 'next' | 'go' | 'done';\r\n\t/**\r\n\t\t* 指定 focus 时的光标位置\r\n\t\t*/\r\n\tcursor : number;\r\n\t/**\r\n\t * 指定光标与键盘的距离。取textarea距离底部的距离和cursor-spacing指定的距离的最小值作为光标与键盘的距离\r\n\t */\r\n\tcursorSpacing : number;\r\n\t/**\r\n\t\t* 是否去掉 iOS 下的默认内边距\r\n\t\t*/\r\n\tdisableDefaultPadding : boolean;\r\n\t/**\r\n\t\t* 是否禁用文本框\r\n\t\t*/\r\n\tdisabled : boolean;\r\n\treadonly : boolean;\r\n\t/**\r\n\t\t* 如果 textarea 是在一个 `position:fixed` 的区域，需要显示指定属性 fixed 为 true\r\n\t\t*/\r\n\tfixed : boolean;\r\n\tdefaultFixed : boolean;\r\n\t/**\r\n\t\t* 自动聚焦\r\n\t\t*/\r\n\tfocus : boolean;\r\n\t/**\r\n\t\t* focus时，点击页面的时候不收起键盘\r\n\t\t*/\r\n\tholdKeyboard : boolean;\r\n\t/**\r\n\t\t* 显示文本计数器，如 0/140。当 `maxlength < 0 && maxcharacter < 0` 成立时， indicator无效\r\n\t\t*/\r\n\tindicator : boolean;\r\n\t/**\r\n\t\t* 左侧文本\r\n\t\t*/\r\n\tlabel ?: string;\r\n\t/**\r\n\t\t* 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度\r\n\t\t*/\r\n\tmaxcharacter ?: number;\r\n\t/**\r\n\t\t* 用户最多可以输入的字符个数，值为 -1 的时候不限制最大长度\r\n\t\t*/\r\n\tmaxlength : number;\r\n\t/**\r\n\t\t* 占位符\r\n\t\t*/\r\n\tplaceholder : string;\r\n\t\r\n\t/**\r\n\t\t* 光标结束位置，自动聚集时有效，需与 selection-start 搭配使用\r\n\t\t*/\r\n\tselectionEnd : number;\r\n\t/**\r\n\t\t* 光标起始位置，自动聚集时有效，需与 selection-end 搭配使用\r\n\t\t*/\r\n\tselectionStart : number;\r\n\t/**\r\n\t\t* 是否显示键盘上方带有”完成“按钮那一栏\r\n\t\t*/\r\n\tshowConfirmBar : boolean;\r\n\t/**\r\n\t\t* 文本框值\r\n\t\t*/\r\n\tvalue ?: string;\r\n\t/**\r\n\t\t * 标题输入框布局方式\r\n\t\t */\r\n\tlayout : 'vertical' | 'horizontal';\r\n\t/**\r\n\t\t* 指定 placeholder 的样式，目前仅支持 color ,font-size和font-weight\r\n\t\t*/\r\n\tplaceholderStyle : string;\r\n\tlStyle?: string;\r\n\tlabelStyle?: string;\r\n\tindicatorStyle?: string;\r\n\tinnerStyle?: string;\r\n\t/**\r\n\t * 经典\r\n\t */\r\n\tclassic: boolean;\r\n\tborderColor?: string\r\n\tfocusedBorderColor?: string;\r\n\tfocused: boolean;\r\n}","import { unitConvert } from '@/uni_modules/lime-shared/unitConvert';\r\n\r\nexport type DrawBorderOptions = {\r\n\tdirection : 'top' | 'bottom' | 'left' | 'right';\r\n\tcolor ?: string;\r\n\tcolorKey ?: string; // 在dom中获取颜色\r\n\tstartOffsetKey?: string; // 在dom哪个属性获取\r\n\tstartOffset ?: number | string; // 支持数字或 CSS 字符串（如 '10px'）\r\n\tendOffset ?: number | string;\r\n\tlineWidth ?: number;\r\n\twatchSize ?: boolean; // 是否监听尺寸变化自动重绘\r\n\timmediate ?: boolean; // 是否立即绘制\r\n\tbordered?: boolean;\r\n\t\r\n}\r\n\r\nexport type UseDrawBorderReturn = {\r\n\tcolor: Ref<string>,\r\n\trenderBorder: () => void,\r\n\tclearBorder: () => void;\r\n\tdispose: () => void,\r\n}\r\n/**\r\n * 在元素上绘制边框，并支持动态监听尺寸变化\r\n * @param elementRef 目标元素的 Ref\r\n * @param options 边框配置\r\n * @returns 清理函数（用于卸载时取消监听）\r\n */\r\nexport function useDrawBorder(\r\n\telementRef : Ref<UniElement | null>,\r\n\toptions : DrawBorderOptions\r\n):UseDrawBorderReturn {\r\n\tlet resizeObserver : UniResizeObserver | null = null;\r\n\tconst { watchSize = true, immediate = true } = options;\r\n\tconst defalutColor = '#e7e7e7'\r\n\tconst color = ref(options.color ?? defalutColor)\r\n\tconst bordered = ref(options.bordered ?? true)\r\n\tlet computedStartOffset = 0\r\n\tlet computedEndOffset = 0\r\n\t\r\n\t// 绘制边框\r\n\tconst renderBorder = () => {\r\n\t\tif (elementRef.value == null) return;\r\n\t\tconst ctx = elementRef.value!.getDrawableContext();\r\n\t\tif (ctx == null) return;\r\n\r\n\t\tconst rect = elementRef.value!.getBoundingClientRect();\r\n\t\tctx.reset();\r\n\r\n\t\tconst {\r\n\t\t\tdirection,\r\n\t\t\tstartOffset = 0,\r\n\t\t\tendOffset = 0,\r\n\t\t\tlineWidth = 0.5,\r\n\t\t\tcolorKey,\r\n\t\t\tstartOffsetKey,\r\n\t\t} = options;\r\n\t\t \r\n\t\t\r\n\t\t// 转换单位（如果是字符串，如 '10px'）\r\n\t\tif(computedStartOffset == 0) {\r\n\t\t\tcomputedStartOffset = unitConvert((startOffsetKey != null ? elementRef.value?.style.getPropertyValue(startOffsetKey!) ?? startOffset : startOffset))\r\n\t\t}\r\n\t\tif(computedEndOffset == 0) {\r\n\t\t\tcomputedEndOffset = unitConvert(endOffset)\r\n\t\t}\r\n\t\t\r\n\t\tif(color.value == defalutColor && colorKey != null) {\r\n\t\t\tcolor.value = elementRef.value?.style.getPropertyValue(colorKey!) ?? defalutColor\r\n\t\t\t// if(color.value.length == 0) {\r\n\t\t\t// \tcolor.value = defalutColor\r\n\t\t\t// }\r\n\t\t}\r\n\t\tctx.strokeStyle = color.value;\r\n\t\tctx.lineWidth = lineWidth;\r\n\r\n\t\t// 根据方向计算坐标\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'top':\r\n\t\t\t\tctx.moveTo(computedStartOffset, 0);\r\n\t\t\t\tctx.lineTo(rect.width - computedEndOffset, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bottom':\r\n\t\t\t\tctx.moveTo(computedStartOffset, rect.height - 0.25);\r\n\t\t\t\tctx.lineTo(rect.width - computedEndOffset, rect.height - 0.25);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\t\tctx.moveTo(0, computedStartOffset);\r\n\t\t\t\tctx.lineTo(0, rect.height - computedEndOffset);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tctx.moveTo(rect.width, computedStartOffset);\r\n\t\t\t\tctx.lineTo(rect.width, rect.height - computedEndOffset);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tctx.stroke();\r\n\t\tctx.update();\r\n\t};\r\n\t\r\n\tconst setupResizeObserver = () => {\r\n\t\t// 监听尺寸变化（如果启用）\r\n\t\tif (watchSize) {\r\n\t\t\tif (resizeObserver == null) {\r\n\t\t\t\tresizeObserver = new UniResizeObserver((entries : Array<UniResizeObserverEntry>) => {\r\n\t\t\t\t\tif(!bordered.value) return\r\n\t\t\t\t\trenderBorder();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\twatchEffect(()=>{\r\n\t\t\t\tif (elementRef.value != null) {\r\n\t\t\t\t\tresizeObserver!.observe(elementRef.value!);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t// 清理函数（卸载时取消监听）\r\n\tconst dispose = () => {\r\n\t\tif (resizeObserver != null && elementRef.value != null) {\r\n\t\t\t// resizeObserver.unobserve(elementRef.value!);\r\n\t\t\tresizeObserver!.disconnect();\r\n\t\t\tresizeObserver = null;\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst clearBorder = ()=> {\r\n\t\tif (elementRef.value == null) return;\r\n\t\tconst ctx = elementRef.value!.getDrawableContext();\r\n\t\tif (ctx == null) return;\r\n\t\tbordered.value = false\r\n\t\tctx.reset()\r\n\t\tctx.update()\r\n\t}\r\n\t\r\n\tsetupResizeObserver()\r\n\t// 初始绘制\r\n\tif(immediate) {\r\n\t\trenderBorder();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn {\r\n\t\trenderBorder, // 手动触发绘制\r\n\t\tdispose,    // 清理监听\r\n\t\tclearBorder,\r\n\t\tcolor\r\n\t} as UseDrawBorderReturn\r\n\t\r\n}","// @ts-nocheck\nexport type PickerValue = any; //string | number;\nexport type PickerColumnItem = {\n    id: any | null;\n    label: string;\n    disabled: boolean | null;\n    value: string; //string | number;\n    children: PickerColumn | null;\n};\nexport type PickerColumn = PickerColumnItem[];\nexport type PickerPickEvent = {\n    values: PickerValue[];\n    column: number;\n    index: number;\n};\nexport type PickerConfirmEvent = {\n    values: PickerValue[];\n    indexs: number[];\n    items: PickerColumnItem[];\n};\n/**\n * 定义比较数组时返回的变化对象类型。\n */\nexport type PickerChangeInfo = {\n    column: number; // 变化的列索引\n    direction: 1 | -1 | 0; // 变化方向：1 表示增加，-1 表示减少, 0表示无变化\n    index: number; // 变化后的新值,在列表中表示下标\n};\nexport interface PickerProps {\n    /**\n      * 取消按钮文字\n      */\n    cancelBtn?: string;\n    cancelStyle?: string | UTSJSONObject;\n    /**\n      * 确定按钮文字\n      */\n    confirmBtn?: string;\n    confirmStyle?: string | UTSJSONObject;\n    /**\n      * 标题\n      */\n    title?: string;\n    titleStyle?: string | UTSJSONObject;\n    /**\n     * 用来定义 value / label 在 `options` 中对应的字段别名\n     */\n    keys?: UTSJSONObject;\n    /**\n     * 配置每一列的选项\n     */\n    columns: PickerColumn[];\n    /**\n      * 选中值\n      */\n    modelValue?: PickerValue[];\n    defaultValue?: PickerValue[];\n    value?: PickerValue[];\n    /**\n     * 是否为加载状态\n     */\n    loading: boolean;\n    loadingColor?: string;\n    loadingMaskColor?: string;\n    loadingSize: string;\n    itemHeight?: string;\n    itemColor?: string;\n    itemFontSize?: string;\n    itemActiveColor?: string;\n    itemActiveFontWeight?: number;\n    indicatorStyle?: string;\n    bgColor?: string;\n    groupHeight?: string;\n    radius?: string;\n    resetIndex: boolean;\n}\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nexport type PickerValue = any;//string | number;\r\nexport type PickerColumnItem = {\r\n\tid: any|null;\r\n\tlabel : string;\r\n\tdisabled: boolean | null;\r\n\tvalue : string;//string | number;\r\n\tchildren : PickerColumn | null\r\n}\r\nexport type PickerColumn = PickerColumnItem[];\r\nexport type PickerPickEvent= {\r\n\tvalues: PickerValue[];\r\n\tcolumn : number;\r\n\tindex : number;\r\n}\r\nexport type PickerConfirmEvent = {\r\n\tvalues: PickerValue[]\r\n\tindexs: number[]\r\n\titems: PickerColumnItem[]\r\n}\r\n/**\n * 定义比较数组时返回的变化对象类型。\n */\nexport type PickerChangeInfo = {\n    column: number;           // 变化的列索引\n    direction: 1 | -1 | 0;         // 变化方向：1 表示增加，-1 表示减少, 0表示无变化\n    index: number; // 变化后的新值,在列表中表示下标\n}\r\n\r\n\r\nexport interface PickerProps {\r\n\t/**\r\n\t  * 取消按钮文字\r\n\t  */\r\n\tcancelBtn ?: string;\r\n\tcancelStyle ?: string | UTSJSONObject;\r\n\t/**\r\n\t  * 确定按钮文字\r\n\t  */\r\n\tconfirmBtn ?: string;\r\n\tconfirmStyle ?: string | UTSJSONObject;\r\n\t/**\r\n\t  * 标题\r\n\t  */\r\n\ttitle ?: string;\r\n\ttitleStyle ?: string | UTSJSONObject;\r\n\t/**\r\n\t * 用来定义 value / label 在 `options` 中对应的字段别名\r\n\t */\r\n\tkeys?: UTSJSONObject;\r\n\t/**\r\n\t * 配置每一列的选项\r\n\t */\r\n\tcolumns : PickerColumn[];\r\n\t/**\r\n\t  * 选中值\r\n\t  */\r\n\tmodelValue ?: PickerValue[];\r\n\tdefaultValue ?: PickerValue[];\r\n\tvalue ?: PickerValue[];\r\n\t/**\r\n\t * 是否为加载状态\r\n\t */\r\n\tloading: boolean;\r\n\tloadingColor?: string;\r\n\tloadingMaskColor?: string;\r\n\tloadingSize: string;\r\n\t\r\n\titemHeight?: string;\r\n\titemColor?: string;\r\n\titemFontSize?: string;\r\n\titemActiveColor?: string;\r\n\titemActiveFontWeight?: number;\r\n\t\r\n\tindicatorStyle?: string;\r\n\tbgColor?:string;\r\n\tgroupHeight?:string;\r\n\tradius?:string;\r\n\tresetIndex: boolean \r\n}","// @ts-nocheck\n/**\n * 在数组的指定位置插入或更新值。\n * 如果指定的索引小于数组的长度，则更新该位置的值。\n * 如果指定的索引大于或等于数组的长度，则将值添加到数组的末尾。\n *\n * @param {number[]} arr - 要操作的数字数组。\n * @param {number} index - 要插入或更新值的索引位置。\n * @param {number} value - 要插入或更新的值。\n */\nexport function pushAt<T>(arr: T[], index: number, value: T){\n\n\tif (index < arr.length) {\n\t\tarr[index] = value;\n\t} else {\n\t\tarr.push(value);\n\t}\n\n\n\n\n};","// @ts-nocheck\nimport type { PickerColumnItem, PickerValue } from '../l-picker/type';\nexport type ManageChildInList = (child: LPickerItemComponentPublicInstance, shouldAdd: boolean) => void;\nexport type OnPick = (value: PickerValue, index: number, column: number) => void;\nexport type UpdateItems = (value: PickerValue, index: number, column: number) => void;\nexport interface PickerItemProps {\n    options: PickerColumnItem[];\n    value?: PickerValue;\n    column: number;\n    name?: string | number;\n}\nimport { LPickerItemComponentPublicInstance } from \"@/uni_modules/lime-picker/components/l-picker-item/l-picker-item.uvue\";\n//# sourceMappingURL=type.uts.map","// @ts-nocheck\r\nimport type{ PickerColumnItem, PickerValue } from '../l-picker/type';\r\n\r\nexport type ManageChildInList = (child: LPickerItemComponentPublicInstance, shouldAdd: boolean) => void;\r\nexport type OnPick = (value: PickerValue, index:number, column: number) => void;\r\nexport type UpdateItems = (value: PickerValue, index:number, column: number) => void;\r\n\r\nexport interface PickerItemProps {\r\n\toptions: PickerColumnItem[]\r\n\tvalue?: PickerValue;\r\n\tcolumn: number\r\n\tname?: string|number\r\n}\nimport { LPickerItemComponentPublicInstance  } from \"@/uni_modules/lime-picker/components/l-picker-item/l-picker-item.uvue\"","import _easycom_l_picker_item from '@/uni_modules/lime-picker/components/l-picker-item/l-picker-item.uvue';\nimport { PickerProps, PickerColumn, PickerValue, PickerColumnItem, PickerConfirmEvent, PickerPickEvent } from './type';\nimport { pushAt } from './utils';\nimport { unitConvert } from '@/uni_modules/lime-shared/unitConvert';\nimport { useLoading } from '@/uni_modules/lime-loading';\nconst __sfc__ = defineComponent({\n    __name: 'l-picker',\n    __props: PickerProps,\n    props: {\n        cancelBtn: { type: String, required: false },\n        cancelStyle: { type: [String, UTSJSONObject], required: false },\n        confirmBtn: { type: String, required: false },\n        confirmStyle: { type: [String, UTSJSONObject], required: false },\n        title: { type: String, required: false },\n        titleStyle: { type: [String, UTSJSONObject], required: false },\n        keys: { type: UTSJSONObject, required: false },\n        columns: { type: Array as PropType<PickerColumn[]>, required: true, default: [] as PickerColumn[] },\n        modelValue: { type: Array as PropType<PickerValue[]>, required: false },\n        defaultValue: { type: Array as PropType<PickerValue[]>, required: false },\n        value: { type: Array as PropType<PickerValue[]>, required: false },\n        loading: { type: Boolean, required: true, default: false },\n        loadingColor: { type: String, required: false },\n        loadingMaskColor: { type: String, required: false },\n        loadingSize: { type: String, required: true, default: '64rpx' },\n        itemHeight: { type: String, required: false },\n        itemColor: { type: String, required: false },\n        itemFontSize: { type: String, required: false },\n        itemActiveColor: { type: String, required: false },\n        itemActiveFontWeight: { type: Number, required: false },\n        indicatorStyle: { type: String, required: false },\n        bgColor: { type: String, required: false },\n        groupHeight: { type: String, required: false },\n        radius: { type: String, required: false },\n        resetIndex: { type: Boolean, required: true, default: false }\n    },\n    emits: ['change', 'cancel', 'pick', 'confirm', 'update:modelValue', 'update:value'],\n    setup(__props): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        /**\n         * Picker 选择器组件\n         * @description 多列数据选择器，支持级联数据展示和自定义样式配置\n         * <br>插件类型：LPickerComponentPublicInstance\n         * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-picker\n         *\n         * @property {string} cancelBtn 取消按钮文字\n         * @property {string | UTSJSONObject} cancelStyle 取消按钮样式\n         * @property {string} confirmBtn 确定按钮文字\n         * @property {string | UTSJSONObject} confirmStyle 确定按钮样式\n         * @property {string} title 标题文字\n         * @property {string | UTSJSONObject} titleStyle 标题样式\n         * @property {UTSJSONObject} keys 字段别名配置（例：{value: 'id', label: 'name'}）\n         * @property {PickerColumn[]} columns 选择器列数据（必填）\n         * @property {PickerValue[]} modelValue 选中值（支持v-model）\n         * @property {PickerValue[]} defaultValue 默认选中值\n         * @property {PickerValue[]} value 选中值（兼容旧版）\n         * @property {boolean} loading 是否显示加载状态\n         * @property {string} loadingColor 加载图标颜色\n         * @property {string} loadingMaskColor 加载遮罩颜色\n         * @property {string} loadingSize 加载图标尺寸\n         * @property {string} itemHeight 选项行高度\n         * @property {string} itemColor 选项文字颜色\n         * @property {string} itemFontSize 选项字体大小\n         * @property {string} itemActiveColor 选中项颜色\n         * @property {string} indicatorStyle 指示器样式\n         * @property {string} bgColor 背景颜色\n         * @property {string} groupHeight 选项组高度\n         * @property {string} radius 圆角半径\n         * @property {boolean} resetIndex 是否重置选中索引\n         *\n         * @event {Function} confirm 点击确定时触发（事件参数：PickerConfirmEvent）\n         * @event {Function} cancel 点击取消时触发\n         * @event {Function} change 值变化时触发（事件参数：PickerPickEvent）\n         * @event {Function} column-change 列数据变化时触发（事件参数：PickerChangeInfo）\n         */\n        function emit(event: string, ...do_not_transform_spread: Array<any | null>) {\n            __ins.emit(event, ...do_not_transform_spread);\n        }\n        const props = __props;\n        const pickerItemInstanceArray = reactive<LPickerItemComponentPublicInstance[]>([]);\n        const ohosShow = ref(0);\n        const modelValue = ref<PickerValue[]>(props.value ?? props.modelValue ?? props.defaultValue ?? []);\n        const pickerValue = computed({\n            set(value: PickerValue[]) {\n                if (value.join('') == modelValue.value.join(''))\n                    return;\n                modelValue.value = value;\n                emit('update:modelValue', value);\n                emit('change', value);\n            },\n            get(): PickerValue[] {\n                return props.value ?? props.modelValue ?? modelValue.value;\n            }\n        } as WritableComputedOptions<PickerValue[]>);\n        const isEmpty = computed((): boolean => {\n            return props.columns.length == 0 && pickerItemInstanceArray.every((child): boolean => child.options.length == 0);\n        });\n        const styles = computed((): Map<string, any> => {\n            const style = new Map<string, any>();\n            if (props.bgColor != null) {\n                style.set('background', props.bgColor!);\n            }\n            if (props.radius != null) {\n                style.set('border-top-left-radius', props.radius!);\n                style.set('border-top-right-radius', props.radius!);\n            }\n            return style;\n        });\n        const curIndexArray = ref<number[]>([]);\n        const curValueArray = ref([...pickerValue.value]);\n        const curItemArray: PickerColumnItem[] = [];\n        const realColumns = computed((): PickerColumn[] => {\n            const pickerColumns = pickerItemInstanceArray.map((child): PickerColumn => child.options);\n            if (pickerColumns.length > 0) {\n                return pickerColumns;\n            }\n            return props.columns;\n        });\n        const manageChildInList = (child: LPickerItemComponentPublicInstance, shouldAdd: boolean) => {\n            const index = pickerItemInstanceArray.indexOf(child);\n            if (shouldAdd) {\n                if (index != -1)\n                    return;\n                pickerItemInstanceArray.push(child);\n            }\n            else {\n                if (index == -1)\n                    return;\n                pickerItemInstanceArray.splice(index, 1);\n            }\n        };\n        const updateItems = (item: PickerColumnItem, index: number, column: number) => {\n            pushAt(curIndexArray.value, column, index);\n            pushAt(curValueArray.value, column, item.value);\n            pushAt(curItemArray, column, item);\n        };\n        const updatePickerItems = () => {\n            const _indexs: number[] = [];\n            const _values: any[] = [];\n            pickerItemInstanceArray.forEach((child, column) => {\n                if (child.options.length == 0)\n                    return;\n                const value = curValueArray.value.length > column ? curValueArray.value[column] : null;\n                // const index = value == null ? 0 : child.getIndexByValue(value)\n                // child.setIndex(index)\n                const index: number = (value == null ? 0 : child.$callMethod('getIndexByValue', value)) as number;\n                child.$callMethod('setIndex', index);\n                const item = child.options[index];\n                _indexs.push(index);\n                _values.push(item.value);\n                pushAt(curItemArray, column, item);\n                // pushAt(curIndexArray.value, column, index)\n                // pushAt(curValueArray.value, column, item.value)\n                // // 不能改变单向数据流, 只有值不存在时候才处理\n                // if(pickerValue.value.length == 0) {\n                // \tpickerValue.value = [...curValueArray.value]\n                // }\n                // if(pickerValue.value.join('') == curValueArray.value.join('')) return\n                // pickerValue.value = [...curValueArray.value]\n            });\n            if (curIndexArray.value.join('') == _indexs.join(''))\n                return;\n            curIndexArray.value = _indexs;\n            curValueArray.value = _values;\n            // if(pickerValue.value.length == 0) {\n            pickerValue.value = [...curValueArray.value];\n            // }\n        };\n        const onPick = (item: PickerColumnItem, index: number, column: number) => {\n            if (curIndexArray.value[column] == index)\n                return;\n            pushAt(curIndexArray.value, column, index);\n            pushAt(curValueArray.value, column, item.value);\n            pushAt(curItemArray, column, item);\n            const obj: PickerPickEvent = {\n                values: curValueArray.value,\n                column,\n                index\n            };\n            pickerValue.value = [...curValueArray.value];\n            emit('pick', obj);\n        };\n        const onCancel = (e: UniPointerEvent) => {\n            updatePickerItems();\n            emit('cancel', e);\n        };\n        const onConfirm = (e: UniPointerEvent) => {\n            const values = [...curValueArray.value];\n            const indexs = [...curIndexArray.value];\n            const items = curItemArray.map((item): PickerColumnItem => toRaw(item));\n            if (pickerValue.value.join('') != values.join('')) {\n                pickerValue.value = values;\n            }\n            const obj: PickerConfirmEvent = {\n                values,\n                indexs,\n                items\n            };\n            emit('confirm', obj);\n        };\n        const stopPickerValue = watch(pickerValue, () => {\n            if (pickerValue.value.join('') == curValueArray.value.join(''))\n                return;\n            curValueArray.value = pickerValue.value.map((item: PickerValue): any => item);\n            updatePickerItems();\n        });\n        const stopColumns = watch(realColumns, () => {\n            updatePickerItems();\n            // nextTick(() => {\n            // \tsetTimeout(()=>{\n            // \t\tupdatePickerItems()\n            // \t},2000)\n            // })\n        });\n        onMounted(() => {\n            nextTick(() => {\n                if (pickerValue.value.join('') != curValueArray.value.join('') && pickerValue.value.length > 0) {\n                    curValueArray.value = [...pickerValue.value];\n                    updatePickerItems();\n                }\n            });\n        });\n        const loadingRef = ref<UniElement | null>(null);\n        // const {play, clear, failed} = useLoading(loadingRef, 'circular', props.loadingColor?? '#3283ff', unitConvert(props.loadingSize))\n        const loadingAni = useLoading(loadingRef);\n        loadingAni.type = 'circular';\n        loadingAni.color = props.loadingColor ?? '#3283ff';\n        loadingAni.ratio = unitConvert(props.loadingSize);\n        watchEffect(() => {\n            if (props.loading) {\n                loadingAni.play();\n            }\n            else {\n                loadingAni.clear();\n            }\n        });\n        onBeforeUnmount(() => {\n            stopPickerValue();\n            stopColumns();\n        });\n        provide('limePicker', props);\n        provide('limePickerOnPick', onPick);\n        provide('limePickerUpdateItems', updateItems);\n        provide('limePickerItems', pickerItemInstanceArray);\n        provide('limePickerManageChildInList', manageChildInList);\n        return (): any | null => {\n            const _component_l_picker_item = resolveEasyComponent(\"l-picker-item\", _easycom_l_picker_item);\n            return createElementVNode(\"view\", utsMapOf({\n                class: \"l-picker\",\n                style: normalizeStyle([unref(styles)]),\n                ref: \"pickerRef\"\n            }), [\n                isTrue(_ctx.cancelBtn != null || _ctx.title != null || _ctx.confirmBtn != null)\n                    ? createElementVNode(\"view\", utsMapOf({\n                        class: \"l-picker__toolbar\",\n                        key: unref(ohosShow)\n                    }), [\n                        _ctx.cancelBtn != null\n                            ? createElementVNode(\"text\", utsMapOf({\n                                class: \"l-picker__cancel\",\n                                key: unref(ohosShow),\n                                style: normalizeStyle(_ctx.cancelStyle ?? ''),\n                                onClick: onCancel\n                            }), toDisplayString(_ctx.cancelBtn), 5 /* TEXT, STYLE */)\n                            : createCommentVNode(\"v-if\", true),\n                        createElementVNode(\"text\", utsMapOf({\n                            class: \"l-picker__title\",\n                            key: unref(ohosShow),\n                            style: normalizeStyle(_ctx.titleStyle ?? '')\n                        }), toDisplayString(_ctx.title), 5 /* TEXT, STYLE */),\n                        _ctx.confirmBtn != null\n                            ? createElementVNode(\"text\", utsMapOf({\n                                class: \"l-picker__confirm\",\n                                key: unref(ohosShow),\n                                style: normalizeStyle(_ctx.confirmStyle ?? ''),\n                                onClick: onConfirm\n                            }), toDisplayString(_ctx.confirmBtn), 5 /* TEXT, STYLE */)\n                            : createCommentVNode(\"v-if\", true)\n                    ])\n                    : createCommentVNode(\"v-if\", true),\n                renderSlot(_ctx.$slots, \"header\"),\n                createElementVNode(\"view\", utsMapOf({\n                    class: \"l-picker__main\",\n                    style: normalizeStyle([_ctx.groupHeight != null ? utsMapOf({ height: _ctx.groupHeight }) : utsMapOf<string, any | null>({})])\n                }), [\n                    renderSlot(_ctx.$slots, \"default\", {}, (): any[] => [\n                        createElementVNode(Fragment, null, RenderHelpers.renderList(props.columns, (options, i, __index, _cached): any => {\n                            return createVNode(_component_l_picker_item, utsMapOf({\n                                options: options,\n                                key: i,\n                                column: i,\n                                value: unref(pickerValue).length > i ? unref(pickerValue)[i] : null\n                            }), null, 8 /* PROPS */, [\"options\", \"column\", \"value\"]);\n                        }), 128 /* KEYED_FRAGMENT */)\n                    ]),\n                    isTrue(unref(isEmpty))\n                        ? createElementVNode(\"view\", utsMapOf({\n                            key: 0,\n                            class: \"l-picker__empty\"\n                        }), [\n                            renderSlot(_ctx.$slots, \"empty\")\n                        ])\n                        : createCommentVNode(\"v-if\", true)\n                ], 4 /* STYLE */),\n                renderSlot(_ctx.$slots, \"footer\"),\n                isTrue(_ctx.loading)\n                    ? createElementVNode(\"view\", utsMapOf({\n                        key: 1,\n                        class: \"l-picker__loading\",\n                        ref_key: \"loadingRef\",\n                        ref: loadingRef,\n                        style: normalizeStyle([_ctx.loadingMaskColor != null ? utsMapOf({ background: _ctx.loadingMaskColor }) : utsMapOf<string, any | null>({})])\n                    }), null, 4 /* STYLE */)\n                    : createCommentVNode(\"v-if\", true)\n            ], 4 /* STYLE */);\n        };\n    }\n});\nexport default __sfc__;\nexport type LPickerComponentPublicInstance = InstanceType<typeof __sfc__>;\nconst GenUniModulesLimePickerComponentsLPickerLPickerStyles = [utsMapOf([[\"l-picker\", padStyleMapOf(utsMapOf([[\"position\", \"relative\"], [\"backgroundColor\", \"#ffffff\"], [\"borderTopLeftRadius\", \"24rpx\"], [\"borderTopRightRadius\", \"24rpx\"]]))], [\"l-picker__toolbar\", padStyleMapOf(utsMapOf([[\"display\", \"flex\"], [\"alignItems\", \"center\"], [\"justifyContent\", \"space-between\"], [\"overflow\", \"hidden\"], [\"height\", \"116rpx\"], [\"flexDirection\", \"row\"], [\"position\", \"relative\"]]))], [\"l-picker__title\", padStyleMapOf(utsMapOf([[\"position\", \"absolute\"], [\"left\", \"50%\"], [\"top\", \"50%\"], [\"transform\", \"translateX(-50%) translateY(-50%)\"], [\"textAlign\", \"center\"], [\"overflow\", \"hidden\"], [\"whiteSpace\", \"nowrap\"], [\"textOverflow\", \"ellipsis\"], [\"color\", \"rgba(0,0,0,0.88)\"], [\"lineHeight\", \"52rpx\"], [\"fontWeight\", \"700\"], [\"fontSize\", 18]]))], [\"l-picker__cancel\", padStyleMapOf(utsMapOf([[\"fontSize\", 16], [\"lineHeight\", \"116rpx\"], [\"height\", \"100%\"], [\"paddingTop\", 0], [\"paddingRight\", \"32rpx\"], [\"paddingBottom\", 0], [\"paddingLeft\", \"32rpx\"], [\"color\", \"rgba(0,0,0,0.65)\"]]))], [\"l-picker__confirm\", padStyleMapOf(utsMapOf([[\"fontSize\", 16], [\"lineHeight\", \"116rpx\"], [\"height\", \"100%\"], [\"paddingTop\", 0], [\"paddingRight\", \"32rpx\"], [\"paddingBottom\", 0], [\"paddingLeft\", \"32rpx\"], [\"color\", \"#3283ff\"]]))], [\"l-picker__main\", padStyleMapOf(utsMapOf([[\"display\", \"flex\"], [\"height\", \"400rpx\"], [\"flexDirection\", \"row\"], [\"paddingTop\", 0], [\"paddingRight\", \"16rpx\"], [\"paddingBottom\", 0], [\"paddingLeft\", \"16rpx\"]]))], [\"l-picker__empty\", padStyleMapOf(utsMapOf([[\"pointerEvents\", \"none\"], [\"justifyContent\", \"center\"], [\"alignItems\", \"center\"], [\"display\", \"flex\"], [\"position\", \"absolute\"], [\"top\", 0], [\"bottom\", 0], [\"left\", 0], [\"right\", 0], [\"zIndex\", 3]]))], [\"l-picker__loading\", padStyleMapOf(utsMapOf([[\"zIndex\", 3], [\"backgroundImage\", \"none\"], [\"backgroundColor\", \"rgba(255,255,255,0.9)\"], [\"justifyContent\", \"center\"], [\"alignItems\", \"center\"], [\"display\", \"flex\"], [\"position\", \"absolute\"], [\"top\", 0], [\"bottom\", 0], [\"left\", 0], [\"right\", 0]]))]])];\nimport { LPickerItemComponentPublicInstance } from \"@/uni_modules/lime-picker/components/l-picker-item/l-picker-item.uvue\";\n//# sourceMappingURL=l-picker.uvue.map","import { unitConvert } from '@/uni_modules/lime-shared/unitConvert';\nimport { clamp } from '@/uni_modules/lime-shared/clamp';\nimport { PickerItemProps, ManageChildInList, OnPick, UpdateItems } from './type';\nimport { PickerColumnItem, PickerValue } from '../l-picker/type';\nconst __sfc__ = defineComponent({\n    __name: 'l-picker-item',\n    __props: PickerItemProps,\n    props: {\n        options: { type: Array as PropType<PickerColumnItem[]>, required: true, default: [] as PickerColumnItem[] },\n        value: { type: Object, required: false },\n        column: { type: Number, required: true, default: -1 },\n        name: { type: [String, Number], required: false }\n    },\n    setup(__props, { expose: __expose }: SetupContext): any | null {\n        const __ins = getCurrentInstance()!;\n        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;\n        const _cache = __ins.renderCache;\n        /**\n         * PickerItem 选择器子项组件\n         * @description 用于构建多列选择器的单个列项，通常作为 Picker 组件的子组件使用\n         * <br>插件类型：LPickerItemComponentPublicInstance\n         * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-picker\n         *\n         * @property {PickerColumnItem[]} options 当前列的选项列表（必填）\n         * @property {PickerValue} value 当前选中值\n         * @property {number} column 列索引标识（从0开始计数）\n         * @property {string | number} name 列名称标识符\n         */\n        const instance = getCurrentInstance()!;\n        const props = __props;\n        const picker = inject<LPickerComponentPublicInstance | null>('limePicker', null);\n        const pickerItemInstanceArray = inject<LPickerItemComponentPublicInstance[] | null>('limePickerItems', null);\n        const manageChildInList = inject<ManageChildInList | null>('limePickerManageChildInList', null);\n        manageChildInList?.(instance.proxy! as LPickerItemComponentPublicInstance, true);\n        const onPick = inject<OnPick | null>('limePickerOnPick', null);\n        const updateItems = inject<UpdateItems | null>('limePickerUpdateItems', null);\n        // web 如果初始是0 当数据加载后 无法指向0\n        const curIndex = ref(0);\n        const curValue = ref<PickerValue | null>(props.value);\n        const column = computed((): number => props.column != -1 ? props.column : pickerItemInstanceArray?.indexOf(instance.proxy! as LPickerItemComponentPublicInstance) ?? props.column);\n        const elementPosition = computed((): boolean[] => {\n            const totalElements = pickerItemInstanceArray?.length ?? 0;\n            return [column.value == 0, column.value == totalElements - 1];\n        });\n        const innerIndex = computed((): number[] => [curIndex.value]);\n        const indicatorStyles = computed((): string => {\n            const [isFirst, isLast] = elementPosition.value;\n            let style = ``;\n            if (isFirst) {\n                style += 'border-top-left-radius:12rpx; border-bottom-left-radius:12rpx;';\n            }\n            if (isLast) {\n                style += 'border-top-right-radius:12rpx; border-bottom-right-radius:12rpx;';\n            }\n            return `\r\n\t\t\t${style}\r\n\t\t\theight: ${picker?.itemHeight ?? '50px'};\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.04); ${picker?.indicatorStyle}`;\n        });\n        const itemStyles = computed((): Map<string, any> => {\n            const style = new Map<string, any>();\n            if (picker?.itemColor != null) {\n                style.set('color', picker.itemColor!);\n            }\n            if (picker?.itemFontSize != null) {\n                style.set('font-size', picker.itemFontSize!);\n            }\n            if (picker?.itemHeight != null) {\n                style.set('line-height', picker.itemHeight!);\n                style.set('height', picker.itemHeight!);\n            }\n            return style;\n        });\n        const itemActiveStyles = computed((): Map<string, any> => {\n            const style = new Map<string, any>();\n            if (picker?.itemActiveColor != null) {\n                style.set('color', picker.itemActiveColor!);\n            }\n            if (picker?.itemActiveFontWeight != null) {\n                style.set('font-weight', picker.itemActiveFontWeight!);\n            }\n            return style;\n        });\n        const getIndexByValue = (val: PickerValue | null): number => {\n            let defaultIndex = 0;\n            if (val != null) {\n                defaultIndex = props.options.findIndex((item): boolean => item.value == val);\n            }\n            return defaultIndex < 0 ? 0 : defaultIndex;\n        };\n        const setIndex = (index: number) => {\n            let lastIndex = curIndex.value;\n            let _index = clamp(index, 0, props.options.length - 1);\n            if (props.options.length > _index) {\n                curIndex.value = _index;\n                curValue.value = props.options[_index].value;\n            }\n        };\n        const setValue = (value: PickerValue | null) => {\n            if (value == curValue.value)\n                return;\n            curValue.value = value;\n            const index = getIndexByValue(value);\n            setIndex(index);\n        };\n        const setOptions = () => { };\n        const setUpdateItems = () => {\n            const index = clamp(curIndex.value, 0, props.options.length - 1);\n            const curItem = props.options.length > index ? props.options[index] : null;\n            if (curItem == null)\n                return;\n            updateItems?.(curItem, index, column.value);\n        };\n        const handlePick = (e: UniPickerViewChangeEvent) => {\n            if (props.options.length == 0)\n                return;\n            const index = clamp(e.detail.value[0], 0, props.options.length - 1);\n            const curItem = props.options[index];\n            if (index == curIndex.value)\n                return;\n            setIndex(index);\n            onPick?.(curItem, index, column.value);\n        };\n        const stopValue = watch((): PickerValue | null => props.value, (v: PickerValue | null) => {\n            setValue(v);\n            setUpdateItems();\n        }, { immediate: true });\n        const itemRef = ref<UniElement | null>(null);\n        const updateItemStyle = () => {\n            if (itemRef.value != null) {\n                const ctx = itemRef.value!.getDrawableContext()!;\n                const height = unitConvert(picker?.itemHeight ?? 50);\n                const fontSize = unitConvert(picker?.itemFontSize ?? '32rpx');\n                const rect = itemRef.value!.getBoundingClientRect();\n                const x = itemRef.value!.offsetWidth / 2;\n                const itemActiveFontWeight = picker?.itemActiveFontWeight ?? 700;\n                itemRef.value!.style.setProperty('height', height * props.options.length);\n                ctx.reset();\n                ctx.fillStyle = picker?.itemActiveColor ?? 'rgba(0,0,0,0.88)';\n                ctx.font = `${fontSize}px`;\n                ctx.textAlign = 'center';\n                ctx.lineWidth = 0.5;\n                props.options.forEach((item, index) => {\n                    const y = height * index + fontSize + (height - fontSize) * 0.4; //(height - fontSize * 1.1)\n                    ctx.fillText(item.label, x, y);\n                    if (index == curIndex.value && itemActiveFontWeight > 600) {\n                        ctx.strokeText(item.label, x, y);\n                    }\n                });\n                ctx.update();\n            }\n        };\n        // 防止更新后尺寸不对\n        watchEffect(() => {\n            if (curIndex.value > 0) { }\n            nextTick(updateItemStyle);\n        });\n        const stop = watch((): PickerColumnItem[] => props.options, (v: PickerColumnItem[], o: PickerColumnItem[]) => {\n            nextTick(updateItemStyle);\n        });\n        const resizeObserver = new UniResizeObserver((entries: Array<UniResizeObserverEntry>) => {\n            updateItemStyle();\n        });\n        const stopWatch = watch((): UniElement | null => itemRef.value, (el: UniElement | null) => {\n            if (el == null)\n                return;\n            resizeObserver.observe(el);\n        });\n        // onMounted(() => {\n        // \tnextTick(updateItemStyle)\n        // })\n        onBeforeUnmount(() => {\n            manageChildInList?.(instance.proxy! as LPickerItemComponentPublicInstance, false);\n            stop();\n            stopWatch();\n            resizeObserver.disconnect();\n        });\n        // onMounted(()=>{\n        // \tif(props.options.length > 0 && curIndex.value == -1) {\n        // \t\tcurIndex.value = 0\n        // \t}\n        // })\n        __expose({\n            setIndex,\n            setValue,\n            // setOptions,\n            // setUpdateItems,\n            getIndexByValue\n        });\n        return (): any | null => {\n            const _component_picker_view_column = resolveComponent(\"picker-view-column\");\n            const _component_picker_view = resolveComponent(\"picker-view\");\n            return createVNode(_component_picker_view, utsMapOf({\n                class: \"l-picker-item__group\",\n                style: normalizeStyle(utsMapOf({ opacity: _ctx.options.length > 0 ? 1 : 0 })),\n                \"indicator-style\": unref(indicatorStyles),\n                value: unref(innerIndex),\n                onChange: handlePick,\n                \"indicator-class\": \"l-picker-item__indicator\"\n            }), utsMapOf({\n                default: withSlotCtx((): any[] => [\n                    createVNode(_component_picker_view_column, utsMapOf({ class: \"l-picker-item__wrapper\" }), utsMapOf({\n                        default: withSlotCtx((): any[] => [\n                            createElementVNode(\"view\", utsMapOf({\n                                ref_key: \"itemRef\",\n                                ref: itemRef\n                            }), null, 512 /* NEED_PATCH */)\n                        ]),\n                        _: 1 /* STABLE */\n                    }))\n                ]),\n                _: 1 /* STABLE */\n            }), 8 /* PROPS */, [\"style\", \"indicator-style\", \"value\"]);\n        };\n    }\n});\nexport default __sfc__;\nexport type LPickerItemComponentPublicInstance = InstanceType<typeof __sfc__>;\nconst GenUniModulesLimePickerComponentsLPickerItemLPickerItemStyles = [utsMapOf([[\"l-picker-item__group\", padStyleMapOf(utsMapOf([[\"flex\", 1]]))], [\"l-picker-item__group-item\", padStyleMapOf(utsMapOf([[\"height\", 50], [\"lineHeight\", \"50px\"], [\"textAlign\", \"center\"], [\"transitionDuration\", \"100ms\"], [\"transitionProperty\", \"fontWeight,color\"], [\"transitionTimingFunction\", \"linear\"], [\"fontWeight\", \"400\"], [\"color\", \"rgba(0,0,0,0.88)\"], [\"fontSize\", 16], [\"whiteSpace\", \"nowrap\"]]))], [\"l-picker-item__group-item--active\", padStyleMapOf(utsMapOf([[\"color\", \"rgba(0,0,0,0.88)\"], [\"fontWeight\", \"700\"]]))], [\"l-picker-item__indicator\", padStyleMapOf(utsMapOf([[\"left\", \"0rpx\"], [\"right\", \"0rpx\"], [\"width\", \"auto\"], [\"height\", 50], [\"pointerEvents\", \"none\"], [\"backgroundColor\", \"rgba(0,0,0,0.02)\"]]))], [\"@TRANSITION\", utsMapOf([[\"l-picker-item__group-item\", utsMapOf([[\"duration\", \"100ms\"], [\"property\", \"fontWeight,color\"], [\"timingFunction\", \"linear\"]])]])]])];\nimport { LPickerComponentPublicInstance } from \"@/uni_modules/lime-picker/components/l-picker/l-picker.uvue\";\n//# sourceMappingURL=l-picker-item.uvue.map","export type UploadFile = {\n    url: string;\n    path?: string;\n    name?: string;\n    thumb?: string;\n    size?: number;\n    width?: number;\n    height?: number;\n    duration?: number;\n    type?: 'image' | 'video';\n    percent?: number;\n    status?: 'loading' | 'reload' | 'failed' | 'done';\n};\n//# sourceMappingURL=index.uts.map","export type UploadFile = {\r\n\turl : string;\r\n\tpath ?: string;\r\n\tname ?: string;\r\n\tthumb ?: string;\r\n\tsize ?: number;\r\n\twidth ?: number;\r\n\theight ?: number;\r\n\tduration ?: number;\r\n\ttype ?: 'image' | 'video';\r\n\tpercent ?: number;\r\n\tstatus ?: 'loading' | 'reload' | 'failed' | 'done';\r\n}\r\n","import '/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-console/src/runtime/app/index.ts';import App from './App.uvue'\r\nimport { createSSRApp } from 'vue'\r\nexport function createApp() {\r\n\tconst app = createSSRApp(App)\r\n\treturn {\r\n\t\tapp\r\n\t}\r\n}\nexport function main(app: IApp) {\n    definePageRoutes();\n    defineAppConfig();\n    (createApp()['app'] as VueApp).mount(app, GenUniApp());\n}\n\nexport class UniAppConfig extends io.dcloud.uniapp.appframe.AppConfig {\n    override name: string = \"veepai\"\n    override appid: string = \"__UNI__1F0985E\"\n    override versionName: string = \"1.0.0\"\n    override versionCode: string = \"100\"\n    override uniCompilerVersion: string = \"4.66\"\n    \n    constructor() { super() }\n}\n\nimport GenPagesIndexIndexClass from './pages/index/index.uvue?type=page'\nimport GenPagesMessageMessageClass from './pages/message/message.uvue?type=page'\nimport GenPagesMineMineClass from './pages/mine/mine.uvue?type=page'\nimport GenPagesMineUserInfoUserInfoClass from './pages/mine/userInfo/userInfo.uvue?type=page'\nimport GenPagesMineUserInfoCancelAnAccountCancelAnAccountClass from './pages/mine/userInfo/CancelAnAccount/CancelAnAccount.uvue?type=page'\nimport GenPagesMineUserInfoChangePhoneNumberChangePhoneNumberClass from './pages/mine/userInfo/changePhoneNumber/changePhoneNumber.uvue?type=page'\nimport GenPagesMineUserInfoChangePasswordChangePasswordClass from './pages/mine/userInfo/changePassword/changePassword.uvue?type=page'\nimport GenPagesMineRechargeDataTrafficRechargeDataTrafficClass from './pages/mine/rechargeDataTraffic/rechargeDataTraffic.uvue?type=page'\nimport GenPagesMineHelpCenterHelpCenterClass from './pages/mine/helpCenter/helpCenter.uvue?type=page'\nimport GenPagesMineHelpCenterQuestionDetailQuestionDetailClass from './pages/mine/helpCenter/questionDetail/questionDetail.uvue?type=page'\nimport GenPagesMessageMessageDetailMessageDetailClass from './pages/message/messageDetail/messageDetail.uvue?type=page'\nimport GenPagesLoginLoginClass from './pages/login/login.uvue?type=page'\nimport GenPagesMessageMessageDeviceDetailMessageDeviceDetailClass from './pages/message/messageDeviceDetail/messageDeviceDetail.uvue?type=page'\nimport GenPagesMessageMessageSystemMessageSystemClass from './pages/message/messageSystem/messageSystem.uvue?type=page'\nimport GenPagesMineMyOrdersMyOrdersClass from './pages/mine/myOrders/myOrders.uvue?type=page'\nimport GenPagesMineMyOrdersOrderDetailOrderDetailClass from './pages/mine/myOrders/orderDetail/orderDetail.uvue?type=page'\nimport GenPagesMineFeebackFeebackClass from './pages/mine/feeback/feeback.uvue?type=page'\nfunction definePageRoutes() {\n__uniRoutes.push({ path: \"pages/index/index\", component: GenPagesIndexIndexClass, meta: { isQuit: true } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"首页\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/message/message\", component: GenPagesMessageMessageClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"消息\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/mine\", component: GenPagesMineMineClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"我的\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/userInfo/userInfo\", component: GenPagesMineUserInfoUserInfoClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"个人信息\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/userInfo/CancelAnAccount/CancelAnAccount\", component: GenPagesMineUserInfoCancelAnAccountCancelAnAccountClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"注销账号\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/userInfo/changePhoneNumber/changePhoneNumber\", component: GenPagesMineUserInfoChangePhoneNumberChangePhoneNumberClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"修改手机号\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/userInfo/changePassword/changePassword\", component: GenPagesMineUserInfoChangePasswordChangePasswordClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"修改密码\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/rechargeDataTraffic/rechargeDataTraffic\", component: GenPagesMineRechargeDataTrafficRechargeDataTrafficClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"流量充值\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/helpCenter/helpCenter\", component: GenPagesMineHelpCenterHelpCenterClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"帮助中心\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/helpCenter/questionDetail/questionDetail\", component: GenPagesMineHelpCenterQuestionDetailQuestionDetailClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"问题详情\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/message/messageDetail/messageDetail\", component: GenPagesMessageMessageDetailMessageDetailClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"消息详情\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/login/login\", component: GenPagesLoginLoginClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationStyle\",\"custom\"],[\"navigationBarTitleText\",\"登陆\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/message/messageDeviceDetail/messageDeviceDetail\", component: GenPagesMessageMessageDeviceDetailMessageDeviceDetailClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"设备信息\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/message/messageSystem/messageSystem\", component: GenPagesMessageMessageSystemMessageSystemClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"系统消息\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/myOrders/myOrders\", component: GenPagesMineMyOrdersMyOrdersClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"订单列表\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/myOrders/orderDetail/orderDetail\", component: GenPagesMineMyOrdersOrderDetailOrderDetailClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"订单详情\"]]) } as UniPageRoute)\n__uniRoutes.push({ path: \"pages/mine/feeback/feeback\", component: GenPagesMineFeebackFeebackClass, meta: { isQuit: false } as UniPageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"意见反馈\"]]) } as UniPageRoute)\n}\nconst __uniTabBar: Map<string, any | null> | null = utsMapOf([[\"list\",[utsMapOf([[\"pagePath\",\"pages/index/index\"],[\"iconPath\",\"./static/tabbar/home.png\"],[\"selectedIconPath\",\"./static/tabbar/home1.png\"],[\"text\",\"首页\"]]),utsMapOf([[\"pagePath\",\"pages/message/message\"],[\"iconPath\",\"./static/tabbar/message.png\"],[\"selectedIconPath\",\"./static/tabbar/message1.png\"],[\"text\",\"消息\"]]),utsMapOf([[\"pagePath\",\"pages/mine/mine\"],[\"iconPath\",\"./static/tabbar/userCenter.png\"],[\"selectedIconPath\",\"./static/tabbar/userCenter1.png\"],[\"text\",\"我的\"]])]]])\nconst __uniLaunchPage: Map<string, any | null> = utsMapOf([[\"url\",\"pages/index/index\"],[\"style\",utsMapOf([[\"navigationBarTitleText\",\"首页\"]])]])\nfunction defineAppConfig(){\n  __uniConfig.entryPagePath = '/pages/index/index'\n  __uniConfig.globalStyle = utsMapOf([[\"navigationBarTextStyle\",\"black\"],[\"navigationBarTitleText\",\"uniappX\"],[\"navigationBarBackgroundColor\",\"#F8F8F8\"],[\"backgroundColor\",\"#F8F8F8\"]])\n  __uniConfig.getTabBarConfig = ():Map<string, any> | null =>  utsMapOf([[\"list\",[utsMapOf([[\"pagePath\",\"pages/index/index\"],[\"iconPath\",\"./static/tabbar/home.png\"],[\"selectedIconPath\",\"./static/tabbar/home1.png\"],[\"text\",\"首页\"]]),utsMapOf([[\"pagePath\",\"pages/message/message\"],[\"iconPath\",\"./static/tabbar/message.png\"],[\"selectedIconPath\",\"./static/tabbar/message1.png\"],[\"text\",\"消息\"]]),utsMapOf([[\"pagePath\",\"pages/mine/mine\"],[\"iconPath\",\"./static/tabbar/userCenter.png\"],[\"selectedIconPath\",\"./static/tabbar/userCenter1.png\"],[\"text\",\"我的\"]])]]])\n  __uniConfig.tabBar = __uniConfig.getTabBarConfig()\n  __uniConfig.conditionUrl = ''\n  __uniConfig.uniIdRouter = utsMapOf()\n  \n  __uniConfig.ready = true\n}\n"],"names":[],"mappings":"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"}