{"version":3,"sources":["uni_modules/lime-button/components/l-button/l-button.uvue"],"sourcesContent":["<template>\n\n\t<view class=\"l-button\" \n\t\tref=\"rootRef\"\n\t\t:class=\"classes\" \n\t\t:hover-class=\"disabled || loading || color != null ? '': hoverClass ?? 'hover'\" \n\t\t:style=\"[styles, lStyle]\"  \n\t\t:hover-start-time=\"hoverStartTime\"\n\t\t:hover-stay-time=\"hoverStayTime\"\n\t\t:data-disabled=\"disabled||loading\" \n\t\t@tap.stop=\"handleTap\" >\n\t\t<l-loading class=\"l-button__loading\" :color=\"loadingColor\" v-if=\"loading\"></l-loading>\n\t\t<l-icon class=\"l-button__icon\"  :size=\"innerIconSize\" :color=\"loadingColor\" v-if=\"icon\" :name=\"icon\"></l-icon>\n\t\t<text class=\"l-button__content\" :class=\"gapClass\" ref=\"buttonTextRef\" :style=\"[contentStyle]\">\n\t\t\t<slot>{{content}}</slot>\n\t\t</text>\n\t\t<button \n\t\t\tclass=\"l-button__button\"\n\t\t\thover-class=\"none\" \n\t\t\tv-if=\"formType != null || openType != null\"\n\t\t\t@agreeprivacyauthorization=\"agreeprivacyauthorization\" \n\t\t\t:disabled=\"disabled || loading\"\n\t\t\t:form-type=\"disabled || loading ? '' : formType\"\n\t\t\t:open-type=\"disabled || loading ? '' : openType\" >\n\t\t</button>\n\t</view>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</template>\n<script lang=\"uts\" setup>\n\t/**\n\t * Button 按钮组件\n\t * @description 提供丰富的按钮样式和交互功能，支持多种形态和平台特性\n\t * <br> 插件类型：LButtonComponentPublicInstance \n\t * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-button\n\t * \n\t * @property {string} ariaLabel 无障碍标签（用于屏幕阅读器）\n\t * @property {boolean} block 块级布局（占满父容器宽度）\n\t * @property {boolean} disabled 禁用状态\n\t * @property {boolean} ghost 幽灵模式（透明背景+边框）\n\t * @property {string} icon 左侧图标名称/路径\n\t * @property {string} iconSize 图标尺寸（支持CSS单位）\n\t * @property {boolean} loading 加载状态（显示加载动画）\n\t * @property {UTSJSONObject} loadingProps 加载动画配置\n\t * @property {'rectangle' | 'square' | 'round' | 'circle'} shape 按钮形状\n\t * @value rectangle 长方形（默认）\n\t * @value square 正方形\n\t * @value round 圆角矩形\n\t * @value circle 圆形\n\t * @property {SizeEnum} size 按钮尺寸\n\t * @value mini 小号\n\t * @value small 小号\n\t * @value medium 中号（默认）\n\t * @value large 大号\n\t * @property {string} suffix 右侧附加内容（图标/文本）\n\t * @property {'default' | 'primary' | 'danger' | 'warning' | 'success' | 'info'} type 色彩类型\n\t * @value default\n\t * @value primary\n\t * @value danger \n\t * @value warning\n\t * @value success\n\t * @value info\n\t * @property {'solid' | 'outline' | 'text' | 'light' | 'dashed'} variant 样式变体\n\t * @value solid \n\t * @value outline\n\t * @value text \n\t * @value light\n\t * @value dashed\n\t * @property {string} radius 自定义圆角（覆盖shape设置）\n\t * @property {string} fontSize 文字字号（支持CSS单位）\n\t * @property {string} textColor 文字颜色（支持CSS颜色值）\n\t * @property {string} color 主色（背景/边框色）\n\t * \n\t * @platform 微信小程序\n\t * @property {string} formType 表单类型（submit/reset）\n\t * @property {string} openType 开放能力（contact/share等）\n\t * @property {string} lang 用户信息语言（zh_CN/zh_TW/en）\n\t * @property {string} sessionFrom 会话来源（contact模式有效）\n\t * @property {string} sendMessageTitle 消息卡片标题（contact模式有效）\n\t * @property {string} sendMessagePath 消息跳转路径（contact模式有效）\n\t * @property {string} sendMessageImg 消息卡片图片（contact模式有效）\n\t * @property {string} appParameter APP启动参数（launchApp模式）\n\t * @property {boolean} showMessageCard 显示消息卡片提示\n\t * \n\t * @property {string} hoverClass 点击态样式类（默认：button-hover）\n\t * @property {boolean} hoverStopPropagation 阻止祖先点击态\n\t * @property {number} hoverStartTime 点击态延迟（默认：20ms）\n\t * @property {number} hoverStayTime 点击态保留时间（默认：70ms）\n\t * @event {Function} click 点击事件（禁用状态下不触发）\n\t * @event {Function} getuserinfo 用户信息授权回调\n\t * @event {Function} contact 客服会话回调\n\t * @event {Function} agreeprivacyauthorization\n\t * @event {Function} chooseavatar\n\t * @event {Function} getphonenumber\n\t * @event {Function} error\n\t * @event {Function} opensetting\n\t * @event {Function} launchapp\n\t */\n\t\n\timport { ButtonProps } from './type'\n\t\n\tdefineOptions({\n\t\tbehaviors: ['wx://form-field-button']\n\t})\n\t\n\tconst emit = defineEmits(['click','agreeprivacyauthorization', 'chooseavatar', 'getuserinfo','contact', 'getphonenumber', 'error', 'opensetting', 'launchapp'])\n\tconst props = withDefaults(defineProps<ButtonProps>(), {\n\t\tblock: false,\n\t\tdisabled: false,\n\t\tghost: false,\n\t\tloading: false,\n\t\tshape: 'rectangle',\n\t\tsize: 'medium',\n\t\ttype: 'default',\n\t\t// hoverClass: '',\n\t\thoverStopPropagation: false,\n\t\thoverStartTime: 20,\n\t\thoverStayTime: 70,\n\t\tlang: 'en',\n\t\tsessionFrom: '',\n\t\tsendMessageTitle: '',\n\t\tsendMessagePath: '',\n\t\tsendMessageImg: '',\n\t\tappParameter: '',\n\t\tshowMessageCard: false\n\t\t// variant: 'solid'\n\t})\n\t\n\t\n\tconst instance = getCurrentInstance()\n\t// const rootRef = ref<UniElement|null>(null)\n\tconst buttonTextRef = ref<UniTextElement|null>(null)\n\tconst hasContent = computed(():boolean => {\n\t\treturn props.content != null || instance?.proxy?.$slots?.['default'] != null\n\t})\n\tconst variant = computed(():string => props.variant ?? (props.color != null ? 'solid' : (props.type == 'default' ? 'outline': 'solid')))\n\tconst classes = computed(():Map<string, any>=>{\n\t\tconst cls = new Map<string, any>()\n\t\tconst name = 'l-button'\n\t\tcls.set(`${name}--${props.size}`, true)\n\t\tcls.set(`${name}--${props.type}`, true)\n\t\tcls.set(`${name}--${variant.value}`, true)\n\t\tcls.set(`${name}--${props.shape}`, true)\n\t\tcls.set(`${name}--disabled`, props.disabled)\n\t\tcls.set(`${name}--loading`, props.loading)\n\t\tcls.set(`${name}--ghost`, props.ghost)\n\t\tcls.set(`${name}--block`, props.block)\n\t\t\n\t\treturn cls\n\t})\n\t\n\tconst styles = computed(():Map<string, any>=>{\n\t\tconst style =  new Map<string, any>()\n\n\n\n\n\n\t\tif(props.radius != null) {\n\t\t\tstyle.set('border-radius', props.radius!)\n\t\t}\n\t\tif(props.color != null) {\n\t\t\tif(variant.value == 'solid') {\n\t\t\t\tstyle.set('background', props.color!)\n\t\t\t} else if(['outline', 'dashed'].includes(variant.value)) {\n\n\t\t\t\tstyle.set('border-color', props.color!)\n\n\n\n\n\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn style\n\t})\n\t\n\tconst sizes = new Map<string, string>([\n\n\t\t['mini', '16px'],\n\t\t['small', '18px'],\n\t\t['medium', '18px'],\n\t\t['large', '24px'],\n\n\t])\n\tconst innerIconSize = computed(():string|null=> {\n\t\treturn props.iconSize ?? props.fontSize ?? sizes.get(props.size)\n\t})\n\tconst colors = new Map<string, string>([\n\n\t\t// ['default', 'rgba(0,0,0,0.88)'],\n\t\t// ['primary', '#3283ff'],\n\t\t// ['danger', '#FF4D4F'],\n\t\t// ['warning', '#ffb400'],\n\t\t// ['success', '#34c471'],\n\t\t// ['info', '#3283ff'],\n\n\t])\n\tconst loadingColor = computed(():string|null => {\n\n\t\treturn props.textColor ?? (variant.value == 'solid' ? 'white' :  buttonTextRef.value?.style.getPropertyValue('color') as string | null) ?? ''//colors.get(props.type))\n\n\n\n\n\t})\n\t\n\tconst gapClass = computed((): string => {\n\t\treturn props.loading || props.icon != null ? 'gap' : ''\n\t})\n\tconst contentStyle = computed(():Map<string, any> => {\n\t\tconst style =  new Map<string, any>()\n\t\tif(props.gap != null && (props.loading || props.icon != null)) {\n\t\t\tstyle.set('margin-left', props.gap!)\n\t\t}\n\t\tif(props.textColor != null || props.color != null && variant.value != 'solid') {\n\t\t\tstyle.set('color', (props.textColor ?? props.color)!)\n\t\t}\n\t\tif(props.fontSize != null) {\n\t\t\tstyle.set('font-size', props.fontSize!)\n\t\t}\n\t\treturn style\n\t})\n\n\n\n\n\n\n\tconst getuserinfo = (e: UniEvent) => {\n\t\temit('getuserinfo', e);\n\t}\n\tconst contact = (e: UniEvent) => {\n\t\temit('contact', e);\n\t}\n\tconst getphonenumber = (e: UniEvent) => {\n\t\temit('getphonenumber', e);\n\t}\n\tconst error = (e: UniEvent) => {\n\t\temit('error', e);\n\t}\n\tconst opensetting = (e: UniEvent) => {\n\t\temit('opensetting', e);\n\t}\n\tconst launchapp = (e: UniEvent) => {\n\t\temit('launchapp', e);\n\t}\n\tconst chooseavatar = (e: UniEvent) => {\n\t\temit('chooseavatar', e);\n\t}\n\tconst agreeprivacyauthorization = (e: UniEvent) => {\n\t\temit('agreeprivacyauthorization', e);\n\t}\n\tconst handleTap = (e: UniPointerEvent)=>{\n\t\tif (props.disabled || props.loading) return;\n\t\temit('click', e);\n\t}\n\t\n\t\n</script>\n<style lang=\"scss\">\n\t@import './index-u';\n</style>"],"names":[],"mappings":"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"}