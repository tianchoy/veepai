{"version":3,"sources":["uni_modules/lime-checkbox/components/l-checkbox-group/l-checkbox-group.uvue","uni_modules/uni-wifi/utssdk/interface.uts"],"sourcesContent":["<template>\r\n\t<view class=\"l-checkbox-group\" :class=\"'l-checkbox-group--'+ direction\">\r\n\t\t<slot />\r\n\t</view>\r\n</template>\r\n<script lang=\"uts\" setup>\r\n\t/**\r\n\t * CheckboxGroup 复选框组容器\r\n\t * @description 用于管理多个 Checkbox 组件，支持整体禁用、最大选择和布局控制\r\n\t * <br> 插件类型：LCheckboxGroupComponentPublicInstance \r\n\t * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-checkbox-group\r\n\t * \r\n\t * @property {Boolean} disabled 是否禁用组件\r\n\t * @property {Boolean} readonly 是否只读组件\r\n\t * @property {Number} max 支持最多选中的数量\r\n\t * @property {String|Number} name 唯一标识\r\n\t * @property {String|Number} value 选中值\r\n\t * @property {'small' | 'medium' | 'large'} size 组件统一尺寸\r\n\t * @value small\r\n\t * @value medium\r\n\t * @value large\r\n\t * @property {String} direction 布局方向\r\n\t * @value horizontal 水平\r\n\t * @value vertical 垂直\r\n\t * @property {String} icon = [square|round|circle]  形状\r\n\t * @value circle\ticon 圆形\r\n\t * @value line\t    icon 线\r\n\t * @value rectangle\ticon 方形\r\n\t * @value dot\ticon 点状\r\n\t * @property {string} fontSize 文本统一字号\r\n\t * @property {string} iconSize 图标统一尺寸\r\n\t * @property {string} checkedColor 选中状态主题色\r\n\t * @property {string} iconBgColor 图标背景色\r\n\t * @property {string} iconBorderColor 图标边框色\r\n\t * @property {string} iconDisabledColor 禁用图标颜色\r\n\t * @property {string} iconDisabledBgColor 禁用背景色\r\n\t * @event {Function} change \r\n\t */\r\n\t\r\n\timport { CheckboxGroupProps } from './type';\r\n\timport { CheckboxChangeOptions } from '../l-checkbox/type';\r\n\timport { setCheckAllStatus } from './utils';\r\n\t\r\n\tconst emit = defineEmits(['update:value', 'update:modelValue', 'change']);\r\n\tconst props = withDefaults(defineProps<CheckboxGroupProps>(), {\r\n\t\tdisabled: false,\r\n\t\treadonly: false,\r\n\t\tsize: 'medium',\r\n\t\tdirection: 'horizontal',\r\n\t\ticon: 'rectangle'\r\n\t})\r\n\t\r\n\tconst _innerValue = ref(props.defaultValue ?? [])\r\n\tconst innerValue = computed({\r\n\t\tset(value: any[]){\r\n\t\t\t_innerValue.value = value\r\n\t\t\temit('change', value)\r\n\t\t\temit('update:value', value)\r\n\t\t\temit('update:modelValue', value)\r\n\t\t},\r\n\t\tget(): any[]{\r\n\t\t\treturn props.value ?? props.modelValue ?? _innerValue.value\r\n\t\t},\r\n\t} as WritableComputedOptions<any[]>)\r\n\t\r\n\tconst checkedSet = computed(():Set<any>=>{\r\n\t\tconst set = new Set<any>()\r\n\t\tif (Array.isArray(innerValue.value)) {\r\n\t\t\tinnerValue.value.forEach(item => {\r\n\t\t\t\tset.add(item)\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn set\r\n\t});\r\n\tconst children = reactive<LCheckboxComponentPublicInstance[]>([]);\r\n\t// @ts-ignore\r\n\tconst checkAllStatus = setCheckAllStatus(children, innerValue, checkedSet);\r\n\tconst maxExceeded = computed(():boolean => {\r\n\t\treturn props.max != null && innerValue.value.length == props.max;\r\n\t});\r\n\r\n\tconst manageChildInList = (child: LCheckboxComponentPublicInstance, shouldAdd: boolean) => {\r\n\t\tconst index = children.indexOf(child);\r\n\t\tif(shouldAdd) {\r\n\t\t\tif(index != -1) return\r\n\t\t\tchildren.push(child)\r\n\t\t} else {\r\n\t\t\tif(index == -1) return\r\n\t\t\tchildren.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\tconst handleCheckboxChange = (item: CheckboxChangeOptions) => {\r\n\t\tconst currentValue = item.value;\r\n\t\tif(Array.isArray(innerValue.value)) {\r\n\t\t\tif(currentValue == null) return;\r\n\t\t\tconst val = [...innerValue.value];\r\n\t\t\tif (item.checked) {\r\n\t\t\t\tval.push(currentValue);\r\n\t\t\t} else {\r\n\t\t\t\tconst i = val.indexOf(currentValue);\r\n\t\t\t\tval.splice(i, 1);\r\n\t\t\t}\r\n\t\t\tinnerValue.value = val\r\n\t\t} else {\r\n\t\t\tconsole.warn(`CheckboxGroup Warn: \\`value\\` must be an array, instead of ${typeof innerValue.value}`);\r\n\t\t}\r\n\t}\r\n\tconst getAllCheckboxValue = () : any[] => {\r\n\t\tconst arr:any[] = []\r\n\t\tfor (let i = 0, len = children.length; i < len; i++) {\r\n\t\t\tconst item = children[i];\r\n\t\t\tconst value = item.value ?? item.name //?? item.$.uid;\r\n\t\t\tif (item.checkAll) continue;\r\n\t\t\tif (value == null) continue;\r\n\t\t\tif(arr.includes(value)) continue;\r\n\t\t\tarr.push(value)\r\n\t\t\tif (maxExceeded.value) break;\r\n\t\t}\r\n\t\treturn arr\r\n\t};\r\n\tconst toggleAllCheckboxValues = () : any[] => {\r\n\t\tconst arr:any[] = []\r\n\t\t\r\n\t\tfor (let i = 0, len = children.length; i < len; i++) {\r\n\t\t\tconst item = children[i];\r\n\t\t\tconst value = item.value ?? item.name;\r\n\t\t\t\r\n\t\t\tif (item.checkAll) continue;\r\n\t\t\tif (value == null) continue;\r\n\t\t\tif(!checkedSet.value.has(value)) {\r\n\t\t\t\tarr.push(value)\r\n\t\t\t};\r\n\t\t\tif (maxExceeded.value) break;\r\n\t\t}\r\n\t\treturn arr;\r\n\t};\r\n\tconst onCheckAllChange = (checked: boolean) => {\r\n\t\tconst value = checked ? getAllCheckboxValue() : [];\r\n\t\tinnerValue.value = value;\r\n\t}\r\n\t\r\n\tconst onCheckedChange = (item: CheckboxChangeOptions) => {\r\n\t\tif(item.checkAll) {\r\n\t\t\tonCheckAllChange(item.checked);\r\n\t\t} else {\r\n\t\t\thandleCheckboxChange(item);\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst toggleAll = (checked : boolean) => {\r\n\t\tconst value = checked ? getAllCheckboxValue() : toggleAllCheckboxValues();\r\n\t\tinnerValue.value = value\r\n\t}\r\n\t\r\n\t\r\n\tdefineExpose({\r\n\t\ttoggleAll\r\n\t})\r\n\t\r\n\tprovide('limeCheckboxGroup', props)\r\n\tprovide('limeCheckboxGroupValue', innerValue)\r\n\tprovide('limeCheckboxGroupStatus', checkAllStatus)\r\n\tprovide('limeCheckboxGroupCheckedSet', checkedSet)\r\n\tprovide('limeCheckboxGroupManageChildInList', manageChildInList)\r\n\tprovide('limeCheckboxGroupOnCheckedChange', onCheckedChange)\r\n\t// const optionList = getOptions(props, children);\r\n\t\r\n</script>\r\n<style lang=\"scss\">\r\n\t.l-checkbox-group {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.l-checkbox-group--vertical {\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>",null],"names":[],"mappings":"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"}