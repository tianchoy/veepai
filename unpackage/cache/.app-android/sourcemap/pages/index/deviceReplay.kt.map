{"version":3,"sources":["pages/index/deviceReplay.uvue","pages/index/index.uvue"],"sourcesContent":["<template>\r\n\t<view class=\"container\">\r\n\t\t<!-- 日期选择滚动条 -->\r\n\t\t<scroll-view class=\"date-scroll\" scroll-x :scroll-left=\"dateScrollLeft\">\r\n\t\t\t<view class=\"date-list\">\r\n\t\t\t\t<view v-for=\"(date, index) in dateList\" :key=\"index\"\r\n\t\t\t\t\t:class=\"['date-item', activeDate === date ? 'active' : '']\" @tap=\"selectDate(date)\">\r\n\t\t\t\t\t{{ date }}\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</scroll-view>\r\n\r\n\t\t<!-- 视频播放区域 -->\r\n\t\t<view class=\"video-container\">\r\n\t\t\t<video id=\"myVideo\" :src=\"videoSrc\" :controls=\"true\" class=\"video-player\" @timeupdate=\"onTimeUpdate\"\r\n\t\t\t\t@play=\"onPlay\" @pause=\"onPause\" @seeked=\"onSeeked\"></video>\r\n\t\t</view>\r\n\r\n\t\t<!-- 可拖动时间轴 -->\r\n\t\t<view class=\"time-ruler-container\">\r\n\t\t\t<scroll-view class=\"time-ruler-scroll\" scroll-x :scroll-left=\"timeScrollLeft\" scroll-with-animation\r\n\t\t\t\t@scroll=\"onTimeScroll\">\r\n\t\t\t\t<view class=\"time-ruler\" :style=\"{ width: rulerWidth + 'px' }\" @touchstart=\"onTouchStart\"\r\n\t\t\t\t\t@touchmove=\"onTouchMove\" @touchend=\"onTouchEnd\">\r\n\t\t\t\t\t<!-- 动态时间刻度 -->\r\n\t\t\t\t\t<view v-for=\"(mark, index) in timeMarks\" :key=\"'mark-' + index\" :class=\"['time-mark', mark.type]\"\r\n\t\t\t\t\t\t:style=\"{ left: mark.position + 'px' }\" @click=\"seekToPosition(mark.time)\">\r\n\t\t\t\t\t\t<!-- 主刻度标签 -->\r\n\t\t\t\t\t\t<text v-if=\"mark.type === 'major'\" class=\"mark-label\"></text>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view v-for=\"(event, index) in filteredEvents\" :key=\"'event-'+index\" \r\n\t\t\t\t\t\tclass=\"event-marker\"\r\n\t\t\t\t\t\t:style=\"{ left: getEventPosition(event) + 'px' }\"\r\n\t\t\t\t\t\t@click.stop=\"seekToEvent(event)\">\r\n\t\t\t\t\t\t<view :class=\"['event-dot', event.type]\"></view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<!-- 播放头指示器 -->\r\n\t\t\t\t\t<view class=\"playhead\" :style=\"{ left: playheadPosition + 'px'}\"></view>\r\n\t\t\t\t</view>\r\n\t\t\t</scroll-view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 事件筛选工具栏 -->\r\n\t\t<view class=\"filter-bar\">\r\n\t\t\t<view v-for=\"filter in filters\" :key=\"filter.value\"\r\n\t\t\t\t:class=\"['filter-item', activeFilter === filter.value ? 'active' : '']\"\r\n\t\t\t\t@tap=\"selectFilter(filter.value as string)\">\r\n\t\t\t\t{{ filter.label }}\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup>\r\n\timport { ref, computed, onMounted, getCurrentInstance } from 'vue'\r\n\r\n\tclass EventType {\r\n\t\tdate : string;\r\n\t\ttime : string;\r\n\t\ttype : string;\r\n\r\n\t\tconstructor(date : string, time : string, type : string) {\r\n\t\t\tthis.date = date;\r\n\t\t\tthis.time = time;\r\n\t\t\tthis.type = type;\r\n\t\t}\r\n\t}\r\n\r\n\t// 计算时间刻度\r\n\ttype TimeMark = {\r\n\t\ttime : number\r\n\t\tposition : number\r\n\t\ttype : string\r\n\t}\r\n\t// 响应式状态\r\n\tconst currentDate = ref('2024-10-21')\r\n\tconst currentTime = ref('00:00:00')\r\n\tconst activeDate = ref('10-21')\r\n\tconst activeFilter = ref('all')\r\n\tconst videoSrc = ref('https://qiniu-web-assets.dcloud.net.cn/video/sample/2minute-demo.mp4')\r\n\tconst videoContext = ref<VideoContext | null>(null)\r\n\tconst isSeeking = ref(false)\r\n\tconst timeScrollLeft = ref(0)\r\n\tconst dateScrollLeft = ref(0)\r\n\tconst playheadPosition = ref(0)\r\n\tconst videoDuration = ref(0)\r\n\tconst lastSyncTime = ref(0)\r\n\tconst isDragging = ref(false)\r\n\tconst startX = ref(0)\r\n\tconst startScrollLeft = ref(0)\r\n\tconst lastDragTime = ref(0)\r\n\tconst manualScrollPosition = ref(0)\r\n\tconst draggedTimeInSeconds = ref(0)\r\n\r\n\r\n\t// 常量配置\r\n\tconst dateList = ['10-21', '10-22', '10-23', '10-24', '10-25', '10-26']\r\n\tconst filters = [\r\n\t\t{ label: '只看报警', value: 'alarm' },\r\n\t\t{ label: '移动侦测', value: 'motion' },\r\n\t\t{ label: '人形侦测', value: 'human' },\r\n\t\t{ label: '全部', value: 'all' }\r\n\t]\r\n\r\n\t// 模拟事件数据\r\n\tconst events = ref<EventType[]>([\r\n\t\t{ date: '10-21', time: '00:00:10', type: 'alarm' },\r\n\t\t{ date: '10-21', time: '00:00:30', type: 'motion' },\r\n\t\t{ date: '10-21', time: '00:01:45', type: 'human' },\r\n\t\t{ date: '10-21', time: '00:01:20', type: 'alarm' }\r\n\t])\r\n\r\n\r\n\r\n\r\n\t// 计算属性\r\n\tconst rulerWidth = computed(() => {\r\n\t\tconst systemInfo = uni.getSystemInfoSync()\r\n\t\treturn systemInfo.windowWidth\r\n\t})\r\n\r\n\r\n\t// 时间字符串转秒数\r\n\tconst convertTimeToSeconds = (timeStr : string) => {\r\n\t\tconst parts = timeStr.split(':')\r\n\t\tconst h = parseInt(parts[0])\r\n\t\tconst m = parseInt(parts[1])\r\n\t\tconst s = parts.length > 2 ? parseInt(parts[2]) : 0\r\n\t\treturn h * 3600 + m * 60 + s\r\n\t}\r\n\r\n\tconst timeMarks = computed<TimeMark[]>(() => {\r\n\t\tconst marks = [] as TimeMark[]\r\n\t\tconst duration = videoDuration.value\r\n\t\tif (duration == 0) return marks\r\n\r\n\t\tlet majorInterval : number\r\n\t\tif (duration <= 60) { // 1分钟以内\r\n\t\t\tmajorInterval = 10 // 每10秒一个主刻度\r\n\t\t} else if (duration <= 300) { // 5分钟以内\r\n\t\t\tmajorInterval = 30 // 每30秒一个主刻度\r\n\t\t} else if (duration <= 1800) { // 30分钟以内\r\n\t\t\tmajorInterval = 60 // 每分钟一个主刻度\r\n\t\t} else if (duration <= 3600) { // 1小时以内\r\n\t\t\tmajorInterval = 300 // 每5分钟一个主刻度\r\n\t\t} else if (duration <= 7200) { // 2小时以内\r\n\t\t\tmajorInterval = 600 // 每10分钟一个主刻度\r\n\t\t} else { // 超过2小时\r\n\t\t\tmajorInterval = 1800 // 每30分钟一个主刻度\r\n\t\t}\r\n\r\n\t\t// 小刻度数量 \r\n\t\tconst minorInterval = majorInterval / 10\r\n\r\n\t\t// 计算每个刻度的像素位置\r\n\t\tconst pixelsPerSecond = rulerWidth.value / duration\r\n\r\n\t\t// 生成刻度\r\n\t\tfor (let time = 0; time <= duration; time += minorInterval) {\r\n\t\t\tconst isMajor = (time % majorInterval) == 0\r\n\t\t\tmarks.push({\r\n\t\t\t\ttime,\r\n\t\t\t\tposition: time * pixelsPerSecond + 3,\r\n\t\t\t\ttype: isMajor ? 'major' : 'minor'\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn marks\r\n\t})\r\n\r\n\r\n\t// 格式化刻度时间\r\n\tconst formatMarkTime = (seconds : number) => {\r\n\t\tconst hrs = Math.floor(seconds / 3600)\r\n\t\tconst mins = Math.floor((seconds % 3600) / 60)\r\n\t\tconst secs = Math.floor(seconds % 60)\r\n\r\n\t\tif (hrs > 0) {\r\n\t\t\treturn `${hrs}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\r\n\t\t}\r\n\t\treturn `${mins}:${secs.toString().padStart(2, '0')}`\r\n\t}\r\n\r\n\tconst filteredEvents = computed<EventType[]>(() => {\r\n\t\tif (activeFilter.value === 'all') return events.value\r\n\t\treturn events.value.filter((e) => e.type === activeFilter.value)\r\n\t})\r\n\r\n\t// 初始化视频上下文\r\n\tconst initVideoContext = () => {\r\n\t\ttry {\r\n\t\t\tvideoContext.value = uni.createVideoContext('myVideo');\r\n\t\t\tconsole.log('视频上下文初始化成功', videoContext.value);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('创建视频上下文失败:', error);\r\n\t\t}\r\n\t}\r\n\t// 加载视频数据\r\n\tconst loadVideoData = (date : String) => {\r\n\t\tconsole.log('加载日期数据:', date)\r\n\t}\r\n\r\n\r\n\t// 选择日期\r\n\tconst selectDate = (date : string) => {\r\n\t\tactiveDate.value = date\r\n\t\tcurrentDate.value = `2024-${date}`\r\n\t\tloadVideoData(date)\r\n\r\n\t\tconst index = dateList.indexOf(date)\r\n\t\tdateScrollLeft.value = index * 80\r\n\t}\r\n\r\n\t// 格式化时间显示\r\n\tconst formatTime = (seconds : number) => {\r\n\t\tconst hrs = Math.floor(seconds / 3600)\r\n\t\tconst mins = Math.floor((seconds % 3600) / 60)\r\n\t\tconst secs = Math.floor(seconds % 60)\r\n\t\treturn `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\r\n\t}\r\n\r\n\r\n\t// 更新播放头位置\r\n\tconst updatePlayheadPosition = (currentTimeInSeconds : number) => {\r\n\t\tconst pixelsPerSecond = rulerWidth.value / videoDuration.value\r\n\t\tplayheadPosition.value = currentTimeInSeconds * pixelsPerSecond\r\n\t\tconst systemInfo = uni.getSystemInfoSync()\r\n\t\tconst scrollViewWidth = systemInfo.windowWidth\r\n\t\tconst halfWidth = scrollViewWidth / 2\r\n\t\tconst targetScrollLeft = playheadPosition.value - halfWidth\r\n\r\n\t\tconst maxScrollLeft = rulerWidth.value - scrollViewWidth\r\n\t\ttimeScrollLeft.value = Math.max(0, Math.min(maxScrollLeft, targetScrollLeft))\r\n\t}\r\n\r\n\t// 视频时间更新 \r\n\tconst onTimeUpdate = (e : UniVideoTimeUpdateEvent) => {\r\n\t\tif (isSeeking.value || isDragging.value) return\r\n\r\n\t\tconst currentTimeInSeconds = e.detail.currentTime\r\n\t\tcurrentTime.value = formatTime(currentTimeInSeconds)\r\n\t\tvideoDuration.value = e.detail.duration;\r\n\t\t// 节流处理\r\n\t\tconst now = Date.now()\r\n\t\tif (now - lastSyncTime.value < 200) return\r\n\t\tlastSyncTime.value = now\r\n\r\n\t\tupdatePlayheadPosition(currentTimeInSeconds - 1)\r\n\t}\r\n\r\n\tconst seekToSeconds = (timeInSeconds : number) => {\r\n\t\tisSeeking.value = true\r\n\t\tmanualScrollPosition.value = timeInSeconds * 2\r\n\r\n\t\tif (videoContext.value != null) {\r\n\t\t\tvideoContext.value.seek(timeInSeconds)\r\n\t\t}\r\n\r\n\t\tplayheadPosition.value = timeInSeconds * 2\r\n\t\tcurrentTime.value = formatTime(timeInSeconds)\r\n\t}\r\n\r\n\t\t\t// 新增的计算属性：获取事件位置\r\n\tconst getEventPosition = (event: EventType) => {\n\t\tconst seconds = convertTimeToSeconds(event.time)\n\t\tconst duration = videoDuration.value != 0 ? videoDuration.value : 300 // 默认5分钟\n\t\tconst pixelsPerSecond = rulerWidth.value / duration\n\t\treturn seconds * pixelsPerSecond\n\t}\r\n\r\n\t// 新增方法：跳转到事件时间点\r\n\tconst seekToEvent = (event: EventType) => {\r\n\t\tconst seconds = convertTimeToSeconds(event.time)\r\n\t\tseekToSeconds(seconds)\r\n\t}\r\n\r\n\r\n\t// 跳转到指定时间\r\n\tconst seekToTime = (hour : number, minute : number) => {\r\n\t\tconst timeInSeconds = hour * 3600 + minute * 60\r\n\t\tseekToSeconds(timeInSeconds)\r\n\t}\r\n\t// 跳转到指定位置(秒)\r\n\tconst seekToPosition = (seconds : number) => {\r\n\t\tseekToSeconds(seconds)\r\n\t}\r\n\r\n\t// 跳转完成\r\n\tconst onSeeked = () => {\r\n\t\tisSeeking.value = false\r\n\t}\r\n\r\n\t// 时间轴触摸开始\r\n\tconst onTouchStart = (e : TouchEvent) => {\r\n\t\tisDragging.value = true\r\n\t\tstartX.value = e.touches[0].pageX\r\n\t\tstartScrollLeft.value = startX.value\r\n\t\tlastDragTime.value = Date.now()\r\n\r\n\t\tisSeeking.value = true\r\n\t\tif (videoContext.value != null) {\r\n\t\t\tvideoContext.value.pause()\r\n\t\t}\r\n\t}\r\n\r\n\t// 时间轴触摸移动\r\n\tconst onTouchMove = (e : TouchEvent) => {\r\n\t\tif (!isDragging.value) return\r\n\r\n\t\tconst deltaX = e.touches[0].pageX - startX.value\r\n\t\tconst newScrollLeft = startScrollLeft.value - deltaX\r\n\r\n\t\tconst systemInfo = uni.getSystemInfoSync()\r\n\t\tconst scrollViewWidth = systemInfo.windowWidth\r\n\r\n\t\tconst maxScrollLeft = rulerWidth.value - scrollViewWidth\r\n\t\ttimeScrollLeft.value = Math.max(0, Math.min(maxScrollLeft, newScrollLeft))\r\n\r\n\t\t// 计算当前时间位置（基于触摸点位置）\r\n\t\tconst touchX = e.touches[0].pageX\r\n\t\tconst rulerStartX = touchX - startX.value + startScrollLeft.value\r\n\t\tconst pixelsPerSecond = rulerWidth.value / videoDuration.value\r\n\t\tconst timeInSeconds = rulerStartX / pixelsPerSecond\r\n\r\n\t\t// 更新显示\r\n\t\tcurrentTime.value = formatTime(timeInSeconds)\r\n\t\tplayheadPosition.value = timeInSeconds * pixelsPerSecond\r\n\t\tmanualScrollPosition.value = timeInSeconds * pixelsPerSecond\r\n\r\n\t\t// 实时跳转视频(节流处理)\r\n\t\tconst now = Date.now()\r\n\t\tif (now - lastDragTime.value > 100) {\r\n\t\t\tif (videoContext.value != null) {\r\n\t\t\t\tconsole.log('尝试跳转视频到:', timeInSeconds, '秒');\r\n\t\t\t\tdraggedTimeInSeconds.value = timeInSeconds\r\n\t\t\t\tvideoContext.value.seek(timeInSeconds)\r\n\t\t\t}\r\n\t\t\tlastDragTime.value = now\r\n\t\t}\r\n\t}\r\n\r\n\t// 时间轴触摸结束\r\n\tconst onTouchEnd = () => {\r\n\t\tif (!isDragging.value) return\r\n\r\n\t\t// 计算最终时间位置\r\n\t\tconst systemInfo = uni.getSystemInfoSync()\r\n\t\tconst scrollViewWidth = systemInfo.windowWidth\r\n\t\tconst pixelsPerSecond = rulerWidth.value / videoDuration.value;\r\n\t\tconst timeInSeconds = (timeScrollLeft.value + scrollViewWidth / 2) / pixelsPerSecond;\r\n\r\n\r\n\t\t// 精确跳转\r\n\t\tif (videoContext.value != null) {\r\n\t\t\tconsole.log('尝试跳转视频到最终时间:', draggedTimeInSeconds.value, '秒');\r\n\t\t\tvideoContext.value.seek(draggedTimeInSeconds.value)\r\n\t\t\tvideoContext.value.play()\r\n\t\t}\r\n\r\n\t\tplayheadPosition.value = timeInSeconds * pixelsPerSecond\r\n\t\tcurrentTime.value = formatTime(timeInSeconds)\r\n\t\t// manualScrollPosition.value = timeInSeconds * 2\r\n\r\n\t\tisDragging.value = false\r\n\t\tisSeeking.value = false\r\n\t}\r\n\r\n\t// 定义滚动事件detail类型\r\n\ttype TimeScrollDetail = {\r\n\t\tscrollLeft : number\r\n\t}\r\n\t// 定义滚动事件类型\r\n\ttype TimeScrollEvent = {\r\n\t\tdetail : TimeScrollDetail\r\n\t}\r\n\t// 时间轴滚动事件\r\n\tconst onTimeScroll = (e : TimeScrollEvent) => {\r\n\t\tif (!isDragging.value) {\r\n\t\t\ttimeScrollLeft.value = e.detail.scrollLeft\r\n\t\t}\r\n\t}\r\n\r\n\t// 选择筛选条件\r\n\tconst selectFilter = (filter : string) => {\r\n\t\tactiveFilter.value = filter\r\n\t}\r\n\r\n\t// 检查指定时间是否有事件\r\n\tconst hasEvent = (hour : number, minute : number) => {\r\n\t\tconst timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\r\n\t\tconst events = filteredEvents.value\r\n\t\tfor (let i = 0; i < events.length; i++) {\r\n\t\t\tconst event = events[i]\r\n\t\t\tif (event.date === activeDate.value && event.time.startsWith(timeStr)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\t// 获取事件类型\r\n\tconst getEventType = (hour : number, minute : number) => {\r\n\t\tconst timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\r\n\t\tconst eventsList = events.value\r\n\t\tfor (let i = 0; i < eventsList.length; i++) {\r\n\t\t\tconst event = eventsList[i]\r\n\t\t\tif (event.date === activeDate.value && event.time.startsWith(timeStr)) {\r\n\t\t\t\treturn event.type\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\r\n\t// 格式化小时显示\r\n\tconst formatHour = (hour : number) => {\r\n\t\treturn `${hour.toString().padStart(2, '0')}:00`\r\n\t}\r\n\r\n\t// 播放/暂停事件\r\n\tconst onPlay = () => {\r\n\t\tconsole.log('视频开始播放')\r\n\r\n\t}\r\n\r\n\tconst onPause = () => {\r\n\t\tconsole.log('视频暂停')\r\n\t}\r\n\r\n\t// 组件生命周期\r\n\tonMounted(() => {\r\n\t\tinitVideoContext();\r\n\t\tif (videoContext.value == null) {\r\n\t\t\tconsole.error('视频上下文初始化失败，请检查');\r\n\t\t}\r\n\t});\r\n</script>\r\n\r\n<style>\r\n\t.container {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\theight: 100%;\r\n\t\tbackground-color: #f5f5f5;\r\n\t}\r\n\r\n\r\n\t.date-list {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tpadding: 20rpx;\r\n\t}\r\n\r\n\t.date-item {\r\n\t\tpadding: 8px 16px;\r\n\t\tmargin: 0 5px;\r\n\t\tborder-radius: 16px;\r\n\t\tbackground-color: #555;\r\n\t\tcolor: white;\r\n\t\tfont-size: 14px;\r\n\t\ttransition: all 0.2s;\r\n\t}\r\n\r\n\t.date-item.active {\r\n\t\tbackground-color: #007aff;\r\n\t\tcolor: #fff;\r\n\t}\r\n\r\n\t.video-container {\r\n\t\twidth: 100%;\r\n\t\theight: 250px;\r\n\t\tbackground-color: #000;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t.video-player {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.time-ruler-container {\r\n\t\twidth: 100%;\r\n\t\tpadding: 10px 0;\r\n\t\tbackground-color: #fff;\r\n\t\tposition: relative;\r\n\t\tz-index: 5;\r\n\t}\r\n\r\n\t.time-ruler-scroll {\r\n\t\twidth: 100%;\r\n\t\theight: 70px;\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t.event-dot.alarm {\r\n\t\tbackground-color: #ff3b30;\r\n\t\tbox-shadow: 0 0 5px #ff3b30;\r\n\t}\r\n\r\n\t.event-dot.motion {\r\n\t\tbackground-color: #ff9500;\r\n\t\tbox-shadow: 0 0 5px #ff9500;\r\n\t}\r\n\r\n\t.event-dot.human {\r\n\t\tbackground-color: #34c759;\r\n\t\tbox-shadow: 0 0 5px #34c759;\r\n\t}\r\n\r\n\t.playhead {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\twidth: 2px;\r\n\t\theight: 100%;\r\n\t\tbackground-color: #007aff;\r\n\t\tz-index: 10;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\t.filter-bar {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-around;\r\n\t\tpadding: 12px 5px;\r\n\t\tbackground-color: #333;\r\n\t\tposition: fixed;\r\n\t\tbottom: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tz-index: 20;\r\n\t}\r\n\r\n\t.filter-item {\r\n\t\tpadding: 8px 12px;\r\n\t\tborder-radius: 16px;\r\n\t\tbackground-color: #555;\r\n\t\tcolor: white;\r\n\t\tfont-size: 12px;\r\n\t\ttransition: all 0.2s;\r\n\t\tflex: 1;\r\n\t\tmargin: 0 5px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.filter-item.active {\r\n\t\tbackground-color: #007aff;\r\n\t\tfont-weight: bold;\r\n\t\ttransform: scale(1.05);\r\n\t}\r\n\r\n\t.time-ruler {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t\tborder-bottom: 1rpx solid #ccc;\r\n\t}\r\n\r\n\t.time-mark {\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\ttransform: translateX(-50%);\r\n\t\tpointer-events: auto;\r\n\t}\r\n\r\n\t.time-mark.major {\r\n\t\theight: 20px;\r\n\t\tbackground-color: #333;\r\n\t\twidth: 2px;\r\n\t}\r\n\r\n\t.time-mark.minor {\r\n\t\theight: 10px;\r\n\t\tbackground-color: #999;\r\n\t\twidth: 1px;\r\n\t}\r\n\r\n\r\n\r\n\t.event-marker {\r\n\t\tposition: absolute;\r\n\t\tbottom: 25px;\r\n\t\ttransform: translateX(-50%);\r\n\t\tz-index: 5;\r\n\t}\r\n\r\n\t.event-dot {\r\n\t\twidth: 10px;\r\n\t\theight: 10px;\r\n\t\tborder-radius: 50%;\r\n\t}\r\n\r\n\t.event-dot.alarm {\r\n\t\tbackground-color: #ff3b30;\r\n\t}\r\n\r\n\t.event-dot.motion {\r\n\t\tbackground-color: #ff9500;\r\n\t}\r\n\r\n\t.event-dot.human {\r\n\t\tbackground-color: #34c759;\r\n\t}\r\n</style>",null],"names":[],"mappings":"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"}