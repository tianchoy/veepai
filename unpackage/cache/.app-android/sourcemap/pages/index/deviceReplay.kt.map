{"version":3,"sources":["pages/index/deviceReplay.uvue","pages/index/index.uvue"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 顶部标题栏 -->\n    <view class=\"header\">\n      <text class=\"title\">监控视频回放</text>\n      <text class=\"current-time\">{{ currentDate }} {{ currentTime }}</text>\n    </view>\n    \n    <!-- 日期选择滚动条 -->\n    <scroll-view class=\"date-scroll\" scroll-x :scroll-left=\"dateScrollLeft\">\n      <view class=\"date-list\">\n        <view \n          v-for=\"(date, index) in dateList\" \n          :key=\"index\"\n          :class=\"['date-item', activeDate === date ? 'active' : '']\"\n          @tap=\"selectDate(date)\"\n        >\n          {{ date }}\n        </view>\n      </view>\n    </scroll-view>\n    \n    <!-- 视频播放区域 -->\n    <view class=\"video-container\">\n      <video \n        id=\"myVideo\"\n        :src=\"videoSrc\" \n        :controls=\"true\"\n        class=\"video-player\"\n        @timeupdate=\"onTimeUpdate\"\n        @play=\"onPlay\"\n        @pause=\"onPause\"\n        \n        @seeked=\"onSeeked\"\n      ></video>\n    </view>\n    \n    <!-- 可拖动时间轴 -->\n    <view class=\"time-ruler-container\">\n      <scroll-view \n        class=\"time-ruler-scroll\" \n        scroll-x\n        :scroll-left=\"timeScrollLeft\"\n        scroll-with-animation\n        @scroll=\"onTimeScroll\"\n      >\n        <view \n          class=\"time-ruler\" \n          :style=\"{ width: rulerWidth + 'px' }\"\n          @touchstart=\"onTouchStart\"\n          @touchmove=\"onTouchMove\"\n          @touchend=\"onTouchEnd\"\n        >\n          <!-- 时间刻度 -->\n          <view \n            v-for=\"hour in 24\" \n            :key=\"'hour-' + hour\"\n            class=\"hour-section\"\n          >\n            <view class=\"hour-mark\">{{ formatHour(hour - 1) }}</view>\n            <view class=\"minute-marks\">\n              <view \n                v-for=\"minute in minuteMarks\" \n                :key=\"'min-' + hour + '-' + minute\"\n                class=\"minute-mark\"\n                @tap=\"seekToTime(hour - 1, minute)\"\n              >\n                <!-- 事件标记点 -->\n                <view \n                  v-if=\"hasEvent(hour - 1, minute)\"\n                  :class=\"['event-dot', getEventType(hour - 1, minute)]\"\n                ></view>\n                <!-- 分钟标签 -->\n                <text v-if=\"minute % 15 === 0\" class=\"minute-label\">{{ minute }}</text>\n              </view>\n            </view>\n          </view>\n          \n          <!-- 播放头指示器 -->\n          <view \n            class=\"playhead\" \n            :style=\"{ left: playheadPosition + 'px' }\"\n          ></view>\n          \n          <!-- 当前时间指示器 -->\n          <view \n            class=\"time-indicator\" \n            :style=\"{ left: playheadPosition + 'px' }\"\n          >\n            {{ currentTime.split(':').slice(0, 2).join(':') }}\n          </view>\n        </view>\n      </scroll-view>\n    </view>\n    \n    <!-- 事件筛选工具栏 -->\n    <view class=\"filter-bar\">\n      <view \n        v-for=\"filter in filters\" \n        :key=\"filter.value\"\n        :class=\"['filter-item', activeFilter === filter.value ? 'active' : '']\"\n        @tap=\"selectFilter(filter.value)\"\n      >\n        {{ filter.label }}\n      </view>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, getCurrentInstance } from 'vue'\n\nclass EventType {\n  date: string;\n  time: string;\n  type: string;\n\n  constructor(date: string, time: string, type: string) {\n    this.date = date;\n    this.time = time;\n    this.type = type;\n  }\n}\n// 响应式状态\nconst currentDate = ref('2024-10-21')\nconst currentTime = ref('00:00:00')\nconst activeDate = ref('10-21')\nconst activeFilter = ref('all')\nconst videoSrc = ref('https://qiniu-web-assets.dcloud.net.cn/video/sample/2minute-demo.mp4')\nconst videoContext = ref<VideoContext | null>(null)\nconst isSeeking = ref(false)\nconst timeScrollLeft = ref(0)\nconst dateScrollLeft = ref(0)\nconst playheadPosition = ref(0)\nconst videoDuration = ref(0)\nconst lastSyncTime = ref(0)\nconst isDragging = ref(false)\nconst startX = ref(0)\nconst startScrollLeft = ref(0)\nconst lastDragTime = ref(0)\nconst manualScrollPosition = ref(0)\nconst draggedTimeInSeconds = ref(0)\n\n// 获取当前组件实例\nconst instance = getCurrentInstance()\n\n// 常量配置\nconst dateList = ['10-21', '10-22', '10-23', '10-24', '10-25', '10-26']\nconst minuteMarks = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55]\nconst filters = [\n  { label: '只看报警', value: 'alarm' },\n  { label: '移动侦测', value: 'motion' },\n  { label: '人形侦测', value: 'human' },\n  { label: '全部', value: 'all' }\n]\n\n// 模拟事件数据\nconst events = ref<EventType[]>([\n  { date: '10-21', time: '00:15', type: 'alarm' },\n  { date: '10-21', time: '00:30', type: 'motion' },\n  { date: '10-21', time: '01:45', type: 'human' },\n  { date: '10-21', time: '01:20', type: 'alarm' }\n])\n\n// 计算属性\nconst rulerWidth = computed(() => 24 * 120) // 24小时 * 每小时120px\nconst filteredEvents = computed<EventType[]>(() => {\n  if (activeFilter.value === 'all') return events.value\n  return events.value.filter((e) => e.type === activeFilter.value)\n})\n\n// 初始化视频上下文\nconst initVideoContext = () => {\n  try {\n    videoContext.value = uni.createVideoContext('myVideo');\n    console.log('视频上下文初始化成功', videoContext.value);\n  } catch (error) {\n    console.error('创建视频上下文失败:', error);\n  }\n}\n// 加载视频数据\nconst loadVideoData = (date:String) => {\n  console.log('加载日期数据:', date)\n}\n\n\n// 选择日期\nconst selectDate = (date:String) => {\n  activeDate.value = date\n  currentDate.value = `2024-${date}`\n  loadVideoData(date)\n  \n  const index = dateList.indexOf(date)\n  dateScrollLeft.value = index * 80\n}\n\n\n\n// 视频元数据加载完成\n// const onVideoLoaded = (e:UniVideoLoadedMetadataEvent) => {\n//   videoDuration.value = e.detail.duration;\n//   console.log('视频元数据加载完成，视频时长:', videoDuration.value, '秒');\n// }\n\n// 视频时间更新 \nconst onTimeUpdate = (e:UniVideoTimeUpdateEvent) => {\n  if (isSeeking.value || isDragging.value) return\n  \n  const currentTimeInSeconds = e.detail.currentTime\n  currentTime.value = formatTime(currentTimeInSeconds)\n  \n  // 节流处理\n  const now = Date.now()\n  if (now - lastSyncTime.value < 200) return\n  lastSyncTime.value = now\n  \n  updatePlayheadPosition(currentTimeInSeconds)\n}\n\n// 更新播放头位置\nconst updatePlayheadPosition = (currentTimeInSeconds) => {\n  const newPosition = currentTimeInSeconds * 2\n  playheadPosition.value = newPosition\n  \n  // 只在非手动滚动时自动滚动时间轴\n  if (Math.abs(manualScrollPosition.value - newPosition) > 60) {\n    const systemInfo = uni.getSystemInfoSync()\n    const scrollViewWidth = systemInfo.windowWidth || 375\n    const halfWidth = scrollViewWidth / 2\n    const targetScrollLeft = newPosition - halfWidth\n    \n    const maxScrollLeft = rulerWidth.value - scrollViewWidth\n    timeScrollLeft.value = Math.max(0, Math.min(maxScrollLeft, targetScrollLeft))\n  }\n}\n\n// 跳转到指定时间\nconst seekToTime = (hour, minute) => {\n  const timeInSeconds = hour * 3600 + minute * 60\n  seekToSeconds(timeInSeconds)\n}\n\nconst seekToSeconds = (timeInSeconds) => {\n  isSeeking.value = true\n  manualScrollPosition.value = timeInSeconds * 2\n  \n  if (videoContext.value) {\n    videoContext.value.seek(timeInSeconds)\n  }\n  \n  playheadPosition.value = timeInSeconds * 2\n  currentTime.value = formatTime(timeInSeconds)\n}\n\n// 跳转完成\nconst onSeeked = () => {\n  isSeeking.value = false\n}\n\n// 时间轴触摸开始\nconst onTouchStart = (e) => {\n  isDragging.value = true\n  startX.value = e.touches[0].pageX\n  startScrollLeft.value = timeScrollLeft.value\n  lastDragTime.value = Date.now()\n  \n  isSeeking.value = true\n  if (videoContext.value) {\n    videoContext.value.pause()\n  }\n}\n\n// 时间轴触摸移动\nconst onTouchMove = (e) => {\n  if (!isDragging.value) return\n  \n  const deltaX = e.touches[0].pageX - startX.value\n  const newScrollLeft = startScrollLeft.value - deltaX\n  \n  const systemInfo = uni.getSystemInfoSync()\n  const scrollViewWidth = systemInfo.windowWidth || 375\n  const maxScrollLeft = rulerWidth.value - scrollViewWidth\n  timeScrollLeft.value = Math.max(0, Math.min(maxScrollLeft, newScrollLeft))\n  \n  // 计算当前时间位置（基于触摸点位置）\n  const touchX = e.touches[0].pageX\n  const rulerStartX = touchX - startX.value + startScrollLeft.value\n  const timeInSeconds = rulerStartX / 2\n  \n  // 更新显示\n  currentTime.value = formatTime(timeInSeconds)\n  playheadPosition.value = timeInSeconds * 2\n  manualScrollPosition.value = timeInSeconds * 2\n  \n  // 实时跳转视频(节流处理)\n  const now = Date.now()\n  if (now - lastDragTime.value > 100) {\n    if (videoContext.value) {\n      console.log('尝试跳转视频到:', timeInSeconds, '秒');\n      draggedTimeInSeconds.value = timeInSeconds\n      videoContext.value.seek(timeInSeconds)\n    }\n    lastDragTime.value = now\n  }\n}\n\n// 时间轴触摸结束\nconst onTouchEnd = () => {\n  if (!isDragging.value) return\n  \n  // 计算最终时间位置\n  const systemInfo = uni.getSystemInfoSync()\n  const scrollViewWidth = systemInfo.windowWidth || 375\n  const timeInSeconds = (timeScrollLeft.value + scrollViewWidth / 2) / 2\n\n\n  // 精确跳转\n  if (videoContext.value) {\n    console.log('尝试跳转视频到最终时间:', draggedTimeInSeconds.value, '秒');\n    videoContext.value.seek(draggedTimeInSeconds.value)\n    videoContext.value.play()\n  }\n  \n  playheadPosition.value = timeInSeconds * 2\n  currentTime.value = formatTime(timeInSeconds)\n  manualScrollPosition.value = timeInSeconds * 2\n  \n  isDragging.value = false\n  isSeeking.value = false\n}\n\n// 时间轴滚动事件\nconst onTimeScroll = (e) => {\n  if (!isDragging.value) {\n    timeScrollLeft.value = e.detail.scrollLeft\n  }\n}\n\n// 选择筛选条件\nconst selectFilter = (filter) => {\n  activeFilter.value = filter\n}\n\n// 检查指定时间是否有事件\nconst hasEvent = (hour, minute) => {\n  const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n  const events = filteredEvents.value\n  for (let i = 0; i < events.length; i++) {\n    const event = events[i]\n    if (event.date === activeDate.value && event.time.startsWith(timeStr)) {\n      return true\n    }\n  }\n  return false\n}\n\n// 获取事件类型\nconst getEventType = (hour, minute) => {\n  const timeStr = `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`\n  const eventsList = events.value\n  for (let i = 0; i < eventsList.length; i++) {\n    const event = eventsList[i]\n    if (event.date === activeDate.value && event.time.startsWith(timeStr)) {\n      return event.type\n    }\n  }\n  return ''\n}\n\n// 格式化小时显示\nconst formatHour = (hour) => {\n  return `${hour.toString().padStart(2, '0')}:00`\n}\n\n// 格式化时间显示\nconst formatTime = (seconds) => {\n  const hrs = Math.floor(seconds / 3600)\n  const mins = Math.floor((seconds % 3600) / 60)\n  const secs = Math.floor(seconds % 60)\n  return `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\n}\n\n// 播放/暂停事件\nconst onPlay = () => {\n  console.log('视频开始播放')\n}\n\nconst onPause = () => {\n  console.log('视频暂停')\n}\n\n// 组件生命周期\nonMounted(() => {\n  initVideoContext();\n  if (!videoContext.value) {\n    console.error('视频上下文初始化失败，请检查');\n  }\n});\n</script>\n\n<style>\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.header {\n  padding: 15px;\n  background-color: #007aff;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n}\n\n.title {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.current-time {\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.date-scroll {\n  width: 100%;\n  white-space: nowrap;\n  background-color: #333;\n  padding: 8px 0;\n  position: relative;\n  z-index: 10;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n}\n\n.date-list {\n  display: inline-flex;\n  padding: 0 10px;\n}\n\n.date-item {\n  padding: 8px 16px;\n  margin: 0 5px;\n  border-radius: 16px;\n  background-color: #555;\n  color: white;\n  font-size: 14px;\n  transition: all 0.2s;\n}\n\n.date-item.active {\n  background-color: #007aff;\n  font-weight: bold;\n  transform: scale(1.05);\n}\n\n.video-container {\n  width: 100%;\n  height: 250px;\n  background-color: #000;\n  position: relative;\n}\n\n.video-player {\n  width: 100%;\n  height: 100%;\n}\n\n.time-ruler-container {\n  width: 100%;\n  padding: 10px 0;\n  background-color: #333;\n  position: relative;\n  z-index: 5;\n  box-shadow: 0 -2px 5px rgba(0,0,0,0.2);\n}\n\n.time-ruler-scroll {\n  width: 100%;\n  height: 70px;\n  white-space: nowrap;\n}\n\n.time-ruler {\n  display: inline-flex;\n  height: 100%;\n  padding-left: 10px;\n  position: relative;\n  touch-action: none;\n  user-select: none;\n}\n\n.hour-section {\n  display: flex;\n  flex-direction: column;\n  width: 120px;\n  border-right: 1px solid #444;\n  position: relative;\n}\n\n.hour-mark {\n  color: white;\n  font-size: 12px;\n  padding: 4px 8px;\n  background-color: #444;\n  border-radius: 4px;\n  margin: 2px;\n  text-align: center;\n}\n\n.minute-marks {\n  display: flex;\n  flex: 1;\n  position: relative;\n}\n\n.minute-mark {\n  flex: 1;\n  position: relative;\n  border-right: 1px solid #444;\n}\n\n.minute-label {\n  position: absolute;\n  bottom: 5px;\n  left: 2px;\n  color: #aaa;\n  font-size: 10px;\n}\n\n.event-dot {\n  position: absolute;\n  top: 8px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  z-index: 2;\n}\n\n.event-dot.alarm {\n  background-color: #ff3b30;\n  box-shadow: 0 0 5px #ff3b30;\n}\n\n.event-dot.motion {\n  background-color: #ff9500;\n  box-shadow: 0 0 5px #ff9500;\n}\n\n.event-dot.human {\n  background-color: #34c759;\n  box-shadow: 0 0 5px #34c759;\n}\n\n.playhead {\n  position: absolute;\n  top: 0;\n  width: 2px;\n  height: 100%;\n  background-color: #007aff;\n  z-index: 10;\n  pointer-events: none;\n}\n\n.playhead::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -6px;\n  width: 14px;\n  height: 14px;\n  background-color: #007aff;\n  border-radius: 50%;\n  border: 2px solid white;\n  box-sizing: border-box;\n}\n\n.time-indicator {\n  position: absolute;\n  top: -25px;\n  left: 0;\n  transform: translateX(-50%);\n  background-color: #007aff;\n  color: white;\n  padding: 3px 8px;\n  border-radius: 4px;\n  font-size: 12px;\n  z-index: 11;\n  pointer-events: none;\n  white-space: nowrap;\n}\n\n.time-indicator::after {\n  content: '';\n  position: absolute;\n  bottom: -5px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 0;\n  height: 0;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n  border-top: 5px solid #007aff;\n}\n\n.filter-bar {\n  display: flex;\n  justify-content: space-around;\n  padding: 12px 5px;\n  background-color: #333;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 20;\n  box-shadow: 0 -2px 10px rgba(0,0,0,0.3);\n}\n\n.filter-item {\n  padding: 8px 12px;\n  border-radius: 16px;\n  background-color: #555;\n  color: white;\n  font-size: 12px;\n  transition: all 0.2s;\n  flex: 1;\n  margin: 0 5px;\n  text-align: center;\n}\n\n.filter-item.active {\n  background-color: #007aff;\n  font-weight: bold;\n  transform: scale(1.05);\n}\n</style>",null],"names":[],"mappings":";;;;;;;;;;;;;+BAuIM;+BA2FqB;;;;;;;;;YAlH3B,WAAM;gBACJ,SAAA,MAAM,MAAM,AAAC;gBACb,SAAA,MAAM,MAAM,AAAC;gBACb,SAAA,MAAM,MAAM,AAAC;gBAEb,YAAY,MAAM,MAAM,EAAE,MAAM,MAAM,EAAE,MAAM,MAAM,CAAA;oBAClD,IAAI,CAAC,IAAI,GAAG;oBACZ,IAAI,CAAC,IAAI,GAAG;oBACZ,IAAI,CAAC,IAAI,GAAG;gBACd;;YAGF,IAAM,cAAc,IAAI;YACxB,IAAM,cAAc,IAAI;YACxB,IAAM,aAAa,IAAI;YACvB,IAAM,eAAe,IAAI;YACzB,IAAM,WAAW,IAAI;YACrB,IAAM,eAAe,IAAI,eAAqB,IAAI;YAClD,IAAM,YAAY,IAAI,KAAK;YAC3B,IAAM,iBAAiB,IAAI,CAAC;YAC5B,IAAM,iBAAiB,IAAI,CAAC;YAC5B,IAAM,mBAAmB,IAAI,CAAC;YAC9B,IAAM,gBAAgB,IAAI,CAAC;YAC3B,IAAM,eAAe,IAAI,CAAC;YAC1B,IAAM,aAAa,IAAI,KAAK;YAC5B,IAAM,SAAS,IAAI,CAAC;YACpB,IAAM,kBAAkB,IAAI,CAAC;YAC7B,IAAM,eAAe,IAAI,CAAC;YAC1B,IAAM,uBAAuB,IAAI,CAAC;YAClC,IAAM,uBAAuB,IAAI,CAAC;YAGlC,IAAM,WAAW;YAGjB,IAAM,WAAW;gBAAC;gBAAS;gBAAS;gBAAS;gBAAS;gBAAS;aAAQ;YACvE,IAAM,gCAAc;AAAC,iBAAC;AAAE,iBAAC;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;AAAE,kBAAE;aAAC;YAClE,IAAM,UAAU,IAKf,eAJC;gBAAE,IAAA,QAAO;gBAAQ,IAAA,QAAO;aAAS,EACjC;gBAAE,IAAA,QAAO;gBAAQ,IAAA,QAAO;aAAU,EAClC;gBAAE,IAAA,QAAO;gBAAQ,IAAA,QAAO;aAAS,EACjC;gBAAE,IAAA,QAAO;gBAAM,IAAA,QAAO;aAAO;YAI/B,IAAM,SAAS,QAAI,WAAA,UACf,OAAM,SAAS,OAAM,SAAS,OAAM,UADrB,UAEf,OAAM,SAAS,OAAM,SAAS,OAAM,WAFrB,UAGf,OAAM,SAAS,OAAM,SAAS,OAAM,UAHrB,UAIf,OAAM,SAAS,OAAM,SAAS,OAAM;YAIxC,IAAM,aAAa,SAAS,OAAA,MAAA;uBAAM,IAAQ;;;YAC1C,IAAM,iBAAiB,kBAAS,YAAa,gBAAA,WAAK;gBAChD,IAAI,aAAa,KAAK,KAAK;oBAAO,OAAO,OAAO,KAAK;;gBACrD,OAAO,OAAO,KAAK,CAAC,MAAM,CAAC,IAAC,IAAC,OAAA;2BAAK,EAAE,IAAI,KAAK,aAAa,KAAK;;;YACjE;;YAGA,IAAM,mBAAmB,KAAK;gBAC5B,IAAI;oBACF,aAAa,KAAK,GAAG,uBAAuB;oBAC5C,QAAQ,GAAG,CAAC,cAAc,aAAa,KAAI,EAAA;;iBAC3C,OAAO,kBAAO;oBACd,QAAQ,KAAK,CAAC,cAAc,OAAI;;YAEpC;YAEA,IAAM,gBAAgB,IAAC,MAAK,OAAU;gBACpC,QAAQ,GAAG,CAAC,WAAW,MAAG;YAC5B;YAIA,IAAM,aAAa,IAAC,MAAK,OAAU;gBACjC,WAAW,KAAK,GAAG;gBACnB,YAAY,KAAK,GAAG,UAAQ;gBAC5B,cAAc;gBAEd,IAAM,QAAQ,SAAS,OAAO,CAAC;gBAC/B,eAAe,KAAK,GAAG,QAAQ,EAAE;YACnC;YAWA,IAAM,eAAe,IAAC,GAAE,wBAA2B;gBACjD,IAAI,UAAU,KAAK,IAAI,WAAW,KAAK;oBAAE;;gBAEzC,IAAM,uBAAuB,EAAE,MAAM,CAAC,WAAW;gBACjD,YAAY,KAAK,GAAG,WAAW;gBAG/B,IAAM,MAAM,KAAK,GAAG;gBACpB,IAAI,MAAM,aAAa,KAAK,GAAG,GAAG;oBAAE;;gBACpC,aAAa,KAAK,GAAG;gBAErB,uBAAuB;YACzB;YAGA,IAAM,yBAAyB,IAAC,qBAAwB;gBACtD,IAAM,cAAc,uBAAuB,CAAC;gBAC5C,iBAAiB,KAAK,GAAG;gBAGzB,IAAI,KAAK,GAAG,CAAC,qBAAqB,KAAK,GAAG,eAAe,EAAE,EAAE;oBAC3D,IAAM,aAAa;oBACnB,IAAM,kBAAkB,WAAW,WAAW,IAAI,GAAG;oBACrD,IAAM,YAAY,kBAAkB,CAAC;oBACrC,IAAM,mBAAmB,cAAc;oBAEvC,IAAM,gBAAgB,WAAW,KAAK,GAAG;oBACzC,eAAe,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,eAAe;;YAE/D;YAGA,IAAM,aAAa,IAAC,MAAM,OAAU;gBAClC,IAAM,gBAAgB,OAAO,IAAI,GAAG,SAAS,EAAE;gBAC/C,cAAc;YAChB;YAEA,IAAM,gBAAgB,IAAC,cAAiB;gBACtC,UAAU,KAAK,GAAG,IAAI;gBACtB,qBAAqB,KAAK,GAAG,gBAAgB,CAAC;gBAE9C,IAAI,aAAa,KAAK,EAAE;oBACtB,aAAa,KAAK,GAAC,IAAI,CAAC;;gBAG1B,iBAAiB,KAAK,GAAG,gBAAgB,CAAC;gBAC1C,YAAY,KAAK,GAAG,WAAW;YACjC;YAGA,IAAM,WAAW,KAAK;gBACpB,UAAU,KAAK,GAAG,KAAK;YACzB;YAGA,IAAM,eAAe,IAAC,EAAK;gBACzB,WAAW,KAAK,GAAG,IAAI;gBACvB,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;gBACjC,gBAAgB,KAAK,GAAG,eAAe,KAAK;gBAC5C,aAAa,KAAK,GAAG,KAAK,GAAG;gBAE7B,UAAU,KAAK,GAAG,IAAI;gBACtB,IAAI,aAAa,KAAK,EAAE;oBACtB,aAAa,KAAK,GAAC,KAAK;;YAE5B;YAGA,IAAM,cAAc,IAAC,EAAK;gBACxB,IAAI,CAAC,WAAW,KAAK;oBAAE;;gBAEvB,IAAM,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,KAAK;gBAChD,IAAM,gBAAgB,gBAAgB,KAAK,GAAG;gBAE9C,IAAM,aAAa;gBACnB,IAAM,kBAAkB,WAAW,WAAW,IAAI,GAAG;gBACrD,IAAM,gBAAgB,WAAW,KAAK,GAAG;gBACzC,eAAe,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,eAAe;gBAG3D,IAAM,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;gBACjC,IAAM,cAAc,SAAS,OAAO,KAAK,GAAG,gBAAgB,KAAK;gBACjE,IAAM,gBAAgB,cAAc,CAAC;gBAGrC,YAAY,KAAK,GAAG,WAAW;gBAC/B,iBAAiB,KAAK,GAAG,gBAAgB,CAAC;gBAC1C,qBAAqB,KAAK,GAAG,gBAAgB,CAAC;gBAG9C,IAAM,MAAM,KAAK,GAAG;gBACpB,IAAI,MAAM,aAAa,KAAK,GAAG,GAAG,EAAE;oBAClC,IAAI,aAAa,KAAK,EAAE;wBACtB,QAAQ,GAAG,CAAC,YAAY,eAAe,KAAE;wBACzC,qBAAqB,KAAK,GAAG;wBAC7B,aAAa,KAAK,GAAC,IAAI,CAAC;;oBAE1B,aAAa,KAAK,GAAG;;YAEzB;YAGA,IAAM,aAAa,KAAK;gBACtB,IAAI,CAAC,WAAW,KAAK;oBAAE;;gBAGvB,IAAM,aAAa;gBACnB,IAAM,kBAAkB,WAAW,WAAW,IAAI,GAAG;gBACrD,IAAM,gBAAgB,CAAC,eAAe,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC;gBAItE,IAAI,aAAa,KAAK,EAAE;oBACtB,QAAQ,GAAG,CAAC,gBAAgB,qBAAqB,KAAK,EAAE,KAAE;oBAC1D,aAAa,KAAK,GAAC,IAAI,CAAC,qBAAqB,KAAK;oBAClD,aAAa,KAAK,GAAC,IAAI;;gBAGzB,iBAAiB,KAAK,GAAG,gBAAgB,CAAC;gBAC1C,YAAY,KAAK,GAAG,WAAW;gBAC/B,qBAAqB,KAAK,GAAG,gBAAgB,CAAC;gBAE9C,WAAW,KAAK,GAAG,KAAK;gBACxB,UAAU,KAAK,GAAG,KAAK;YACzB;YAGA,IAAM,eAAe,IAAC,EAAK;gBACzB,IAAI,CAAC,WAAW,KAAK,EAAE;oBACrB,eAAe,KAAK,GAAG,EAAE,MAAM,CAAC,UAAU;;YAE9C;YAGA,IAAM,eAAe,IAAC,OAAU;gBAC9B,aAAa,KAAK,GAAG;YACvB;YAGA,IAAM,WAAW,IAAC,MAAM,SAAM,OAAA,CAAI;gBAChC,IAAM,UAAU,KAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,OAAI,MAAI,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE;gBACrF,IAAM,SAAS,eAAe,KAAK;oBACnC;oBAAK,IAAI,YAAI,CAAC;oBAAd,MAAgB,IAAI,OAAO,MAAM;wBAC/B,IAAM,QAAQ,MAAM,CAAC,EAAE;wBACvB,IAAI,MAAM,IAAI,KAAK,WAAW,KAAK,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU;4BACrE,OAAO,IAAI;;wBAHoB;;;gBAMnC,OAAO,KAAK;YACd;YAGA,IAAM,eAAe,IAAC,MAAM,SAAM,MAAA,CAAI;gBACpC,IAAM,UAAU,KAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,OAAI,MAAI,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE;gBACrF,IAAM,aAAa,OAAO,KAAK;oBAC/B;oBAAK,IAAI,YAAI,CAAC;oBAAd,MAAgB,IAAI,WAAW,MAAM;wBACnC,IAAM,QAAQ,UAAU,CAAC,EAAE;wBAC3B,IAAI,MAAM,IAAI,KAAK,WAAW,KAAK,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU;4BACrE,OAAO,MAAM,IAAI;;wBAHkB;;;gBAMvC,OAAO;YACT;YAGA,IAAM,aAAa,IAAC,OAAI,MAAA,CAAI;gBAC1B,OAAO,KAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,OAAI;YAC5C;YAGA,IAAM,aAAa,IAAC,UAAO,MAAA,CAAI;gBAC7B,IAAM,MAAM,KAAK,KAAK,CAAC,UAAU,IAAI;gBACrC,IAAM,OAAO,KAAK,KAAK,CAAC,CAAC,UAAU,IAAI,IAAI,EAAE;gBAC7C,IAAM,OAAO,KAAK,KAAK,CAAC,UAAU,EAAE;gBACpC,OAAO,KAAG,IAAI,QAAQ,CAAA,EAAA,EAAG,QAAQ,CAAC,CAAC,EAAE,OAAI,MAAI,KAAK,QAAQ,CAAA,EAAA,EAAG,QAAQ,CAAC,CAAC,EAAE,OAAI,MAAI,KAAK,QAAQ,CAAA,EAAA,EAAG,QAAQ,CAAC,CAAC,EAAE;YAC/G;YAGA,IAAM,SAAS,KAAK;gBAClB,QAAQ,GAAG,CAAC,UAAO;YACrB;YAEA,IAAM,UAAU,KAAK;gBACnB,QAAQ,GAAG,CAAC,QAAK;YACnB;YAGA,UAAU,KAAK;gBACb;gBACA,IAAI,CAAC,aAAa,KAAK,EAAE;oBACvB,QAAQ,KAAK,CAAC,kBAAe;;YAEjC;;;uBA5YE,IAyGO,QAAA,IAzGD,WAAM,cAAW;oBAErB,IAGO,QAAA,IAHD,WAAM,WAAQ;wBAClB,IAAiC,QAAA,IAA3B,WAAM,UAAQ;wBACpB,IAAqE,QAAA,IAA/D,WAAM,iBAAc,IAAI,YAAA,KAAW,IAAG,MAAC,IAAG,YAAA,KAAW,GAAA,CAAA;;oBAI7D,IAWc,eAAA,IAXD,WAAM,eAAc,cAAA,IAAU,iBAAa,eAAA,KAAc;wBACpE,IASO,QAAA,IATD,WAAM,cAAW;4BACrB,IAOO,UAAA,IAAA,EAAA,cAAA,UAAA,CANmB,UAAQ,IAAxB,MAAM,OAAN,SAAI,UAAA,GAAA,CAAA;uCADd,IAOO,QAAA,IALJ,SAAK,OACL,WAAK,IAAA;oCAAA;oCAAgB,IAAA,WAAA,KAAU,KAAK;wCAAI;;wCAAA;;iCAAA,GACxC,aAAG,KAAA;oCAAE,WAAW;gCAAI;uCAElB,OAAI,EAAA,EAAA;oCAAA;iCAAA;;;;;;;oBAMb,IAYO,QAAA,IAZD,WAAM,oBAAiB;wBAC3B,IAUS,SAAA,IATP,QAAG,WACF,SAAK,SAAA,KAAQ,EACb,cAAU,IAAI,EACf,WAAM,gBACL,kBAAY,cACZ,YAAM,QACN,aAAO,SAEP,cAAQ;;;;oBAKb,IAuDO,QAAA,IAvDD,WAAM,yBAAsB;wBAChC,IAqDc,eAAA,IApDZ,WAAM,qBACN,cAAA,IACC,iBAAa,eAAA,KAAc,EAC5B,2BAAA,IACC,cAAQ;4BAET,IA6CO,QAAA,IA5CL,WAAM,cACL,WAAK,IAAE,IAAA,YAAA,WAAA,KAAA,GAAA,SACP,kBAAY,cACZ,iBAAW,aACX,gBAAU;gCAGX,IAsBO,UAAA,IAAA,EAAA,cAAA,UAAA,CArBU,EAAE,EAAA,IAAV,MAAA,OAAA,SAAI,UAAA,GAAA,CAAA;2CADb,IAsBO,QAAA,IApBJ,UAAG,UAAY,OAChB,WAAM;wCAEN,IAAyD,QAAA,IAAnD,WAAM,cAAW,IAAI,WAAW,OAAI,CAAA,IAAA,CAAA;wCAC1C,IAeO,QAAA,IAfD,WAAM,iBAAc;4CACxB,IAaO,UAAA,IAAA,EAAA,cAAA,UAAA,CAZY,aAAW,IAArB,QAAA,OAAA,SAAM,UAAA,GAAA,CAAA;uDADf,IAaO,QAAA,IAXJ,UAAG,SAAW,OAAI,MAAS,SAC5B,WAAM,eACL,aAAG,KAAA;oDAAE,WAAW,OAAI,CAAA,EAAM;gDAAM;;+DAIzB,SAAS,OAAI,CAAA,EAAM;wDAD3B,IAGQ,QAAA,gBADL,WAAK,IAAA;4DAAA;4DAAgB,aAAa,OAAI,CAAA,EAAM;yDAAM;;;;;oDAGzC,IAAA,SAAM,EAAA,KAAA,CAAA;wDAAlB,IAAuE,QAAA,gBAAxC,WAAM,qBAAkB,SAAM,CAAA;;;;;;;;;;;;;gCAMnE,IAGQ,QAAA,IAFN,WAAM,YACL,WAAK,IAAE,IAAA,WAAA,iBAAA,KAAA,GAAA;gCAIV,IAKO,QAAA,IAJL,WAAM,kBACL,WAAK,IAAE,IAAA,WAAA,iBAAA,KAAA,GAAA,cAEL,YAAA,KAAW,CAAC,KAAK,CAAA,KAAM,KAAK,CAAA,CAAA,EAAA,CAAA,EAAO,IAAI,CAAA,OAAA,CAAA;;;;;;oBAOlD,IASO,QAAA,IATD,WAAM,eAAY;wBACtB,IAOO,UAAA,IAAA,EAAA,cAAA,UAAA,CANY,SAAO,IAAjB,QAAA,OAAA,SAAM,UAAA,GAAA,CAAA;mCADf,IAOO,QAAA,IALJ,SAAK,MAAM,CAAA,QAAM,EACjB,WAAK,IAAA;gCAAA;gCAAkB,IAAA,aAAA,KAAY,KAAK,MAAM,CAAA,QAAM;oCAAA;;oCAAA;;6BAAA,GACpD,aAAG,KAAA;gCAAE,aAAa,MAAM,CAAA,QAAA;4BAAM;mCAE5B,MAAM,CAAA,QAAA,GAAM,EAAA,EAAA;gCAAA;6BAAA"}