{"version":3,"file":"app-service.js","sources":["../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-console/dist/app.esm.js","pages/index/index.uvue","uni_modules/lime-daily-punch/components/l-daily-punch/calender.uts","uni_modules/lime-shared/isString/index.ts","uni_modules/lime-shared/isNumber/index.ts","uni_modules/lime-shared/isNumeric/index.ts","uni_modules/lime-shared/unitConvert/index.ts","uni_modules/lime-daily-punch/components/l-daily-punch/l-daily-punch.uvue","../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-app/dist/uni-app.es.js","uni_modules/lime-dayuts/utssdk/interface.uts","uni_modules/lime-dayuts/common/constant.ts","uni_modules/lime-dayuts/common/utils.ts","uni_modules/lime-dayuts/common/locale/en/index.ts","uni_modules/lime-dayuts/common/locale/zh-cn/index.ts","uni_modules/lime-dayuts/common/use.ts","uni_modules/lime-dayuts/common/index.ts","pages/message/message.uvue","static/down.png","static/vedio.png","pages/mine/mine.uvue","static/mine/local.png","static/mine/cloud.png","static/mine/msgList.png","static/mine/user.png","static/mine/right.png","static/mine/liuliang.png","static/mine/order.png","static/mine/quetion.png","static/mine/online.png","static/mine/advice.png","static/mine/setting.png","static/mine/about.png","uni_modules/firstui-unix/components/fui-switch/fui-switch.uvue","uni_modules/firstui-unix/components/fui-button/fui-button.uvue","pages/mine/userInfo/userInfo.uvue","pages/mine/userInfo/CancelAnAccount/CancelAnAccount.uvue","static/error_big.png","App.uvue"],"sourcesContent":["/// <reference types=\"@dcloudio/uni-app-x/types/uni/global\" />\n// 之所以又写了一份，是因为外层的socket，connectSocket的时候必须传入multiple:true\n// 但是android又不能传入，目前代码里又不能写条件编译之类的。\nfunction initRuntimeSocket(hosts, port, id) {\n    if (hosts == '' || port == '' || id == '')\n        return Promise.resolve(null);\n    return hosts\n        .split(',')\n        .reduce((promise, host) => {\n        return promise.then((socket) => {\n            if (socket != null)\n                return Promise.resolve(socket);\n            return tryConnectSocket(host, port, id);\n        });\n    }, Promise.resolve(null));\n}\nconst SOCKET_TIMEOUT = 500;\nfunction tryConnectSocket(host, port, id) {\n    return new Promise((resolve, reject) => {\n        const socket = uni.connectSocket({\n            url: `ws://${host}:${port}/${id}`,\n            fail() {\n                resolve(null);\n            },\n        });\n        const timer = setTimeout(() => {\n            // @ts-expect-error\n            socket.close({\n                code: 1006,\n                reason: 'connect timeout',\n            });\n            resolve(null);\n        }, SOCKET_TIMEOUT);\n        socket.onOpen((e) => {\n            clearTimeout(timer);\n            resolve(socket);\n        });\n        socket.onClose((e) => {\n            clearTimeout(timer);\n            resolve(null);\n        });\n        socket.onError((e) => {\n            clearTimeout(timer);\n            resolve(null);\n        });\n    });\n}\n\nfunction initRuntimeSocketService() {\n    const hosts = process.env.UNI_SOCKET_HOSTS;\n    const port = process.env.UNI_SOCKET_PORT;\n    const id = process.env.UNI_SOCKET_ID;\n    if (hosts == '' || port == '' || id == '')\n        return Promise.resolve(false);\n    let socketTask = null;\n    __registerWebViewUniConsole(() => {\n        return \"!function(){\\\"use strict\\\";\\\"function\\\"==typeof SuppressedError&&SuppressedError;var e=[\\\"log\\\",\\\"warn\\\",\\\"error\\\",\\\"info\\\",\\\"debug\\\"],n=e.reduce((function(e,n){return e[n]=console[n].bind(console),e}),{}),t=null,r=new Set,o={};function i(e){if(null!=t){var n=e.map((function(e){if(\\\"string\\\"==typeof e)return e;var n=e&&\\\"promise\\\"in e&&\\\"reason\\\"in e,t=n?\\\"UnhandledPromiseRejection: \\\":\\\"\\\";if(n&&(e=e.reason),e instanceof Error&&e.stack)return e.message&&!e.stack.includes(e.message)?\\\"\\\".concat(t).concat(e.message,\\\"\\\\n\\\").concat(e.stack):\\\"\\\".concat(t).concat(e.stack);if(\\\"object\\\"==typeof e&&null!==e)try{return t+JSON.stringify(e)}catch(e){return t+String(e)}return t+String(e)})).filter(Boolean);n.length>0&&t(JSON.stringify(Object.assign({type:\\\"error\\\",data:n},o)))}else e.forEach((function(e){r.add(e)}))}function a(e,n){try{return{type:e,args:u(n)}}catch(e){}return{type:e,args:[]}}function u(e){return e.map((function(e){return c(e)}))}function c(e,n){if(void 0===n&&(n=0),n>=7)return{type:\\\"object\\\",value:\\\"[Maximum depth reached]\\\"};switch(typeof e){case\\\"string\\\":return{type:\\\"string\\\",value:e};case\\\"number\\\":return function(e){return{type:\\\"number\\\",value:String(e)}}(e);case\\\"boolean\\\":return function(e){return{type:\\\"boolean\\\",value:String(e)}}(e);case\\\"object\\\":try{return function(e,n){if(null===e)return{type:\\\"null\\\"};if(function(e){return e.$&&s(e.$)}(e))return function(e,n){return{type:\\\"object\\\",className:\\\"ComponentPublicInstance\\\",value:{properties:Object.entries(e.$.type).map((function(e){return f(e[0],e[1],n+1)}))}}}(e,n);if(s(e))return function(e,n){return{type:\\\"object\\\",className:\\\"ComponentInternalInstance\\\",value:{properties:Object.entries(e.type).map((function(e){return f(e[0],e[1],n+1)}))}}}(e,n);if(function(e){return e.style&&null!=e.tagName&&null!=e.nodeName}(e))return function(e,n){return{type:\\\"object\\\",value:{properties:Object.entries(e).filter((function(e){var n=e[0];return[\\\"id\\\",\\\"tagName\\\",\\\"nodeName\\\",\\\"dataset\\\",\\\"offsetTop\\\",\\\"offsetLeft\\\",\\\"style\\\"].includes(n)})).map((function(e){return f(e[0],e[1],n+1)}))}}}(e,n);if(function(e){return\\\"function\\\"==typeof e.getPropertyValue&&\\\"function\\\"==typeof e.setProperty&&e.$styles}(e))return function(e,n){return{type:\\\"object\\\",value:{properties:Object.entries(e.$styles).map((function(e){return f(e[0],e[1],n+1)}))}}}(e,n);if(Array.isArray(e))return{type:\\\"object\\\",subType:\\\"array\\\",value:{properties:e.map((function(e,t){return function(e,n,t){var r=c(e,t);return r.name=\\\"\\\".concat(n),r}(e,t,n+1)}))}};if(e instanceof Set)return{type:\\\"object\\\",subType:\\\"set\\\",className:\\\"Set\\\",description:\\\"Set(\\\".concat(e.size,\\\")\\\"),value:{entries:Array.from(e).map((function(e){return function(e,n){return{value:c(e,n)}}(e,n+1)}))}};if(e instanceof Map)return{type:\\\"object\\\",subType:\\\"map\\\",className:\\\"Map\\\",description:\\\"Map(\\\".concat(e.size,\\\")\\\"),value:{entries:Array.from(e.entries()).map((function(e){return function(e,n){return{key:c(e[0],n),value:c(e[1],n)}}(e,n+1)}))}};if(e instanceof Promise)return{type:\\\"object\\\",subType:\\\"promise\\\",value:{properties:[]}};if(e instanceof RegExp)return{type:\\\"object\\\",subType:\\\"regexp\\\",value:String(e),className:\\\"Regexp\\\"};if(e instanceof Date)return{type:\\\"object\\\",subType:\\\"date\\\",value:String(e),className:\\\"Date\\\"};if(e instanceof Error)return{type:\\\"object\\\",subType:\\\"error\\\",value:e.message||String(e),className:e.name||\\\"Error\\\"};var t=void 0,r=e.constructor;r&&r.get$UTSMetadata$&&(t=r.get$UTSMetadata$().name);var o=Object.entries(e);(function(e){return e.modifier&&e.modifier._attribute&&e.nodeContent})(e)&&(o=o.filter((function(e){var n=e[0];return\\\"modifier\\\"!==n&&\\\"nodeContent\\\"!==n})));return{type:\\\"object\\\",className:t,value:{properties:o.map((function(e){return f(e[0],e[1],n+1)}))}}}(e,n)}catch(e){return{type:\\\"object\\\",value:{properties:[]}}}case\\\"undefined\\\":return{type:\\\"undefined\\\"};case\\\"function\\\":return function(e){return{type:\\\"function\\\",value:\\\"function \\\".concat(e.name,\\\"() {}\\\")}}(e);case\\\"symbol\\\":return function(e){return{type:\\\"symbol\\\",value:e.description}}(e);case\\\"bigint\\\":return function(e){return{type:\\\"bigint\\\",value:String(e)}}(e)}}function s(e){return e.type&&null!=e.uid&&e.appContext}function f(e,n,t){var r=c(n,t);return r.name=e,r}var l=null,p=[],y={},g=\\\"---BEGIN:EXCEPTION---\\\",d=\\\"---END:EXCEPTION---\\\";function v(e){null!=l?l(JSON.stringify(Object.assign({type:\\\"console\\\",data:e},y))):p.push.apply(p,e)}var m=/^\\\\s*at\\\\s+[\\\\w/./-]+:\\\\d+$/;function b(){function t(e){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var o=function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))}([],t,!0);if(o.length){var u=o[o.length-1];\\\"string\\\"==typeof u&&m.test(u)&&o.pop()}if(n[e].apply(n,o),\\\"error\\\"===e&&1===t.length){var c=t[0];if(\\\"string\\\"==typeof c&&c.startsWith(g)){var s=g.length,f=c.length-d.length;return void i([c.slice(s,f)])}if(c instanceof Error)return void i([c])}v([a(e,t)])}}return function(){var e=console.log,n=Symbol();try{console.log=n}catch(e){return!1}var t=console.log===n;return console.log=e,t}()?(e.forEach((function(e){console[e]=t(e)})),function(){e.forEach((function(e){console[e]=n[e]}))}):function(){}}function _(e){var n={type:\\\"WEB_INVOKE_APPSERVICE\\\",args:{data:{name:\\\"console\\\",arg:e}}};return window.__uniapp_x_postMessageToService?window.__uniapp_x_postMessageToService(n):window.__uniapp_x_.postMessageToService(JSON.stringify(n))}!function(){if(!window.__UNI_CONSOLE_WEBVIEW__){window.__UNI_CONSOLE_WEBVIEW__=!0;var e=\\\"[web-view]\\\".concat(window.__UNI_PAGE_ROUTE__?\\\"[\\\".concat(window.__UNI_PAGE_ROUTE__,\\\"]\\\"):\\\"\\\");b(),function(e,n){if(void 0===n&&(n={}),l=e,Object.assign(y,n),null!=e&&p.length>0){var t=p.slice();p.length=0,v(t)}}((function(e){_(e)}),{channel:e}),function(e,n){if(void 0===n&&(n={}),t=e,Object.assign(o,n),null!=e&&r.size>0){var a=Array.from(r);r.clear(),i(a)}}((function(e){_(e)}),{channel:e}),window.addEventListener(\\\"error\\\",(function(e){i([e.error])})),window.addEventListener(\\\"unhandledrejection\\\",(function(e){i([e])}))}}()}();\";\n    }, (data) => {\n        socketTask === null || socketTask === void 0 ? void 0 : socketTask.send({\n            data,\n        });\n    });\n    return Promise.resolve()\n        .then(() => {\n        return initRuntimeSocket(hosts, port, id).then((socket) => {\n            if (socket == null) {\n                return false;\n            }\n            socketTask = socket;\n            return true;\n        });\n    })\n        .catch(() => {\n        return false;\n    });\n}\ninitRuntimeSocketService();\n\nexport { initRuntimeSocketService };\n","<template>\n\t<view class=\"container\">\n\t\t<view class=\"content\">\n\t\t\t<view class=\"video-container\" style=\"border-radius: 15rpx; overflow: hidden;\">\n\t\t\t\t<video class=\"video\" id=\"myVideo\" :title=\"deviceTitle\" :src=\"videoSrc\" ref=\"videoRef\" :controls=\"true\" :show-play-btn=\"true\"\n\t\t\t\t:show-center-play-btn=\"true\" :enable-progress-gesture=\"true\" :show-fullscreen-btn=\"true\"\n\t\t\t\t:show-mute-btn=\"true\" @click=\"clickVdedio\" ></video>\n\t\t\t</view>\n\t\t\t<view>{{deviceTitle}}</view>\n\t\t\t<view class=\"video-right-control\">\n\t\t\t\t<view class=\"vedio-control\">\n\t\t\t\t\t<image class=\"vedio-control-icon\" :src=\"forward\" @click=\"toDeviceDetail\"></image>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"vedio-control\">\n\t\t\t\t\t<image class=\"vedio-control-icon\" :src=\"errIcon\" @click=\"errClick\"></image>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"vedio-control\">\n\t\t\t\t\t<image class=\"vedio-control-icon\" :src=\"transfer\" @click=\"transferClick\"></image>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"vedio-control\">\n\t\t\t\t\t<image class=\"vedio-control-icon\" :src=\"replayIcon\" @click=\"replay\"></image>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<view class=\"video-bottom-control\">\n\t\t\t\t<view class=\"vedio-control\">\n\t\t\t\t\t<image class=\"vedio-control-icon\" @click=\"pauseClick\" :src=\"pauseIcon\"></image>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t</view>\n</template>\n\n<script setup lang=\"uts\">\n\timport { ref } from 'vue'\n\n\tconst deviceTitle = ref('设备名称')\n\tconst forward = '/static/video/forward.png'\n\tconst errIcon = '/static/video/error.png'\n\tconst transfer = '/static/video/transfer.png'\n\tconst replayIcon = '/static/video/replay.png'\n\tconst playIcon = '/static/video/play.png'\n\tconst pauseIcon = '/static/video/pause.png'\n\tconst addIcon = '/static/tabbar/add.png'\n\tconst videoSrc = \"https://qiniu-web-assets.dcloud.net.cn/video/sample/2minute-demo.mp4\"\n\tconst videoRef = ref(null);\n\n\tconst addDevices = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '添加',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\n\tconst replay = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '重播',\n\t\t\ticon: 'none'\n\t\t})\n\n\t\tvideoRef.value.play()\n\n\t\tuni.createVideoContext('myVideo')!!.play();\n\t}\n\n\tconst transferClick = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '传输',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\n\tconst errClick = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '警报',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\n\tconst toDeviceDetail = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '设备详情',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\n\tconst pauseClick = () => {\n\n\t\tvideoRef.value.pause()\n\n\t\tuni.createVideoContext('myVideo')!!.pause();\n\t\tuni.showToast({\n\t\t\ttitle: '暂停',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\n\tconst vedioClick = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '播放',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\t\n\tconst clickVdedio = () => {\n\t\tuni.showToast({\n\t\t\ttitle:'sss',\n\t\t\ticon: 'none'\n\t\t})\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tpadding: 0 20rpx;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t.content {\n\t\t\tposition: relative;\n\t\t\tborder-radius: 15rpx;\n\t\t\twidth: 100%;\n\t\t\theight: 400rpx;\n\t\t\toverflow: hidden;\n\n\t\t\t.video-container {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\t.video {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tobject-fit: cover; // 使视频充满容器并保持比例\n\t\t\t\tmargin-bottom: 0; // 移除底部边距\n\t\t\t}\n\n\t\t\t.video-top-title {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\theight: 60rpx;\n\t\t\t\twidth: 80%;\n\t\t\t\tpadding: 15rpx 0 0 20rpx;\n\t\t\t\tbackground: linear-gradient(to right,\n\t\t\t\t\t\trgba(255, 255, 255, 0.5),\n\t\t\t\t\t\trgba(255, 255, 255, 0));\n\t\t\t\tz-index: 3; // 确保标题显示在视频上方\n\t\t\t}\n\n\t\t\t.video-right-control {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0;\n\t\t\t\tright: 10rpx;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tjustify-content: space-around;\n\t\t\t\theight: 100%;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 2;\n\n\t\t\t\t.vedio-control {\n\t\t\t\t\twidth: 50rpx;\n\t\t\t\t\theight: 50rpx;\n\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\tborder-radius: 25rpx;\n\t\t\t\t\tbackground: rgba(255, 255, 255, .7);\n\n\t\t\t\t\t.vedio-control-icon {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.video-bottom-control {\n\t\t\t\tposition: absolute;\n\t\t\t\tbottom: 10rpx;\n\t\t\t\tleft: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 50rpx;\n\t\t\t\tz-index: 1;\n\n\t\t\t\t.vedio-control {\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t\twidth: 50rpx;\n\t\t\t\t\theight: 50rpx;\n\t\t\t\t\tpadding: 10rpx;\n\t\t\t\t\tborder-radius: 25rpx;\n\t\t\t\t\tbackground: rgba(255, 255, 255, .7);\n\n\t\t\t\t\t.vedio-control-icon {\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</style>","import { LDay, LYearMonth, LGridSize, LMonthData, LOptions } from '../../index'\r\n// import { LDay } from '../../utssdk/interface';\r\n\r\n\r\nexport class ArrowIcon {\r\n\tx : number = 0\r\n\ty : number = 0\r\n\tsize : number = 0\r\n\ttype : string = ''\r\n\tcolor : string = ''\r\n\tconstructor(x : number, y : number, size : number, type : string, color : string) {\r\n\t\tthis.x = x\r\n\t\tthis.y = y\r\n\t\tthis.size = size\r\n\t\tthis.type = type\r\n\t\tthis.color = color\r\n\t}\r\n\tdraw(ctx : CanvasRenderingContext2D) {\r\n\t\tconst { x, y, size, color, type } = this\r\n\t\t// 设置绘图的填充颜色\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.beginPath();\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.lineWidth = 2\r\n\t\t// 根据箭头类型绘制不同的形状\r\n\t\tif (type === 'left') {\r\n\t\t\tctx.moveTo(x + size * 0.6042, y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * 0.3542, y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * 0.6042, y + size * 0.75);\r\n\r\n\t\t} else if (type === 'right') {\r\n\t\t\tctx.moveTo(x + size * (1 - 0.6042), y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.3542), y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.6042), y + size * 0.75);\r\n\t\t}\r\n\r\n\t\tctx.stroke()\r\n\t}\r\n\tisCoordinateInside(x : number, y : number) : boolean {\r\n\t\treturn x >= this.x && x <= this.x + this.size && y >= this.y && y <= this.y + this.size;\r\n\t}\r\n}\r\n\r\nexport class Day implements LDay {\r\n\tday : number = 0;\r\n\tmonth : number = 0;\r\n\tyear : number = 0;\r\n\tfullDay : string = '00';\r\n\tfullMonth : string = '00';\r\n\tfullDate : string = '';\r\n\tisBeforeToday : boolean = false;\r\n\tisToday : boolean = false\r\n\t// isCheckedIn: boolean = false;\r\n\tisCurrentMonth : boolean = false;\r\n\tprivate x : number = 0;\r\n\tprivate y : number = 0;\r\n\tprivate calendar : Calendar\r\n\twidth : number = 0;\r\n\theight : number = 0;\r\n\toriginalMonth : number = 0;\r\n\ttype : string = 'current'\r\n\tfontSize : number = 20\r\n\ttimestamp : number = 0\r\n\tconstructor(day : number, month : number, year : number, isCurrentMonth : boolean, isToday : boolean, isBeforeToday : boolean, calendar : Calendar) {\r\n\t\tthis.day = day;\r\n\t\tthis.month = month\r\n\t\tthis.year = year;\r\n\t\tthis.originalMonth = month - 1;\r\n\t\tthis.fullMonth = this.formatMonth(month)\r\n\t\tthis.fullDay = this.formatDay(day)\r\n\t\tthis.fullDate = `${year}-${this.fullMonth}-${this.fullDay}`;\r\n\t\tthis.isCurrentMonth = isCurrentMonth;\r\n\t\tthis.isBeforeToday = isBeforeToday;\r\n\t\tthis.isToday = isToday\r\n\t\tthis.calendar = calendar\r\n\t\tthis.timestamp = new Date(year, month - 1, day).getTime()\r\n\t}\r\n\r\n\tprivate formatDay(day : number) : string {\r\n\t\treturn `${day}`.padStart(2, '0');\r\n\t}\r\n\r\n\tprivate formatMonth(month : number) : string {\r\n\t\treturn `${month}`.padStart(2, '0');\r\n\t}\r\n\t\r\n\tisCoordinateInside(x : number, y : number) : boolean {\r\n\t\treturn x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\r\n\t}\r\n\r\n\tsetPosition(x : number, y : number) : void {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tsetDimensions(width : number, height : number) : void {\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\tprivate get opt(): LOptions{\r\n\t\treturn this.calendar.opt\r\n\t}\r\n\tget selectDate() : LDay | null {\r\n\t\treturn this.calendar.selectDate\r\n\t}\r\n\tset selectDate(_val: LDay| null) {\r\n\t\t\r\n\t}\r\n\tget canSupplement() : boolean {\r\n\t\t// 在今日之前 并且 未签到 并且 支持补签\r\n\t\treturn this.opt.canSupplement! && this.isBeforeToday && !this.isCheckedIn\r\n\t}\r\n\tset canSupplement(_v: boolean) {\r\n\t\t\r\n\t}\r\n\tget isCheckedIn() : boolean {\r\n\t\treturn this.calendar.signedDates.includes(this.timestamp)\r\n\t\t// return true\r\n\t\t// if (this.calendar.opt.signedDates == null) return false\r\n\t\t// return this.calendar.opt.signedDates.some((dateString : string) : boolean => {\r\n\t\t// \tconst [year, month, day] = dateString.split('-').map((v : string) : number => parseInt(v));\r\n\t\t// \treturn year == this.year && month == this.month && day == this.day\r\n\t\t// })\r\n\t}\r\n\tset isCheckedIn(_v:boolean) {\r\n\t\t\r\n\t}\r\n\tprivate drawCircle(ctx : CanvasRenderingContext2D, x : number, y : number, radius : number, color : string, border : boolean = false) {\r\n\t\tctx.beginPath();\r\n\t\tif (border) {\r\n\t\t\tctx.lineWidth = 1\r\n\t\t\tctx.strokeStyle = 'white'\r\n\t\t}\r\n\t\tctx.fillStyle = color;\r\n\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\r\n\t\tctx.fill();\r\n\t\tif (border) {\r\n\t\t\tctx.stroke()\r\n\t\t}\r\n\t}\r\n\tdraw(ctx : CanvasRenderingContext2D) {\r\n\t\tconst size = Math.min(this.width, this.height) * 0.9\r\n\t\tconst centerX = this.x + this.width / 2\r\n\t\tconst centerY = this.y + this.height / 2\r\n\t\tconst color = this.opt.color!\r\n\t\tconst unsignedColor = this.opt.unsignedColor!\r\n\t\tconst selectedDayBgColor = this.opt.selectedDayBgColor!\r\n\t\tconst textColor = this.opt.textColor!\r\n\t\tconst disabledColor = this.opt.disabledColor!\r\n\t\tconst dayFontSize = this.opt.dayFontSize!\r\n\t\t\r\n\t\t\r\n\t\tctx.textAlign = 'center';\r\n\t\tctx.font = this.isToday ? `${dayFontSize - 2}px Arial` : `${dayFontSize}px Arial`;\r\n\t\tctx.textBaseline = 'middle';\r\n\r\n\t\t// 判断是否是当前选中日期\r\n\t\tconst isSelectedDate = this.selectDate == null || this.selectDate == this;\r\n\r\n\t\t// 设置字体颜色\r\n\t\tlet txtColor = this.type == 'current' ? textColor : disabledColor;\r\n\t\tif (this.isToday && !isSelectedDate) {\r\n\t\t\ttxtColor = color;\r\n\t\t}\r\n\r\n\t\t// 绘制选中效果\r\n\t\tif (this.selectDate != null && this.selectDate == this) {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.fillStyle = selectedDayBgColor;\r\n\t\t\tctx.arc(centerX, centerY, size / 2, 0, Math.PI * 2);\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t\t\r\n\t\t// 绘制今日效果\r\n\t\tif (this.isToday && isSelectedDate) {\r\n\t\t\tthis.drawCircle(ctx, centerX, centerY, size / 2, color);\r\n\t\t\ttxtColor = 'white';\r\n\t\t\t\r\n\t\t}\r\n\t\t// 绘制已签到或可补签效果 小点\r\n\t\tif (this.type == 'current' && (this.isCheckedIn || this.canSupplement)) {\r\n\t\t\tthis.drawCircle(ctx, centerX, centerY + this.fontSize * 0.9, 4, this.isCheckedIn ? (this.isToday && isSelectedDate ? 'white' : color) : unsignedColor);\r\n\t\t}\r\n\r\n\t\t// 绘制文字\r\n\t\tctx.fillStyle = txtColor;\r\n\t\tctx.fillText(this.isToday ? '今天' : this.fullDay, centerX, centerY);\r\n\r\n\t}\r\n}\r\n\r\n\r\nexport class Calendar {\r\n\tprivate year : number = 0\r\n\tprivate month : number = 0\r\n\tprivate el : UniCanvasElement | null = null\r\n\tprivate ctx : CanvasRenderingContext2D | null = null\r\n\tprivate init : boolean = false\r\n\tprivate today : number = 0\r\n\tprivate currentMonth : number = 0\r\n\tprivate currentYear : number = 0\r\n\t// private headerHeight : number = 50\r\n\t// private weekHeight : number = 30\r\n\tprivate monthDateCache : Map<string, LMonthData>\r\n\tprivate week : string[] = []\r\n\tselectDate : LDay | null = null\r\n\tprivate containerHeight : number = 0\r\n\tprivate containerWidth : number = 0\r\n\tprivate arrowIcons : ArrowIcon[] = []\r\n\topt : LOptions = {\r\n\t\tcanSupplement: false,\r\n\t\tisFullCalendar: true,\r\n\t\tyearMonth: '',\r\n\t\tsignedDates: [],\r\n\t\tweek: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n\t\tweekStartsOn: 0,\r\n\t\tweekColor: '#BDC0C3',\r\n\t\tweekFontSize: 12,\r\n\t\tweekHeight: 40,\r\n\t\tselectedDayBgColor: 'rgba(0,0,0,0.06)',\r\n\t\tdayFontSize: 12,\r\n\t\ttextColor: '#1A1F24',\r\n\t\tdisabledColor: '#BDC0C3',\r\n\t\tmonthTitleHeight: 50,\r\n\t\tmonthTitleFontSize: 20,\r\n\t\tcolor: '#3B87F6',\r\n\t\tunsignedColor: '#F1A33A',\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tconst date = new Date()\r\n\t\tthis.currentYear = date.getFullYear()\r\n\t\tthis.currentMonth = date.getMonth() + 1\r\n\t\tthis.today = date.getDate()\r\n\t\tthis.monthDateCache = new Map<string, LMonthData>()\r\n\t\tthis.week = this.opt.week ?? []\r\n\t}\r\n\tget signedDates() : number[] {\r\n\t\tif (this.opt.signedDates == null) return []\r\n\t\tconst values : number[] = []\r\n\t\tthis.opt.signedDates!.forEach(item => {\r\n\t\t\tconst [year, month, day] = item.split('-').map((v : string) : number => parseInt(v));\r\n\t\t\tconst time = new Date(year, month - 1, day).getTime()\r\n\t\t\tif (!values.includes(time)) {\r\n\t\t\t\tvalues.push(time)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn values\r\n\t}\r\n\tget checkinDays() : number {\r\n\t\tif (this.signedDates.length == 0) return 0\r\n\t\tconst sortedDates = this.signedDates.sort((a, b):number => {\r\n\t\t\t// #ifdef APP-ANDROID\r\n\t\t\t// 这里的判断不能省略\r\n\t\t\tif (a.compareTo(b) == 0) {\r\n\t\t\t\treturn 0\r\n\t\t\t}\r\n\t\t\t// #endif\r\n\t\t\treturn b - a\r\n\t\t})\r\n\t\treturn this.calculateContinuousCheckinDays(sortedDates);\r\n\t}\r\n\tprivate calculateContinuousCheckinDays(sortedDates : number[]) : number {\r\n\t\tconst dayInMillis = 24 * 60 * 60 * 1000;\r\n\t\tconst todayTime = new Date(this.currentYear, this.currentMonth - 1, this.today).getTime();\r\n\t\tlet count = 0;\r\n\t\tlet streak = 0;\r\n\r\n\t\tfor (let i = 0; i < sortedDates.length; i++) {\r\n\t\t\tif (i == 0) {\r\n\t\t\t\t// 大于1天，即隔了一天就已经中断签到 不再计算\r\n\t\t\t\tif (todayTime - sortedDates[i] > dayInMillis) {\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tif (sortedDates[i] == todayTime || todayTime - sortedDates[i] == dayInMillis) {\r\n\t\t\t\t\tstreak = 1;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (sortedDates[i - 1] - sortedDates[i] == dayInMillis) {\r\n\t\t\t\t\tstreak++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn streak;\r\n\t}\r\n\tsetCanvas(el : UniCanvasElement | null) {\r\n\t\tif (el == null) return\r\n\t\tthis.el = el\r\n\t\tthis.containerHeight = 6 * (this.opt.dayHeight ?? 0) + this.opt.weekHeight! + this.opt.monthTitleHeight! //6\r\n\t\tthis.containerWidth = this.el!.offsetWidth\r\n\t\tthis.el!.style.setProperty('height', this.containerHeight + 'px')\r\n\t\tthis.ctx = el.getContext('2d')!\r\n\t\tconst dpr = uni.getDeviceInfo().devicePixelRatio ?? 1;\r\n\t\t\r\n\t\tthis.el!.width = this.containerWidth * dpr;\r\n\t\tthis.el!.height = this.containerHeight * dpr;\r\n\t\tthis.ctx!.scale(dpr, dpr)\r\n\t\t// this.ctx = el.getDrawableContext()\r\n\t\t\r\n\t\t// this.ctx.fillStyle = 'red'\r\n\t\t// this.ctx.fillRect(0,0,100,100)\r\n\t}\r\n\tsetOptions(opt : LOptions) {\r\n\t\tlet datechange = false\r\n\t\tlet weekStartsOn = -1\r\n\t\tfor (let key in opt) {\r\n\t\t\tconst value = opt[key]\r\n\t\t\tif (key == 'yearMonth' && value != null && value != this.opt.yearMonth) {\r\n\t\t\t\tdatechange = true\r\n\t\t\t}\r\n\t\t\tif (key == 'weekStartsOn' && value != null && value != this.opt.weekStartsOn) {\r\n\t\t\t\tweekStartsOn = value as number\r\n\t\t\t}\r\n\t\t\tif (value != null) {\r\n\t\t\t\tthis.opt[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (weekStartsOn != -1) {\r\n\t\t\tconst normalWeek = [...this.opt.week!]\r\n\t\t\tconst sIndex = weekStartsOn < 0 ? 0 : weekStartsOn >= normalWeek.length ? normalWeek.length - 1 : weekStartsOn\r\n\t\t\tnormalWeek.unshift(...normalWeek.slice(-sIndex))\r\n\t\t\tnormalWeek.length = 6\r\n\t\t\tthis.week = normalWeek\r\n\t\t}\r\n\r\n\t\tif (this.opt.yearMonth != '' && !this.init || datechange) {\r\n\t\t\tconst arr = this.opt.yearMonth!.split('-')\r\n\t\t\tthis.year = parseInt(arr[0])\r\n\t\t\tthis.month = parseInt(arr[1])\r\n\t\t\tthis.init = true\r\n\t\t}\r\n\t}\r\n\r\n\t/** 获取当月共多少天，也就是获取月的最后一天 */\r\n\tgetMonthDayLength(year : number, month : number) : number {\r\n\t\treturn new Date(year, month, 0).getDate()\r\n\t}\r\n\t// 获取当月第一天星期几\r\n\tgetFirstDayOfWeek(year : number, month : number, day : number = 1) : number {\r\n\t\treturn new Date(year, month - 1, day).getDay();\r\n\t}\r\n\t// 获取加/减一个月的日期\r\n\tgetOperateMonthDate(nowYear : number, nowMonth:number, num : number) : LYearMonth {\r\n\t\tlet month = nowMonth + num\r\n\t\tlet year = nowYear;\r\n\t\tif (month > 12) {\r\n\t\t\tmonth = 1;\r\n\t\t\tyear++;\r\n\t\t} else if (month < 1) {\r\n\t\t\tmonth = 12;\r\n\t\t\tyear--;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tmonth,\r\n\t\t\tyear,\r\n\t\t} as LYearMonth\r\n\t}\r\n\r\n\tgenerateMonthDateCache(year : number = this.year, month : number = this.month) : LMonthData {\r\n\t\t// 检查是否可以切换到下个月\r\n\t\t// const canSwitchToNextMonth = this.currentYear > year || (this.currentYear == year && this.currentMonth > month + 1);\r\n\t\tconst key = `${year}-${month}`\r\n\t\tif (this.monthDateCache.has(key)) {\r\n\t\t\treturn this.monthDateCache.get(key)!\r\n\t\t}\r\n\t\tconst arr : LDay[] = []\r\n\t\tconst days = this.getMonthDayLength(year, month);\r\n\t\tconst firstday = this.getFirstDayOfWeek(year, month);\r\n\t\tconst beforeEmptyLength = (firstday + this.opt.weekStartsOn!) % 7 //this.getFirstDayOfWeek(year, month);\r\n\t\t// Math.ceil((days + beforeEmptyLength) / 7)\r\n\t\tconst afterEmptyLength = 5 * 7 - beforeEmptyLength - days //6 - this.getFirstDayOfWeek(year, month, days); //6\r\n\r\n\t\tconst last = this.getOperateMonthDate(year, month, -1);\r\n\t\tconst lastMonthEndDay = this.getMonthDayLength(last.year, last.month);\r\n\t\tconst next = this.getOperateMonthDate(year, month, 1);\r\n\t\tconst today = new Date(this.currentYear, this.currentMonth - 1, this.today).getTime();\r\n\t\tlet index = 0\r\n\t\tconst getGridSize = (i : number) : LGridSize => {\r\n\t\t\t// 确保this.el存在并且可以获取到边界矩形\r\n\t\t\tconst rect = this.el?.getBoundingClientRect();\r\n\r\n\r\n\t\t\tconst height = this.opt.dayHeight ?? 0;\r\n\r\n\t\t\tconst width = rect == null ? 0 : rect.width / 7;\r\n\r\n\t\t\t// 计算行和列\r\n\t\t\tconst row = Math.floor(i / 7);\r\n\t\t\tconst col = i % 7;\r\n\r\n\t\t\t// 计算网格单元的位置\r\n\t\t\tconst x = col * width;\r\n\t\t\tconst y = row * height + this.opt.monthTitleHeight! + this.opt.weekHeight!;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tx, // 使用计算得到的x值\r\n\t\t\t\ty, // 使用计算得到的y值\r\n\t\t\t\twidth, // 使用计算得到的width值\r\n\t\t\t\theight // 使用正确的变量名height\r\n\t\t\t} as LGridSize;\r\n\t\t};\r\n\t\tfor (var i = 0; i < beforeEmptyLength; i++) {\r\n\t\t\tconst { x, y, width, height } = getGridSize(index);\r\n\t\t\tconst date = lastMonthEndDay - beforeEmptyLength + i + 1;\r\n\t\t\tconst time = new Date(last.year, last.month - 1, date).getTime()\r\n\t\t\tconst day = new Day(\r\n\t\t\t\tdate,\r\n\t\t\t\tlast.month,\r\n\t\t\t\tlast.year,\r\n\t\t\t\tlast.year == this.currentYear && last.month == this.currentMonth,\r\n\t\t\t\ttime == today,\r\n\t\t\t\ttime < today,\r\n\t\t\t\tthis\r\n\t\t\t)\r\n\t\t\tday.type = 'last'\r\n\t\t\tday.setPosition(x, y)\r\n\t\t\tday.setDimensions(width, height)\r\n\t\t\tarr.push(day)\r\n\t\t\tindex++\r\n\t\t}\r\n\t\tfor (var i = 0; i < days; i++) {\r\n\t\t\tconst { x, y, width, height } = getGridSize(index)\r\n\t\t\tconst date = i + 1;\r\n\t\t\tconst time = new Date(year, month - 1, date).getTime()\r\n\t\t\tconst day = new Day(\r\n\t\t\t\tdate,\r\n\t\t\t\tmonth,\r\n\t\t\t\tyear,\r\n\t\t\t\tyear == this.currentYear && month == this.currentMonth,\r\n\t\t\t\ttime == today,\r\n\t\t\t\ttime < today,\r\n\t\t\t\tthis)\r\n\t\t\tday.setPosition(x, y)\r\n\t\t\tday.setDimensions(width, height)\r\n\t\t\tarr.push(day)\r\n\t\t\tindex++\r\n\t\t}\r\n\t\tfor (var i = 0; i < afterEmptyLength; i++) {\r\n\t\t\tconst { x, y, width, height } = getGridSize(index)\r\n\t\t\tconst date = i + 1;\r\n\t\t\tconst time = new Date(next.year, next.month - 1, date).getTime()\r\n\t\t\tconst day = new Day(date,\r\n\t\t\t\tnext.month,\r\n\t\t\t\tnext.year,\r\n\t\t\t\tnext.year == this.currentYear && next.month == this.currentMonth,\r\n\t\t\t\ttime == today,\r\n\t\t\t\ttime < today,\r\n\t\t\t\tthis)\r\n\t\t\tday.type = 'next'\r\n\t\t\tday.setPosition(x, y)\r\n\t\t\tday.setDimensions(width, height)\r\n\t\t\tarr.push(day)\r\n\t\t\tindex++\r\n\t\t}\r\n\r\n\t\tconst monthData : LMonthData = {\r\n\t\t\tyear,\r\n\t\t\tmonth,\r\n\t\t\tdays: arr,\r\n\t\t}\r\n\t\tthis.monthDateCache.set(key, monthData)\r\n\t\treturn monthData\r\n\t}\r\n\tnext() {\r\n\t\tconst { year, month } = this.getOperateMonthDate(this.year, this.month, 1)\r\n\t\t// 检查是否可以切换到下个月\r\n\t\tconst canSwitchToNextMonth = this.currentYear > year || (this.currentYear == year && month - this.currentMonth <= 1);\r\n\t\tif (canSwitchToNextMonth) {\r\n\t\t\tthis.year = year\r\n\t\t\tthis.month = month\r\n\t\t\tthis.render(year, month)\r\n\t\t} else {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttitle: '往后最多查看一个月'\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tlast() {\r\n\t\tconst { year, month } = this.getOperateMonthDate(this.year, this.month, -1)\r\n\t\tthis.year = year\r\n\t\tthis.month = month\r\n\t\tthis.render(year, month)\r\n\t}\r\n\t/**\r\n\t* 前往某一天 \r\n\t* @param {string} date 格式 YYYY-MM-DD\r\n\t*/ \r\n\tgoToDate(date : string | null = null) {\r\n\t\tif (date == null) {\r\n\t\t\tthis.render(this.currentYear, this.currentMonth, this.today)\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst [year, month, day] = date.split('-').map((item) : number => parseInt(item))\r\n\t\t\t\tthis.render(year, month, day)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow new Error('参数有误')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate drawIcon(ctx : CanvasRenderingContext2D, size : number, x : number, y : number, arrow : string, color : string) {\r\n\t\t// 设置绘图的填充颜色\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.beginPath();\r\n\t\tctx.lineJoin = 'round'\r\n\t\tctx.lineWidth = 2\r\n\t\t// 根据箭头类型绘制不同的形状\r\n\t\tif (arrow === 'left') {\r\n\t\t\tctx.moveTo(x + size * 0.6042, y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * 0.3542, y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * 0.6042, y + size * 0.75);\r\n\r\n\t\t} else if (arrow === 'right') {\r\n\t\t\tctx.moveTo(x + size * (1 - 0.6042), y + size * 0.25);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.3542), y + size * 0.5);\r\n\t\t\tctx.lineTo(x + size * (1 - 0.6042), y + size * 0.75);\r\n\t\t}\r\n\r\n\t\tctx.stroke()\r\n\t}\r\n\tprivate drawHead(monthData : LMonthData) {\r\n\t\tconst width = this.containerWidth\r\n\t\tif (this.ctx == null) return\r\n\t\tconst ctx = this.ctx!\r\n\t\tconst height = this.opt.monthTitleHeight!\r\n\t\t// ctx.fillStyle = 'rgba(0,0,0,0.1)'\r\n\t\t// ctx.rect(0,0,width, this.opt.monthTitleHeight!)\r\n\t\t// ctx.fill()\r\n\t\tctx.textAlign = 'center'\r\n\t\tctx.fillStyle = this.opt.textColor!\r\n\t\tctx.font = ` ${this.opt.monthTitleFontSize!}px sans-serif`\r\n\t\tctx.textBaseline = 'middle'\r\n\t\tctx.fillText(`${monthData.year}年` + `${monthData.month}`.padStart(2, '0') + '月', width * 0.5, height * 0.55)\r\n\t\tif (this.arrowIcons.length == 0) {\r\n\t\t\tconst offsetTop = (height - 30) / 2\r\n\t\t\tthis.arrowIcons.push(new ArrowIcon(0, offsetTop, 30, 'left', `#A0A5AA`))\r\n\t\t\tthis.arrowIcons.push(new ArrowIcon(width - 30, offsetTop, 30, 'right', `#A0A5AA`))\r\n\t\t}\r\n\t\tthis.arrowIcons.forEach(icon => {\r\n\t\t\ticon.draw(ctx)\r\n\t\t})\r\n\t}\r\n\tprivate drawWeek() {\r\n\t\tif (this.ctx == null) return\r\n\t\tconst ctx = this.ctx!\r\n\t\tctx.textAlign = 'center'\r\n\t\tctx.font = `${this.opt.weekFontSize}px Arial`\r\n\t\tctx.textBaseline = 'middle'\r\n\t\tctx.fillStyle = this.opt.weekColor!\r\n\t\tthis.week.forEach((week, index) => {\r\n\t\t\tctx.fillText(`${week}`, this.containerWidth / 7 * (index + 0.5), this.opt.monthTitleHeight! + this.opt.weekHeight! * 0.5)\r\n\t\t})\r\n\t}\r\n\trender(year : number = this.year, month : number = this.month, day : number | null = null) {\r\n\t\tconst monthData = this.generateMonthDateCache(year, month);\r\n\t\tif (day != null) {\r\n\t\t\tthis.selectDate = monthData.days.find((item) : boolean => item.day == day)\r\n\t\t}\r\n\t\tif (this.el != null && this.ctx != null) {\r\n\t\t\tthis.ctx!.clearRect(0, 0, this.containerWidth, this.containerHeight)\r\n\t\t\tthis.drawHead(monthData)\r\n\t\t\tthis.drawWeek()\r\n\r\n\t\t\tmonthData.days.forEach(day => {\r\n\t\t\t\tday.draw(this.ctx!)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn\r\n\t}\r\n\ttouch(e : UniPointerEvent) {\r\n\t\tif (this.el == null) return\r\n\t\tconst rect = this.el!.getBoundingClientRect()\r\n\t\tconst x = e.clientX - rect.left\r\n\t\tconst y = e.clientY - rect.top\r\n\r\n\t\t// 判断 是点了左右\r\n\t\tconst icon = this.arrowIcons.find((icon) : boolean => icon.isCoordinateInside(x, y))\r\n\r\n\t\tif (icon != null) {\r\n\t\t\tif (icon.type == 'left') {\r\n\t\t\t\tthis.last()\r\n\t\t\t} else {\r\n\t\t\t\tthis.next()\r\n\t\t\t}\r\n\t\t\tthis.opt.panelChange?.({\r\n\t\t\t\tyear: this.year,\r\n\t\t\t\tmonth: this.month\r\n\t\t\t} as LYearMonth)\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// 判断是点了日历\r\n\t\tconst month = this.monthDateCache.get(`${this.year}-${this.month}`)\r\n\t\tif (month == null) return\r\n\t\tconst day = month.days.find((day) : boolean => day.isCoordinateInside(x, y))\r\n\t\t// 只有点击当前月的\r\n\t\tif (day != null && day.type == 'current') {\r\n\t\t\t// if(this.selectDate != day) {\r\n\t\t\t\tthis.selectDate = day\r\n\t\t\t\tthis.render()\r\n\t\t\t// }\r\n\t\t\tthis.opt.select?.(day)\r\n\t\t}\r\n\t}\r\n}","// @ts-nocheck\r\n/**\r\n * 检查一个值是否为字符串类型\r\n * @param str 要检查的值\r\n * @returns 如果值的类型是字符串类型，则返回 true；否则返回 false\r\n */\r\n// #ifndef UNI-APP-X && APP\r\n// export const isString = (str: unknown): str is string => typeof str === 'string';\r\nexport function isString (str: unknown): str is string {\r\n\treturn typeof str == 'string'\r\n}\r\n// #endif\r\n\r\n\r\n// #ifdef UNI-APP-X && APP\r\nexport function isString (str: any|null): boolean {\r\n\treturn typeof str == 'string'\r\n}\r\n// #endif\r\n","// @ts-nocheck\r\n/**\r\n * 检查一个值是否为数字类型\r\n * @param value 要检查的值，可以是 number 类型或 string 类型的数字\r\n * @returns 如果值是数字类型且不是 NaN，则返回 true；否则返回 false\r\n */\r\n\r\n// #ifndef UNI-APP-X\r\nexport function isNumber(value: number | string | null): boolean {\r\n  return typeof value === 'number' && !isNaN(value);\r\n}\r\n// #endif\r\n\r\n// #ifdef UNI-APP-X\r\nexport function isNumber(value: any|null): boolean {\r\n\t// #ifdef APP-ANDROID\r\n\treturn ['Byte', 'UByte','Short','UShort','Int','UInt','Long','ULong','Float','Double','number'].includes(typeof value)\r\n\t// #endif\r\n\t// #ifdef APP-IOS\r\n\treturn ['Int8', 'UInt8','Int16','UInt16','Int32','UInt32','Int64','UInt64','Int','UInt','Float','Float16','Float32','Float64','Double', 'number'].includes(typeof value)\r\n\t// #endif\r\n\t// #ifndef APP-ANDROID || APP-IOS\r\n\treturn typeof value === 'number' && !isNaN(value);\r\n\t// #endif\r\n}\r\n// #endif","// @ts-nocheck\r\n\r\n/**\r\n * 检查一个值是否为数字类型或表示数字的字符串\r\n * @param value 要检查的值，可以是 string 类型或 number 类型\r\n * @returns 如果值是数字类型或表示数字的字符串，则返回 true；否则返回 false\r\n */\r\n\r\n// #ifndef UNI-APP-X && APP\r\nexport function isNumeric(value: string | number | undefined | null): boolean {\r\n  return /^(-)?\\d+(\\.\\d+)?$/.test(value);\r\n}\r\n// #endif\r\n\r\n\r\n// #ifdef UNI-APP-X && APP\r\nimport {isNumber} from '../isNumber';\r\nimport {isString} from '../isString';\r\nexport function isNumeric(value : any|null) : boolean {\r\n\tif(value == null) {\r\n\t\treturn false\r\n\t}\r\n\tif(isNumber(value)) {\r\n\t\treturn true\r\n\t} else if(isString(value)) {\r\n\t\t// const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\r\n\t\tconst regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\")\r\n\t\treturn  regex.test(value as string) //regex.matches(value as string) \r\n\t}\r\n\treturn false\r\n\t// return /^(-)?\\d+(\\.\\d+)?$/.test(value);\r\n}\r\n// #endif\r\n","// @ts-nocheck\r\nimport { isString } from '../isString'\r\nimport { isNumeric } from '../isNumeric'\r\n\r\n/**\r\n * 单位转换函数，将字符串数字或带有单位的字符串转换为数字\r\n * @param value 要转换的值，可以是字符串数字或带有单位的字符串\r\n * @returns 转换后的数字，如果无法转换则返回0\r\n */\r\n// #ifndef UNI-APP-X && APP\r\nexport function unitConvert(value : string | number | null | undefined, base: number = 0) : number {\r\n\t// 如果是字符串数字\r\n\tif (isNumeric(value)) {\r\n\t\treturn Number(value);\r\n\t}\r\n\t// 如果有单位\r\n\tif (isString(value)) {\r\n\t\tconst reg = /^-?([0-9]+)?([.]{1}[0-9]+){0,1}(em|rpx|px|%)$/g;\r\n\t\tconst results = reg.exec(value);\r\n\t\tif (!value || !results) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tconst unit = results[3];\r\n\t\tconst _value = parseFloat(value);\r\n\t\tif (unit === 'rpx') {\r\n\t\t\treturn uni.upx2px(_value);\r\n\t\t}\r\n\t\tif (unit === 'px') {\r\n\t\t\treturn _value * 1;\r\n\t\t}\r\n\t\tif(unit == '%') {\r\n\t\t\treturn _value / 100 * base\r\n\t\t}\r\n\t\t// 如果是其他单位，可以继续添加对应的转换逻辑\r\n\t}\r\n\treturn 0;\r\n}\r\n// #endif\r\n\r\n\r\n// #ifdef UNI-APP-X && APP\r\nimport { isNumber } from '../isNumber'\r\nexport function unitConvert(value : any | null, base: number = 0) : number {\r\n\tif (isNumber(value)) {\r\n\t\treturn value as number\r\n\t}\r\n\t// 如果是字符串数字\r\n\tif (isNumeric(value)) {\r\n\t\treturn parseFloat(value as string);\r\n\t}\r\n\t// 如果有单位\r\n\tif (isString(value)) {\r\n\t\tconst reg = /^-?([0-9]+)?([.]{1}[0-9]+){0,1}(em|rpx|px|%)$/g;\r\n\t\tconst results = reg.exec(value as string);\r\n\t\tif (results == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tconst unit = results[3];\r\n\t\tconst _value = parseFloat(value);\r\n\t\tif (unit == 'rpx') {\r\n\t\t\t// const { windowWidth } = uni.getWindowInfo()\r\n\t\t\t// return windowWidth / 750 * _value;\r\n\t\t\treturn uni.rpx2px(_value)\r\n\t\t}\r\n\t\tif (unit == 'px') {\r\n\t\t\treturn _value;\r\n\t\t}\r\n\t\tif(unit == '%') {\r\n\t\t\treturn _value / 100 * base\r\n\t\t}\r\n\t\t// 如果是其他单位，可以继续添加对应的转换逻辑\r\n\t}\r\n\treturn 0;\r\n}\r\n// #endif\r\n// 示例\r\n// console.log(unitConvert(\"123\")); // 输出: 123 (字符串数字转换为数字)\r\n// console.log(unitConvert(\"3.14em\")); // 输出: 0 (无法识别的单位)\r\n// console.log(unitConvert(\"20rpx\")); // 输出: 根据具体情况而定 (根据单位进行转换)\r\n// console.log(unitConvert(10)); // 输出: 10 (数字不需要转换)","<template>\n\t<view class=\"calender\">\n\t\t<canvas ref=\"dailyRef\" id=\"l-daily-punch\" class=\"l-daily-punch\" :style=\"[styles]\" @click=\"onClick\"></canvas>\n\t</view>\n</template>\n<script setup lang=\"uts\">\n\timport { Calendar} from './calender'\n\timport { PropType } from 'vue'\n\timport { unitConvert } from '@/uni_modules/lime-shared/unitConvert';\n\timport { LDay,  LOptions, LYearMonth } from '../../index';\n\tconst emits = defineEmits(['select', 'panelChange', 'streak'])\n\tconst props = defineProps({\n\t\tcanSupplement: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tisFullCalendar: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tyearMonth: {\n\t\t\ttype: String,\n\t\t\tdefault: () : string => {\n\t\t\t\tconst date = new Date();\n\t\t\t\tconst year = date.getFullYear();\n\t\t\t\tconst month = (date.getMonth() + 1).toString().padStart(2, '0'); // 确保月份是两位数\n\t\t\t\treturn `${year}-${month}`;\n\t\t\t}\n\t\t},\n\t\tsignedDates: {\n\t\t\ttype: Array as PropType<string[]>,\n\t\t\tdefault: () : string[] => {\n\t\t\t\treturn [] as string[];\n\t\t\t},\n\t\t\tvalidator: (value : string[]):boolean => {\n\t\t\t\t// 简单的验证函数，确保每个元素都是有效的日期字符串\n\t\t\t\treturn value.every((date : string) : boolean => /^\\d{4}-\\d{2}-\\d{2}$/.test(date));\n\t\t\t}\n\t\t},\n\n\n\n\n\n\n\n\t\tdayHeight: {\n\t\t\ttype: [String, Number],\n\t\t\tdefault: 76\n\t\t},\n\n\t\tweek: {\n\t\t\ttype: Array as PropType<string[]>,\n\t\t\tdefault: () : string[] => ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n\t\t},\n\t\tweekStartsOn: {\n\t\t\ttype: Number,\n\t\t\tdefault: 6,\n\t\t\tvalidator: (value:number):boolean => value <= 6\n\t\t},\n\t\tweekColor: {\n\t\t\ttype: String,\n\t\t\tdefault: '#BDC0C3'\n\t\t},\n\t\tweekFontSize: {\n\t\t\ttype: Number,\n\t\t\tdefault: 14\n\t\t},\n\t\tweekHeight: {\n\t\t\ttype: Number,\n\t\t\tdefault: 30\n\t\t},\n\t\tselectedDayBgColor: {\n\t\t\ttype: String,\n\t\t\tdefault: 'rgba(0,0,0,0.06)'\n\t\t},\n\t\tdayFontSize: {\n\t\t\ttype: Number,\n\t\t\tdefault: 16\n\t\t},\n\t\ttextColor: {\n\t\t\ttype: String,\n\t\t\tdefault: '#1A1F24'\n\t\t},\n\t\tdisabledColor: {\n\t\t\ttype: String,\n\t\t\tdefault: '#BDC0C3'\n\t\t},\n\t\tmonthTitleHeight: {\n\t\t\ttype: Number,\n\t\t\tdefault: 50\n\t\t},\n\t\tmonthTitleFontSize: {\n\t\t\ttype: Number,\n\t\t\tdefault: 20\n\t\t},\n\t\tcolor: {\n\t\t\ttype: String,\n\t\t\tdefault: '#3B87F6'\n\t\t},\n\t\tunsignedColor: {\n\t\t\ttype: String,\n\t\t\tdefault: '#F1A33A'\n\t\t},\n\t})\n\tlet drawRef = ref<UniCanvasElement|null>(null)\n\tlet calender:Calendar|null = null\n\t\n\t\n\tconst styles = computed(():Map<string, any> => {\n\t\tconst style = new Map<string, any>()\n\t\tstyle.set('height', `${6 * unitConvert(props.dayHeight) + props.weekHeight + props.monthTitleHeight}px`)\n\t\t\n\t\treturn style\n\t})\n\t\n\tconst onClick = (e: UniPointerEvent) => {\n\t\tcalender?.touch(e)\n\t}\n\t\n\tconst setOpt = () => {\n\t\tconst opt:LOptions = {\n\t\t\tcanSupplement: props.canSupplement,\n\t\t\tisFullCalendar: props.isFullCalendar,\n\t\t\tyearMonth: props.yearMonth,\n\t\t\tsignedDates: [...props.signedDates],\n\t\t\tdayHeight: unitConvert(props.dayHeight),\n\t\t\tweek: props.week as string[],\n\t\t\tweekStartsOn: props.weekStartsOn,\n\t\t\tweekColor: props.weekColor,\n\t\t\tweekFontSize: props.weekFontSize,\n\t\t\tweekHeight: props.weekHeight,\n\t\t\tselectedDayBgColor: props.selectedDayBgColor,\n\t\t\tdayFontSize: props.dayFontSize,\n\t\t\ttextColor: props.textColor,\n\t\t\tdisabledColor: props.disabledColor,\n\t\t\tmonthTitleHeight: props.monthTitleHeight,\n\t\t\tmonthTitleFontSize: props.monthTitleFontSize,\n\t\t\tcolor:props.color,\n\t\t\tunsignedColor: props.unsignedColor,\n\t\t\tselect: (e: LDay) => {\n\t\t\t\temits('select', e)\n\t\t\t},\n\t\t\tpanelChange: (e: LYearMonth) => {\n\t\t\t\temits('panelChange', e)\n\t\t\t}\n\t\t}\n\t\tif(calender == null) return\n\t\tcalender!.setOptions(opt)\n\t}\n\twatchEffect(() => {\n\t\tsetOpt()\n\t\tif(calender == null) return\n\t\tcalender!.render()\n\t\temits('streak', calender!.checkinDays)\n\t})\n\tconst instance = getCurrentInstance()!.proxy!\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t// IOS hbx4.52 / HOS HBX4.63\n\tconst dailyRef = ref<UniElement|null>(null)\n\tonMounted(()=> {\n\t\tnextTick(()=> {\n\t\t\tcalender = new Calendar()\n\t\t\tsetOpt()\n\t\t\tcalender!.setCanvas(dailyRef.value)\n\t\t\tcalender!.render()\n\t\t\temits('streak', calender!.checkinDays)\n\t\t})\n\t})\n\n</script>\n<style lang=\"scss\">\n\t.l-daily-punch {\n\t\twidth: 100%;\n\t\t// height: 75 * 6 + 50px + 40px;\n\t}\n\t.calender{\n\t\tmargin:0 30rpx;\n\t}\n</style>","import { shallowRef, ref, getCurrentInstance, isInSSRComponentSetup, injectHook } from 'vue';\nimport { hasOwn } from '@vue/shared';\nexport { capitalize, extend, hasOwn, isPlainObject } from '@vue/shared';\nimport { sanitise, UNI_SSR_DATA, UNI_SSR_GLOBAL_DATA, UNI_SSR, ON_SHOW, ON_HIDE, ON_LAUNCH, ON_ERROR, ON_THEME_CHANGE, ON_PAGE_NOT_FOUND, ON_UNHANDLE_REJECTION, ON_EXIT, ON_INIT, ON_LOAD, ON_READY, ON_UNLOAD, ON_RESIZE, ON_BACK_PRESS, ON_PAGE_SCROLL, ON_TAB_ITEM_TAP, ON_REACH_BOTTOM, ON_PULL_DOWN_REFRESH, ON_SAVE_EXIT_STATE, ON_SHARE_TIMELINE, ON_ADD_TO_FAVORITES, ON_SHARE_APP_MESSAGE, ON_NAVIGATION_BAR_BUTTON_TAP, ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED, ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED, ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED, ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED } from '@dcloudio/uni-shared';\n\nfunction getSSRDataType() {\n    return getCurrentInstance() ? UNI_SSR_DATA : UNI_SSR_GLOBAL_DATA;\n}\nfunction assertKey(key, shallow = false) {\n    if (!key) {\n        throw new Error(`${shallow ? 'shallowSsrRef' : 'ssrRef'}: You must provide a key.`);\n    }\n}\nconst ssrClientRef = (value, key, shallow = false) => {\n    const valRef = shallow ? shallowRef(value) : ref(value);\n    // 非 h5 平台\n    if (typeof window === 'undefined') {\n        return valRef;\n    }\n    const __uniSSR = window[UNI_SSR];\n    if (!__uniSSR) {\n        return valRef;\n    }\n    const type = getSSRDataType();\n    assertKey(key, shallow);\n    if (hasOwn(__uniSSR[type], key)) {\n        valRef.value = __uniSSR[type][key];\n        if (type === UNI_SSR_DATA) {\n            delete __uniSSR[type][key]; // TODO 非全局数据仅使用一次？否则下次还会再次使用该数据\n        }\n    }\n    return valRef;\n};\nconst globalData = {};\nconst ssrRef = (value, key) => {\n    return ssrClientRef(value, key);\n};\nconst shallowSsrRef = (value, key) => {\n    return ssrClientRef(value, key, true);\n};\nfunction getSsrGlobalData() {\n    return sanitise(globalData);\n}\n\n/**\n * uni 对象是跨实例的，而此处列的 API 均是需要跟当前实例关联的，比如 requireNativePlugin 获取 dom 时，依赖当前 weex 实例\n */\nfunction getCurrentSubNVue() {\n    return uni.getSubNVueById(plus.webview.currentWebview().id);\n}\nfunction requireNativePlugin(name) {\n    return weex.requireModule(name);\n}\n\nfunction formatAppLog(type, filename, ...args) {\n    // @ts-expect-error\n    if (uni.__log__) {\n        // @ts-expect-error\n        uni.__log__(type, filename, ...args);\n    }\n    else {\n        console[type].apply(console, [...args, filename]);\n    }\n}\nfunction formatLog(type, filename, ...args) {\n    if (filename) {\n        args.push(filename);\n    }\n    console[type].apply(console, args);\n}\n\nfunction resolveEasycom(component, easycom) {\n    return typeof component === 'string' ? easycom : component;\n}\n\n/// <reference types=\"@dcloudio/types\" />\nconst createHook = (lifecycle) => (hook, target = getCurrentInstance()) => {\n    // post-create lifecycle registrations are noops during SSR\n    !isInSSRComponentSetup && injectHook(lifecycle, hook, target);\n};\nconst onShow = /*#__PURE__*/ createHook(ON_SHOW);\nconst onHide = /*#__PURE__*/ createHook(ON_HIDE);\nconst onLaunch = \n/*#__PURE__*/ createHook(ON_LAUNCH);\nconst onError = \n/*#__PURE__*/ createHook(ON_ERROR);\nconst onThemeChange = \n/*#__PURE__*/ createHook(ON_THEME_CHANGE);\nconst onPageNotFound = \n/*#__PURE__*/ createHook(ON_PAGE_NOT_FOUND);\nconst onUnhandledRejection = /*#__PURE__*/ createHook(ON_UNHANDLE_REJECTION);\nconst onExit = /*#__PURE__*/ createHook(ON_EXIT);\nconst onInit = \n/*#__PURE__*/ createHook(ON_INIT);\n// 小程序如果想在 setup 的 props 传递页面参数，需要定义 props，故同时暴露 onLoad 吧\nconst onLoad = \n/*#__PURE__*/ createHook(ON_LOAD);\nconst onReady = /*#__PURE__*/ createHook(ON_READY);\nconst onUnload = /*#__PURE__*/ createHook(ON_UNLOAD);\nconst onResize = \n/*#__PURE__*/ createHook(ON_RESIZE);\nconst onBackPress = \n/*#__PURE__*/ createHook(ON_BACK_PRESS);\nconst onPageScroll = \n/*#__PURE__*/ createHook(ON_PAGE_SCROLL);\nconst onTabItemTap = \n/*#__PURE__*/ createHook(ON_TAB_ITEM_TAP);\nconst onReachBottom = /*#__PURE__*/ createHook(ON_REACH_BOTTOM);\nconst onPullDownRefresh = /*#__PURE__*/ createHook(ON_PULL_DOWN_REFRESH);\nconst onSaveExitState = \n/*#__PURE__*/ createHook(ON_SAVE_EXIT_STATE);\nconst onShareTimeline = \n/*#__PURE__*/ createHook(ON_SHARE_TIMELINE);\nconst onAddToFavorites = \n/*#__PURE__*/ createHook(ON_ADD_TO_FAVORITES);\nconst onShareAppMessage = \n/*#__PURE__*/ createHook(ON_SHARE_APP_MESSAGE);\nconst onNavigationBarButtonTap = /*#__PURE__*/ createHook(ON_NAVIGATION_BAR_BUTTON_TAP);\nconst onNavigationBarSearchInputChanged = /*#__PURE__*/ createHook(ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED);\nconst onNavigationBarSearchInputClicked = /*#__PURE__*/ createHook(ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED);\nconst onNavigationBarSearchInputConfirmed = /*#__PURE__*/ createHook(ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED);\nconst onNavigationBarSearchInputFocusChanged = \n/*#__PURE__*/ createHook(ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED);\n// for uni-app-x web\nconst onPageHide = onHide;\nconst onPageShow = onShow;\n\nfunction renderComponentSlot(slots, name, props = null) {\n    if (slots[name]) {\n        return slots[name](props);\n    }\n    return null;\n}\n\nexport { formatAppLog, formatLog, getCurrentSubNVue, getSsrGlobalData, onAddToFavorites, onBackPress, onError, onExit, onHide, onInit, onLaunch, onLoad, onNavigationBarButtonTap, onNavigationBarSearchInputChanged, onNavigationBarSearchInputClicked, onNavigationBarSearchInputConfirmed, onNavigationBarSearchInputFocusChanged, onPageHide, onPageNotFound, onPageScroll, onPageShow, onPullDownRefresh, onReachBottom, onReady, onResize, onSaveExitState, onShareAppMessage, onShareTimeline, onShow, onTabItemTap, onThemeChange, onUnhandledRejection, onUnload, renderComponentSlot, requireNativePlugin, resolveEasycom, shallowSsrRef, ssrRef };\n","// @ts-nocheck\r\nexport type DayutsConfig = {\r\n\tdate: any|null\r\n\tformat : string|null\r\n\tlocale : string|null\r\n}\r\n\r\nexport type DayutsUnit = 'year' | 'month' | 'day' | 'week' | 'date' | 'hour' | 'minute' | 'second' | 'millisecond' | 'quarter'\r\n\r\nexport type DayutsFormats = {\r\n\t/**\r\n\t * 小时和分钟的格式化字符串。\r\n\t */\r\n\tLT : string;\r\n\r\n\t/**\r\n\t * 小时、分钟和秒的格式化字符串。\r\n\t */\r\n\tLTS : string;\r\n\r\n\t/**\r\n\t * 年份、月份和日期的格式化字符串。\r\n\t */\r\n\tL : string;\r\n\r\n\t/**\r\n\t * 年份、月份、日期和星期的格式化字符串。\r\n\t */\r\n\tLL : string;\r\n\r\n\t/**\r\n\t * 年份、月份、日期、星期和小时的格式化字符串。\r\n\t */\r\n\tLLL : string;\r\n\r\n\t/**\r\n\t * 年份、月份、日期、星期、小时和分钟的格式化字符串。\r\n\t */\r\n\tLLLL : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份和日期的格式化字符串。\r\n\t */\r\n\tl : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份、日期和星期的格式化字符串。\r\n\t */\r\n\tll : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份、日期、星期和小时的格式化字符串。\r\n\t */\r\n\tlll : string;\r\n\r\n\t/**\r\n\t * 缩小的年份、月份、日期、星期、小时和分钟的格式化字符串。\r\n\t */\r\n\tllll : string;\r\n}\r\nexport type DayutsRelativeTime = {\r\n\t/**\r\n\t * 时间单位之后的格式化字符串。\r\n\t */\r\n\tfuture : string;\r\n\r\n\t/**\r\n\t * 时间单位之前的格式化字符串。\r\n\t */\r\n\tpast : string;\r\n\r\n\t/**\r\n\t * 秒的格式化字符串。\r\n\t */\r\n\ts : string;\r\n\r\n\t/**\r\n\t * 分钟的格式化字符串。\r\n\t */\r\n\tm : string;\r\n\r\n\t/**\r\n\t * 分钟（带前缀）的格式化字符串。\r\n\t */\r\n\tmm : string;\r\n\r\n\t/**\r\n\t * 小时的格式化字符串。\r\n\t */\r\n\th : string;\r\n\r\n\t/**\r\n\t * 小时（带前缀）的格式化字符串。\r\n\t */\r\n\thh : string;\r\n\r\n\t/**\r\n\t * 天的格式化字符串。\r\n\t */\r\n\td : string;\r\n\r\n\t/**\r\n\t * 天（带前缀）的格式化字符串。\r\n\t */\r\n\tdd : string;\r\n\r\n\t/**\r\n\t * 月的格式化字符串。\r\n\t */\r\n\tM : string;\r\n\r\n\t/**\r\n\t * 月（带前缀）的格式化字符串。\r\n\t */\r\n\tMM : string;\r\n\r\n\t/**\r\n\t * 年的格式化字符串。\r\n\t */\r\n\ty : string;\r\n\r\n\t/**\r\n\t * 年（带前缀）的格式化字符串。\r\n\t */\r\n\tyy : string;\r\n}\r\n\r\n/**\r\n * 本地化对象接口。\r\n */\r\nexport type DayutsLocale = {\r\n\t/**\r\n\t * 区域设置名称。\r\n\t */\r\n\tname : string;\r\n\r\n\t/**\r\n\t * 一周中每天的完整名称。\r\n\t */\r\n\tweekdays : string[];\r\n\r\n\t/**\r\n\t * 一周中每天的缩写名称。\r\n\t */\r\n\tweekdaysShort ?: string[];\r\n\r\n\t/**\r\n\t * 一周中每天的最小缩写名称。\r\n\t */\r\n\tweekdaysMin ?: string[];\r\n\r\n\t/**\r\n\t * 一年中的每个月份的名称。\r\n\t */\r\n\tmonths : string[];\r\n\r\n\t/**\r\n\t * 一年中的每个月份的缩写名称。\r\n\t */\r\n\tmonthsShort ?: string[];\r\n\r\n\t/**\r\n\t * 返回序数词的函数。\r\n\t *\r\n\t * @param number - 要格式化的数字。\r\n\t * @param period - 周期类型（如 \"W\" 表示周）。\r\n\t * @returns 返回格式化后的序数词字符串。\r\n\t */\r\n\t// ordinal : (number : number) => string;\r\n\tordinal : (number : number, period : string) => string;\r\n\r\n\t/**\r\n\t * 一周的开始日期（星期几）。\r\n\t */\r\n\tweekStart ?: number;\r\n\r\n\t/**\r\n\t * 年的开始月份。\r\n\t */\r\n\tyearStart ?: number;\r\n\r\n\t/**\r\n\t * 日期和时间格式化选项。\r\n\t */\r\n\tformats ?: DayutsFormats;\r\n\r\n\t/**\r\n\t * 相对时间格式化选项。\r\n\t */\r\n\trelativeTime ?: DayutsRelativeTime;\r\n\r\n\t/**\r\n\t * 根据小时和分钟返回上午或下午的函数。\r\n\t *\r\n\t * @param hour - 小时数（0-23）。\r\n\t * @param minute - 分钟数（0-59）。\r\n\t * @returns 返回上午或下午的字符串。\r\n\t */\r\n\tmeridiem ?: (hour : number, minute : number, isLowercase : boolean) => string;\r\n}\r\n\r\n\r\nexport type DayutsObject = {\r\n\tyears : number;\r\n\tmonths : number;\r\n\tdate : number;\r\n\thours : number;\r\n\tminutes : number;\r\n\tseconds : number;\r\n\tmilliseconds : number;\r\n}\r\n\r\n\r\n// 主 Dayuts 类类型定义\n// export interface Dayuts {\n//     // 公共属性\n//     $L: string;\n\n//     // 私有属性\n//     $d: Date;\n//     $y: number;\n//     $M: number;\n//     $D: number;\n//     $W: number;\n//     $H: number;\n//     $m: number;\n//     $s: number;\n//     $ms: number;\n//     $u: boolean;\n\n//     // 构造函数\n//     // constructor(cfg: DayutsConfig);\n\n//     // 解析配置并初始化日期\n//     // private parse(cfg: DayutsConfig): void;\n\n//     // 初始化日期的各个部分\n//     // private init(): void;\n\n//     // 检查日期是否有效\n//     isValid(): boolean;\n\n//     // 判断当前日期是否与给定日期在指定时间单位内相同\n//     // isSame(input: string, units?: DayutsUnit): boolean;\n//     // isSame(input: number, units?: DayutsUnit): boolean;\n//     // isSame(input: Date, units?: DayutsUnit): boolean;\n//     // isSame(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isSame(input: UTSJSONObject, units?: DayutsUnit): boolean;\n// \t// isSame(input : string) : boolean\r\n// \t// isSame(input : number) : boolean\r\n// \t// isSame(input : Date) : boolean\r\n// \t// isSame(input : Dayuts) : boolean\r\n// \t// isSame(input : UTSJSONObject) : boolean\r\n\t\r\n// \t// isSame(input : string, units : DayutsUnit) : boolean\r\n// \t// isSame(input : number, units : DayutsUnit) : boolean\r\n// \t// isSame(input : Date, units : DayutsUnit) : boolean\r\n// \t// isSame(input : Dayuts, units : DayutsUnit) : boolean\r\n// \t// isSame(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n// \t// isSame(input : any, units : DayutsUnit) : boolean\r\n\t\n//     // 判断给定日期是否在当前日期指定时间单位之后\n//     // isAfter(input: string, units?: DayutsUnit): boolean;\n//     // isAfter(input: number, units?: DayutsUnit): boolean;\n//     // isAfter(input: Date, units?: DayutsUnit): boolean;\n//     // isAfter(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isAfter(input: UTSJSONObject, units?: DayutsUnit): boolean;\r\n// \t// isAfter(input : string) : boolean\r\n// \t// isAfter(input : number) : boolean\r\n// \t// isAfter(input : Date) : boolean\r\n// \t// isAfter(input : Dayuts) : boolean\r\n// \t// isAfter(input : UTSJSONObject) : boolean\r\n\t\r\n// \t// isAfter(input : string, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : number, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : Date, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n// \t// isAfter(input : any, units : DayutsUnit) : boolean\n\n//     // 判断给定日期是否在当前日期指定时间单位之前\n//     // isBefore(input: string, units?: DayutsUnit): boolean;\n//     // isBefore(input: number, units?: DayutsUnit): boolean;\n//     // isBefore(input: Date, units?: DayutsUnit): boolean;\n//     // isBefore(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isBefore(input: UTSJSONObject, units?: DayutsUnit): boolean;\n\n//     // 判断当前日期是否与给定日期在指定时间单位内相同或之前\n//     // isSameOrBefore(input: string, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: number, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: Date, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isSameOrBefore(input: UTSJSONObject, units?: DayutsUnit): boolean;\n\n//     // 判断当前日期是否与给定日期在指定时间单位内相同或之后\n//     // isSameOrAfter(input: string, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: number, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: Date, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: Dayuts, units?: DayutsUnit): boolean;\n//     // isSameOrAfter(input: UTSJSONObject, units?: DayutsUnit): boolean;\n\n//     // 判断当前日期是否在两个给定日期之间\n//     // isBetween(input: any, input2: any): boolean;\r\n//     // isBetween(input: any, input2: any, units?: DayutsUnit, interval?: string): boolean;\n\n//     // 判断当前年份是否为闰年\n//     isLeapYear(): boolean;\n\n//     // 判断当前日期是否为今天\n//     isToday(): boolean;\n\n//     // 获取 Unix 时间戳（秒）\n//     unix(): number;\n\n//     // 设置为指定时间单位的开始或结束\n//     // startOf(units: DayutsUnit): Dayuts;\r\n//     // startOf(units: DayutsUnit, startOf?: boolean): Dayuts;\n//     endOf(units: DayutsUnit): Dayuts;\n\n//     // 设置指定时间单位的值\n//     set(units: DayutsUnit, int: number): Dayuts;\n\n//     // 获取指定时间单位的值\n//     get(units: DayutsUnit): number;\n\n//     // 年、月、日、时、分、秒、毫秒的 getter 和 setter 方法\n//     year(): number;\r\n//     year(input?: number): Dayuts;\n//     month(): number\r\n//     month(input?: number): Dayuts;\n//     // day(): number;\r\n//     day(input?: number): Dayuts;\n//     date(): number;\r\n//     date(input?: number): Dayuts;\n//     // hour(): number;\r\n//     hour(input?: number): Dayuts;\n//     // minute(): number;\r\n//     minute(input?: number): Dayuts;\n//     // second(): number;\r\n//     second(input?: number): Dayuts;\n//     // millisecond(): number;\r\n//     millisecond(input?: number): Dayuts;\n\n//     // 添加时间\n//     add(number: number, units: DayutsUnit): Dayuts;\n\n//     // 减去时间\n//     subtract(number: number, units: DayutsUnit): Dayuts;\n\n//     // 格式化日期\n//     format(formatStr?: string): string;\n\n//     // 获取 UTC 偏移量（分钟）\n//     utcOffset(): number;\n\n//     // 计算两个日期之间的差值\n//     diff(input: string, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: number, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: Date, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: Dayuts, units?: DayutsUnit, float?: boolean): number;\n//     diff(input: UTSJSONObject, units?: DayutsUnit, float?: boolean): number;\n\n//     // 转换为原生 Date 对象\n//     toDate(): Date;\n\n//     // 转换为 ISO 8601 字符串\n//     toJSON(): string | null;\n//     toISOString(): string;\n\n//     // 转换为对象\n//     toObject(): DayutsObject;\n\n//     // 转换为数组\n//     toArray(): number[];\n\n//     // 获取时间戳（毫秒）\n//     valueOf(): number;\n\n//     // 获取月份的天数\n//     daysInMonth(): number;\n\n//     // 获取本地化对象\n//     // private $locale(): DayutsLocale;\n\n//     // 设置或获取本地化配置\n//     locale(preset: string, object?: DayutsLocale): Dayuts;\n//     locale(preset: DayutsLocale, object?: DayutsLocale): Dayuts;\n\n//     // 克隆当前实例\n//     clone(): Dayuts;\n\n//     // 转换为字符串\n//     // toString(): string;\n\n//     // 获取或设置一年中的第几天\n//     dayOfYear(): number;\r\n//     dayOfYear(input?: number): Dayuts;\n\n//     // 相对时间方法\n//     fromToBase(input: any, withoutSuffix: boolean, instance: Dayuts, isFrom: boolean): string;\n//     to(input: any, withoutSuffix?: boolean): string;\n//     from(input: any, withoutSuffix?: boolean): string;\n//     toNow(withoutSuffix?: boolean): string;\n//     fromNow(withoutSuffix?: boolean): string;\n// }","// @ts-nocheck\r\nexport const SECONDS_A_MINUTE = 60\nexport const SECONDS_A_HOUR = SECONDS_A_MINUTE * 60\nexport const SECONDS_A_DAY = SECONDS_A_HOUR * 24\nexport const SECONDS_A_WEEK = SECONDS_A_DAY * 7\n\nexport const MILLISECONDS_A_SECOND = 1e3\nexport const MILLISECONDS_A_MINUTE = SECONDS_A_MINUTE * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_HOUR = SECONDS_A_HOUR * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_DAY = SECONDS_A_DAY * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_WEEK = SECONDS_A_WEEK * MILLISECONDS_A_SECOND\n\n// English locales\nexport const MS = 'millisecond'\nexport const S = 'second'\nexport const MIN = 'minute'\nexport const H = 'hour'\nexport const D = 'day'\nexport const W = 'week'\nexport const M = 'month'\nexport const Q = 'quarter'\nexport const Y = 'year'\nexport const DATE = 'date'\n\nexport const FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ'\n\nexport const INVALID_DATE_STRING = 'Invalid Date'\n\n// regex\nexport const REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/\nexport const REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n// export const REGEX_FORMAT = /(?:[^\\]]+)|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\n","// @ts-nocheck\r\nimport { Dayuts } from './index'\r\nimport { M, Y, W, D, DATE, H, MIN, S, MS, Q } from './constant'\r\nimport {DayutsUnit} from '../utssdk/interface'\r\n/**\r\n * 用指定字符串填充目标字符串的开头，以达到指定的总长度。\r\n *\r\n * @param {string} string - 需要填充的目标字符串。\r\n * @param {number} length - 填充后的总长度。\r\n * @param {string} pad - 用于填充的字符串。\r\n * @returns {string} 填充后的字符串。\r\n */\r\nfunction padStart(string : string, length : number, pad : string) : string {\r\n\tconst str = string//`${string}`\r\n\tif (str.length >= length) return str\r\n\treturn str.padStart(length, pad) //`${Array((length + 1) - string.length).join(pad)}${string}`\r\n}\r\nexport {\r\n\tpadStart\r\n}\r\nfunction padZoneStr(instance : Dayuts) : string {\r\n\tconst negMinutes = -instance.utcOffset()\r\n\tconst minutes = Math.abs(negMinutes)\r\n\tconst hourOffset = Math.floor(minutes / 60)\r\n\tconst minuteOffset = minutes % 60\r\n\treturn `${negMinutes <= 0 ? '+' : '-'}${padStart(hourOffset.toString(), 2, '0')}:${padStart(minuteOffset.toString(), 2, '0')}`\r\n}\r\nexport {\r\n\tpadZoneStr\r\n}\r\n\r\n// export function isNull(s): boolean{\r\n// \treturn s == null\r\n// }\r\n\r\nexport function isNumber(value : any | null) : boolean {\r\n\t// #ifdef APP-ANDROID\r\n\treturn ['Byte', 'UByte', 'Short', 'UShort', 'Int', 'UInt', 'Long', 'ULong', 'Float', 'Double', 'number'].includes(typeof value)\r\n\t// #endif\r\n\t// #ifdef APP-IOS\r\n\treturn ['Int8', 'UInt8', 'Int16', 'UInt16', 'Int32', 'UInt32', 'Int64', 'UInt64', 'Int', 'UInt', 'Float', 'Float16', 'Float32', 'Float64', 'Double', 'number'].includes(typeof value)\r\n\t// #endif\r\n\t// #ifndef APP-ANDROID || APP-IOS\r\n\treturn typeof value === 'number' && !isNaN(value);\r\n\t// #endif\r\n}\r\n\r\n\r\n\r\n/**\r\n * 将给定的时间单位转换为标准格式。\r\n *\r\n * @param {string} u - 要转换的时间单位。\r\n * @returns {string} 返回转换后的时间单位。\r\n */\r\nexport function prettyUnit(u : string) : DayutsUnit {\r\n\tconst special = new Map<string, string>([\r\n\t\t['M', M],\r\n\t\t['y', Y],\r\n\t\t['w', W],\r\n\t\t['d', D],\r\n\t\t['D', DATE],\r\n\t\t['h', H],\r\n\t\t['m', MIN],\r\n\t\t['s', S],\r\n\t\t['ms', MS],\r\n\t\t['Q', Q]\r\n\t])\r\n\treturn (special.get(u) ?? `${u}`.toLowerCase().replace(/s$/, '')) as DayutsUnit\r\n}\r\n\r\n\r\n/**\r\n * 计算两个日期之间的月份差值\r\n * @param {Dayjs} a - 第一个日期\r\n * @param {Dayjs} b - 第二个日期\r\n * @returns {number} 返回两个日期之间的月份差值\r\n */\r\nexport function monthDiff(a : Dayuts, b : Dayuts) : number {\r\n\t// 该函数来自 moment.js，以保持相同的结果\r\n\tif (a.date() < b.date()) return -monthDiff(b, a)\r\n\tconst wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month())\r\n\tconst anchor = a.clone().add(wholeMonthDiff, M).valueOf()\r\n\tconst c = b.valueOf() - anchor < 0\r\n\tconst anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), M).valueOf()\r\n\t// return +(-(wholeMonthDiff + ((b.valueOf() - anchor) / (c ? (anchor - anchor2) :\r\n\t// \t(anchor2 - anchor)))) || 0)\r\n\t\r\n\tconst decimalMonthDiff = (b.valueOf() - anchor) / (c ? (anchor - anchor2) : (anchor2 - anchor));\r\n\tconst result = wholeMonthDiff + decimalMonthDiff;\r\n\tconst negatedResult = -result;\r\n\tconst absResult = +negatedResult;\r\n\tconst finalResult = !isNaN(absResult) ? absResult : 0;\r\n\treturn finalResult;\r\n}\r\n\r\n\r\n/**\r\n * 返回向下取整的绝对值\r\n * @param {number} n - 输入的数字\r\n * @returns {number} 返回向下取整的绝对值\r\n */\r\nexport function absFloor(n : number):number {\r\n\t// return (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\r\n\treturn (n < 0 ? Math.max(Math.ceil(n), 0) : Math.floor(n))\r\n}","// @ts-nocheck\r\nimport type { DayutsLocale, DayutsRelativeTime} from '../../../utssdk/interface'\r\n/**\r\n * 英语本地化对象。\r\n */\r\nexport default {\r\n\tname: 'en',\r\n\t/**\r\n\t * 星期名称数组。\r\n\t */\r\n\tweekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n\t/**\r\n\t * 月份名称数组。\r\n\t */\r\n\tmonths: [\r\n\t\t'January',\r\n\t\t'February',\r\n\t\t'March',\r\n\t\t'April',\r\n\t\t'May',\r\n\t\t'June',\r\n\t\t'July',\r\n\t\t'August',\r\n\t\t'September',\r\n\t\t'October',\r\n\t\t'November',\r\n\t\t'December',\r\n\t],\r\n\trelativeTime: {\r\n\t\tfuture: 'in %s',\r\n\t\tpast: '%s ago',\r\n\t\ts: 'a few seconds',\r\n\t\tm: 'a minute',\r\n\t\tmm: '%d minutes',\r\n\t\th: 'an hour',\r\n\t\thh: '%d hours',\r\n\t\td: 'a day',\r\n\t\tdd: '%d days',\r\n\t\tM: 'a month',\r\n\t\tMM: '%d months',\r\n\t\ty: 'a year',\r\n\t\tyy: '%d years'\r\n\t} as DayutsRelativeTime,\r\n\t/**\r\n\t * 序数函数，用于将数字转换为带有序数后缀的字符串。\r\n\t *\r\n\t * @param {number} n - 要转换的数字。\r\n\t * @returns {string} 带有序数后缀的字符串。\r\n\t */\r\n\tordinal: (n : number, _ : string) : string => {\r\n\t\tconst s = ['th', 'st', 'nd', 'rd']\r\n\t\tconst v = n % 100\r\n\t\tconst i = (v - 20) % 10\r\n\t\tconst k = i < s.length ? i : v < s.length ? v : 0\r\n\t\treturn `[${n}${(s[k])}]`\r\n\t},\r\n} as DayutsLocale","// @ts-nocheck\r\nimport type { DayutsLocale, DayutsRelativeTime, DayutsFormats } from '../../../utssdk/interface'\r\n\r\nconst locale : DayutsLocale = {\r\n\tname: 'zh-cn',\r\n\tweekdays: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\r\n\tweekdaysShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n\tweekdaysMin: ['日', '一', '二', '三', '四', '五', '六'],\r\n\tmonths: [\r\n\t\t'一月', '二月', '三月', '四月', '五月', '六月',\r\n\t\t'七月', '八月', '九月', '十月', '十一月', '十二月'\r\n\t],\r\n\tmonthsShort: [\r\n\t\t'1月', '2月', '3月', '4月', '5月', '6月',\r\n\t\t'7月', '8月', '9月', '10月', '11月', '12月'\r\n\t],\r\n\tordinal: (number:number, period:string):string => {\r\n\t\t// switch (period) {\r\n\t\t// \tcase 'W':\r\n\t\t// \t\treturn `${number}周`;\r\n\t\t// \tdefault:\r\n\t\t// \t\treturn `${number}日`;\r\n\t\t// }\r\n\t\tif(period == 'W'){\r\n\t\t\treturn `${number}周`;\r\n\t\t}\r\n\t\treturn `${number}日`\r\n\t},\r\n\tweekStart: 1,\r\n\tyearStart: 4,\r\n\tformats: {\r\n\t\tLT: 'HH:mm',\r\n\t\tLTS: 'HH:mm:ss',\r\n\t\tL: 'YYYY/MM/DD',\r\n\t\tLL: 'YYYY年M月D日',\r\n\t\tLLL: 'YYYY年M月D日Ah点mm分',\r\n\t\tLLLL: 'YYYY年M月D日ddddAh点mm分',\r\n\t\tl: 'YYYY/M/D',\r\n\t\tll: 'YYYY年M月D日',\r\n\t\tlll: 'YYYY年M月D日 HH:mm',\r\n\t\tllll: 'YYYY年M月D日dddd HH:mm'\r\n\t} as DayutsFormats,\r\n\trelativeTime: {\r\n\t\tfuture: '%s内',\r\n\t\tpast: '%s前',\r\n\t\ts: '几秒',\r\n\t\tm: '1 分钟',\r\n\t\tmm: '%d 分钟',\r\n\t\th: '1 小时',\r\n\t\thh: '%d 小时',\r\n\t\td: '1 天',\r\n\t\tdd: '%d 天',\r\n\t\tM: '1 个月',\r\n\t\tMM: '%d 个月',\r\n\t\ty: '1 年',\r\n\t\tyy: '%d 年'\r\n\t} as DayutsRelativeTime,\r\n\tmeridiem: (hour:number, minute:number, _ : boolean):string => {\r\n\t\tconst hm = (hour * 100) + minute;\r\n\t\tif (hm < 600) {\r\n\t\t\treturn '凌晨';\r\n\t\t} else if (hm < 900) {\r\n\t\t\treturn '早上';\r\n\t\t} else if (hm < 1100) {\r\n\t\t\treturn '上午';\r\n\t\t} else if (hm < 1300) {\r\n\t\t\treturn '中午';\r\n\t\t} else if (hm < 1800) {\r\n\t\t\treturn '下午';\r\n\t\t}\r\n\t\treturn '晚上';\r\n\t}\r\n};\r\n\r\nexport default locale;","// @ts-nocheck\r\nimport {DayutsLocale} from '../utssdk/interface'\r\nimport en from './locale/en'\r\nimport zhCn from './locale/zh-cn'\r\n\r\n// #ifndef UNI-APP-X\r\n\r\n// #ifdef VUE2\r\nimport {reactive} from '@vue/composition-api'\r\n// #endif\r\n\r\n// #ifdef VUE3\r\nimport {reactive} from 'vue'\r\n// #endif\r\n\r\n// #endif\r\n\r\n\r\nconst localesMap = new Map<string, DayutsLocale>()\n//定义一个大写的State类型\ntype LocaleState = {\n  lang: string;\r\n  locales: Map<string, DayutsLocale>\n}\nexport let localeState = reactive({\n  lang: 'en',\n  locales: localesMap\n} as LocaleState)\r\nlocaleState.locales.set('en', en)\r\nlocaleState.locales.set('zh-cn', zhCn)\r\n\r\nclass DayutsIntl {\r\n\tconstructor(){}\r\n\tuse(locale:DayutsLocale):DayutsIntl{\r\n\t\tlocaleState.locales.set(locale.name, locale)\r\n\t\treturn this\r\n\t}\r\n\tset locale(locale: string){\r\n\t\tif(localeState.locales.has(locale)){\r\n\t\t\tlocaleState.lang = locale\r\n\t\t} else {\r\n\t\t\tlet list:string[] = []\r\n\t\t\tlocaleState.locales.forEach(function(_:any,key:string){\r\n\t\t\t   list.push(key)\r\n\t\t\t})\r\n\t\t\tconsole.warn(`未知语言: \"${locale}\". 请使用以下已知语言之一:${list.join(', ')}`);\r\n\t\t}\r\n\t}\r\n\tget locale(): string{\r\n\t\treturn localeState.lang\r\n\t}\r\n\tset(name: string, locale:DayutsLocale){\r\n\t\tlocaleState.locales.set(name, locale)\r\n\t}\r\n\thas(name: string):boolean{\r\n\t\treturn localeState.locales.has(name)\r\n\t}\r\n}\r\nexport const dayutsIntl = new DayutsIntl()\r\n\r\n\r\n// const dyauts = use(xx).use(xx).use(xx).use(xx)\r\n// dyauts.locale ='zh'","// @ts-nocheck\r\nimport { DayutsConfig, type DayutsLocale, DayutsUnit, DayutsObject } from '../utssdk/interface'\r\nimport { REGEX_FORMAT, REGEX_PARSE, INVALID_DATE_STRING, M, Y, W, D, DATE, H, MIN, S, MS, Q, MILLISECONDS_A_MINUTE, MILLISECONDS_A_HOUR, MILLISECONDS_A_SECOND, MILLISECONDS_A_WEEK, MILLISECONDS_A_DAY, FORMAT_DEFAULT } from './constant'\r\nimport { isNumber, prettyUnit, padStart, padZoneStr, monthDiff, absFloor } from './utils'\r\nimport { dayutsIntl, localeState } from './use'\r\n\r\ntype Threshold = {\r\n\tl : string;\r\n\tr ?: number;\r\n\td ?: DayutsUnit;\r\n}\r\n\r\nfunction parseLocale(preset : string | null) : string | null;\r\nfunction parseLocale(preset : DayutsLocale | null) : string | null;\r\nfunction parseLocale(preset : string, object : DayutsLocale | null, isLocal : boolean) : string | null;\r\nfunction parseLocale(preset : DayutsLocale, object : DayutsLocale, isLocal : boolean) : string | null;\r\nfunction parseLocale(preset : any | null, object : DayutsLocale | null = null, isLocal : boolean = false) : string | null {\r\n\tlet l : string | null = null\r\n\tif (preset == null) return dayutsIntl.locale\r\n\tif (typeof preset == 'string') {\r\n\t\tconst presetLower = (preset as string).toLowerCase()\r\n\t\tif (dayutsIntl.has(presetLower)) {\r\n\t\t\tl = presetLower\r\n\t\t}\r\n\t\tif (object != null) {\r\n\t\t\tdayutsIntl.set(presetLower, object)\r\n\t\t\tl = presetLower\r\n\t\t}\r\n\t\tconst presetSplit = preset.split('-')\r\n\t\tif (l == null && presetSplit.length > 1) {\r\n\t\t\treturn parseLocale(presetSplit[0])\r\n\t\t}\r\n\t} else if (preset instanceof DayutsLocale) {\r\n\t\t// const { name } = preset as DayutsLocale\r\n\t\tdayutsIntl.set(preset.name, preset)\r\n\t\tl = preset.name\r\n\t}\r\n\tif (!isLocal && l != null) {\r\n\t\t// L = l\r\n\t\tdayutsIntl.locale = l\r\n\t}\r\n\t// return l ?? L //(!isLocal && L != null)\r\n\treturn l ?? dayutsIntl.locale //(!isLocal && L != null)\r\n}\r\n\r\nfunction tryParseNumberAtIndex(digits : (any|null)[], index : number) : number | null {\r\n\t// 检查索引是否在数组范围内\r\n\tif (index >= 0 && index < digits.length) {\r\n\t\tif(digits[index] == null) return null\r\n\t\t// 尝试解析索引位置的字符串为数字\r\n\t\tconst parsedNumber = isNumber(digits[index]) ? digits[index] as number : parseInt(`${digits[index]}`, 10);\r\n\r\n\t\t// 检查解析结果是否为有效数字\r\n\t\tif (!isNaN(parsedNumber)) {\r\n\t\t\treturn parsedNumber;\r\n\t\t}\r\n\t}\r\n\treturn null\r\n}\r\n// function createDateFromArray(d: number[]):Date\r\n// function createDateFromArray(d: string[]):Date\r\nfunction createDateFromArray(d : (any|null)[], offset : number = 0) : Date {\r\n\tconst year = tryParseNumberAtIndex(d, 1 - offset) ?? new Date().getFullYear()\r\n\tconst month = (tryParseNumberAtIndex(d, 2 - offset) ?? 1) - 1\r\n\tconst day = tryParseNumberAtIndex(d, 3 - offset) ?? 1\r\n\tconst hour = tryParseNumberAtIndex(d, 4 - offset) ?? 0\r\n\tconst minute = tryParseNumberAtIndex(d, 5 - offset) ?? 0\r\n\tconst second = tryParseNumberAtIndex(d, 6 - offset) ?? 0\r\n\tconst millisecond = (tryParseNumberAtIndex(d, 7 - offset) ?? 0).toString().substring(0, 3) //d.length > 7 ? parseInt((d[7] ?? '0').substring(0, 3)) : 0\r\n\r\n\treturn new Date(\r\n\t\tyear,\r\n\t\tmonth,\r\n\t\tday,\r\n\t\thour,\r\n\t\tminute,\r\n\t\tsecond,\r\n\t\tparseInt(millisecond))\r\n}\r\nfunction parseDate(cfg : DayutsConfig) : Date|null {\r\n\tconst { date } = cfg\r\n\tif (date == null) return new Date()\r\n\tif (date instanceof Date) return date as Date\r\n\t\r\n\ttry {\r\n\t\tif (typeof date == 'string' && /^\\d+$/.test(date as string)) {\r\n\t\t\treturn new Date(parseInt(`${date}`.padEnd(13, '0')))\r\n\t\t}\r\n\t\tif (typeof date == 'string' && !/Z$/i.test(date as string)) {\r\n\t\t\tconst d = date.match(REGEX_PARSE)\r\n\t\t\t// #ifndef APP-ANDROID || APP-IOS\r\n\t\t\tconst isNull = d == null\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef APP-ANDROID || APP-IOS\r\n\t\t\tconst isNull = d == null|| Array.isArray(d) && d.length == 0\r\n\t\t\t// #endif\r\n\t\t\tif (!isNull) {\r\n\t\t\t\treturn createDateFromArray(d as (any|null)[])\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof date == 'string') return new Date(date as string)\r\n\t\tif (Array.isArray(date)) {\r\n\t\t\treturn createDateFromArray(date as (any|null)[], 1)\r\n\t\t}\r\n\t\tif (isNumber(date)) return new Date(date as number)\r\n\t\treturn null//new Date()\r\n\t} catch(err) {\r\n\t\treturn null//new Date()\r\n\t}\r\n}\r\n\r\nfunction wrapper(date : any, instance : Dayuts) : Dayuts {\r\n\treturn dayuts(date, instance.$L)\r\n}\r\n\r\nexport class Dayuts {\r\n\t$L : string\r\n\tprivate valid: boolean = true; \r\n\tprivate $d : Date = new Date()\r\n\tprivate $y : number = 0\r\n\tprivate $M : number = 0\r\n\tprivate $D : number = 0\r\n\tprivate $W : number = 0\r\n\tprivate $H : number = 0\r\n\tprivate $m : number = 0\r\n\tprivate $s : number = 0\r\n\tprivate $ms : number = 0\r\n\tprivate $u : boolean = false\r\n\tconstructor(cfg : DayutsConfig) {\r\n\t\tthis.$L = parseLocale(cfg.locale) ?? dayutsIntl.locale //'en'\r\n\t\tthis.parse(cfg)\r\n\t}\r\n\tparse(cfg : DayutsConfig) {\r\n\t\tconst _d = parseDate(cfg)\r\n\t\tif(_d != null) {\r\n\t\t\tthis.$d = parseDate(cfg)!\r\n\t\t\tthis.init()\r\n\t\t} else {\r\n\t\t\tthis.valid = false\r\n\t\t}\r\n\t}\r\n\tinit() {\r\n\t\tconst { $d } = this\r\n\t\tthis.$y = $d.getFullYear()\r\n\t\tthis.$M = $d.getMonth()\r\n\t\tthis.$D = $d.getDate()\r\n\t\tthis.$W = $d.getDay()\r\n\t\tthis.$H = $d.getHours()\r\n\t\tthis.$m = $d.getMinutes()\r\n\t\tthis.$s = $d.getSeconds()\r\n\t\tthis.$ms = $d.getMilliseconds()\r\n\t}\r\n\t/**\r\n\t * 检查日期对象是否有效。\r\n\t *\r\n\t * @returns {boolean} 如果日期对象有效，则返回true；否则返回false。\r\n\t */\r\n\tisValid() : boolean {\r\n\t\treturn this.valid\r\n\t\t// return !(this.$d.toString() == INVALID_DATE_STRING)\r\n\t}\r\n\t/**\r\n\t * 检查当前日期是否与给定的日期在指定的时间单位内相同。\r\n\t *\r\n\t * @param {string|number|Date} input - 要比较的日期。\r\n\t * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @returns {boolean} 如果当前日期与给定的日期在指定的时间单位内相同，则返回true；否则返回false。\r\n\t */\r\n\tisSame(input : string) : boolean\r\n\tisSame(input : number) : boolean\r\n\tisSame(input : Date) : boolean\r\n\tisSame(input : Dayuts) : boolean\r\n\tisSame(input : UTSJSONObject) : boolean\r\n\r\n\tisSame(input : string, units : DayutsUnit) : boolean\r\n\tisSame(input : number, units : DayutsUnit) : boolean\r\n\tisSame(input : Date, units : DayutsUnit) : boolean\r\n\tisSame(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSame(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSame(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input)\r\n\t\tconst date1 = this.startOf(units).valueOf()\r\n\t\tconst date2 = other.valueOf()\r\n\t\tconst date3 = this.endOf(units).valueOf()\r\n\t\treturn date1 <= date2 && date2 <= date3\r\n\t}\r\n\t/**\r\n\t * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之后。\r\n\t *\r\n\t * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\r\n\t * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之后，则返回 `true`，否则返回 `false`。\r\n\t */\r\n\tisAfter(input : string) : boolean\r\n\tisAfter(input : number) : boolean\r\n\tisAfter(input : Date) : boolean\r\n\tisAfter(input : Dayuts) : boolean\r\n\tisAfter(input : UTSJSONObject) : boolean\r\n\r\n\tisAfter(input : string, units : DayutsUnit) : boolean\r\n\tisAfter(input : number, units : DayutsUnit) : boolean\r\n\tisAfter(input : Date, units : DayutsUnit) : boolean\r\n\tisAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisAfter(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input)\r\n\t\tconst date1 = other.valueOf()\r\n\t\tconst date2 = this.startOf(units).valueOf()\r\n\t\treturn date1 < date2;\r\n\t}\r\n\t/**\r\n\t * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之前。\r\n\t *\r\n\t * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\r\n\t * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之前，则返回 `true`，否则返回 `false`。\r\n\t */\r\n\tisBefore(input : string) : boolean\r\n\tisBefore(input : number) : boolean\r\n\tisBefore(input : Date) : boolean\r\n\tisBefore(input : Dayuts) : boolean\r\n\tisBefore(input : UTSJSONObject) : boolean\r\n\r\n\tisBefore(input : string, units : DayutsUnit) : boolean\r\n\tisBefore(input : number, units : DayutsUnit) : boolean\r\n\tisBefore(input : Date, units : DayutsUnit) : boolean\r\n\tisBefore(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisBefore(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisBefore(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input);\r\n\t\tconst date1 = other.valueOf()\r\n\t\tconst date2 = this.endOf(units).valueOf()\r\n\t\treturn date2 < date1;\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否与给定的输入在同一时间或之前，根据指定的时间单位\r\n\t * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之前，则返回true，否则返回false\r\n\t */\r\n\tisSameOrBefore(input : string) : boolean\r\n\tisSameOrBefore(input : number) : boolean\r\n\tisSameOrBefore(input : Date) : boolean\r\n\tisSameOrBefore(input : Dayuts) : boolean\r\n\tisSameOrBefore(input : UTSJSONObject) : boolean\r\n\r\n\tisSameOrBefore(input : string, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : number, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : Date, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\treturn this.isSame(input, units) || this.isBefore(input, units)\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否与给定的输入在同一时间或之后，根据指定的时间单位\r\n\t * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之后，则返回true，否则返回false\r\n\t */\r\n\tisSameOrAfter(input : string) : boolean\r\n\tisSameOrAfter(input : number) : boolean\r\n\tisSameOrAfter(input : Date) : boolean\r\n\tisSameOrAfter(input : Dayuts) : boolean\r\n\tisSameOrAfter(input : UTSJSONObject) : boolean\r\n\r\n\tisSameOrAfter(input : string, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : number, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : Date, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\treturn this.isSame(input, units) || this.isAfter(input, units)\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否在给定的两个时间之间\r\n\t * @param {any} input - 第一个时间输入\r\n\t * @param {any} input2 - 第二个时间输入\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @param {string} interval - 区间符号，表示区间的开闭性，默认为'()'，表示开区间\r\n\t * @returns {boolean} - 如果当前Dayuts对象在给定的两个时间之间，则返回true，否则返回false\r\n\t */\r\n\tisBetween(input : any, input2 : any, units : DayutsUnit = 'millisecond', interval : string = '()') : boolean {\r\n\t\tconst dA = dayuts(input)\r\n\t\tconst dB = dayuts(input2)\r\n\t\tconst dAi = interval.startsWith('(')\r\n\t\tconst dBi = interval.endsWith(')')\r\n\r\n\t\treturn ((dAi ? this.isAfter(dA, units) : !this.isBefore(dA, units)) &&\r\n\t\t\t(dBi ? this.isBefore(dB, units) : !this.isAfter(dB, units)))\r\n\t\t\t|| ((dAi ? this.isBefore(dA, units) : !this.isAfter(dA, units)) &&\r\n\t\t\t\t(dBi ? this.isAfter(dB, units) : !this.isBefore(dB, units)))\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象所在的年份是否为闰年\r\n\t * @returns {boolean} - 如果当前Dayuts对象所在的年份是闰年，则返回true，否则返回false\r\n\t */\r\n\tisLeapYear():boolean{\r\n\t\t return ((this.$y % 4 == 0) && (this.$y % 100 != 0)) || (this.$y % 400 == 0)\r\n\t}\r\n\tisToday():boolean{\r\n\t\tconst comparisonTemplate = 'YYYY-MM-DD'\r\n\t\tconst now = dayuts()\r\n\t\t\r\n\t\treturn this.format(comparisonTemplate) == now.format(comparisonTemplate)\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\r\n\t *\r\n\t * @returns {number} 返回当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\r\n\t */\r\n\tunix() : number {\r\n\t\treturn Math.floor(this.valueOf() / 1000);\r\n\t}\r\n\t/**\r\n\t * 将当前日期设置为指定时间单位的开始或结束。\r\n\t *\r\n\t * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @param {boolean} startOf - 如果为true，则设置为开始；如果为false，则设置为结束。\r\n\t * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\r\n\t */\r\n\tstartOf(units : DayutsUnit, startOf : boolean = true) : Dayuts {\r\n\t\tconst isStartOf = startOf;\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// instanceFactory 函数用于创建一个新的 Dayuts 对象，表示给定日期的开始或结束。\r\n\t\t// 参数 d 和 m 分别表示日期和月份。\r\n\t\tconst instanceFactory = (d : number, m : number) : Dayuts => {\r\n\t\t\tconst ins = dayuts(new Date(this.$y, m, d))\r\n\t\t\treturn isStartOf ? ins : ins.endOf(D)\r\n\t\t}\r\n\r\n\t\t// instanceFactorySet 函数用于创建一个新的 Dayuts 对象，表示调整后的时间。\r\n\t\t// 参数 method 表示要调用的 Date 对象的方法（如 'setHours'），slice 表示要调整的时间部分的索引。\r\n\t\tconst instanceFactorySet = (method : string, slice : number) : Dayuts => {\r\n\t\t\t// 定义表示开始和结束时间的参数数组。\r\n\t\t\tconst argumentStart = [0, 0, 0, 0]\r\n\t\t\tconst argumentEnd = [23, 59, 59, 999]\r\n\t\t\t// 根据 isStartOf 的值，选择开始或结束时间的参数数组，并调用 Date 对象的方法。\r\n\t\t\tconst args = (isStartOf ? argumentStart : argumentEnd).slice(slice)\r\n\t\t\tconst date = this.toDate()\r\n\t\t\tif (method == 'setHours') {\r\n\t\t\t\tdate.setHours(args[0]);\r\n\t\t\t\tdate.setMinutes(args[1])\r\n\t\t\t\tdate.setSeconds(args[2])\r\n\t\t\t\tdate.setMilliseconds(args[3])\r\n\t\t\t} else if (method == 'setMinutes') {\r\n\t\t\t\tdate.setMinutes(args[0]);\r\n\t\t\t\tdate.setSeconds(args[1])\r\n\t\t\t\tdate.setMilliseconds(args[2])\r\n\t\t\t} else if (method == 'setSeconds') {\r\n\t\t\t\tdate.setSeconds(args[0])\r\n\t\t\t\tdate.setMilliseconds(args[1])\r\n\t\t\t} else if (method == 'setMilliseconds') {\r\n\t\t\t\tdate.setMilliseconds(args[0])\r\n\t\t\t}\r\n\t\t\treturn dayuts(date)\r\n\t\t}\r\n\t\tconst { $W, $M, $D } = this\r\n\t\tconst utcPad = `set${this.$u ? 'UTC' : ''}`\r\n\t\tif (unit == Y) {\r\n\t\t\treturn isStartOf ? instanceFactory(1, 0) : instanceFactory(31, 11);\r\n\t\t} else if (unit == M) {\r\n\t\t\treturn isStartOf ? instanceFactory(1, $M) : instanceFactory(0, $M + 1);\r\n\t\t} else if (unit == W) {\r\n\t\t\tconst weekStart = this.$locale().weekStart ?? 0;\r\n\t\t\tconst gap = ($W < weekStart ? $W + 7 : $W) - weekStart;\r\n\t\t\treturn instanceFactory(isStartOf ? $D - gap : $D + (6 - gap), $M);\r\n\t\t} else if (unit == D || unit == DATE) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Hours`, 0);\r\n\t\t} else if (unit == H) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Minutes`, 1);\r\n\t\t} else if (unit == MIN) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Seconds`, 2);\r\n\t\t} else if (unit == S) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Milliseconds`, 3);\r\n\t\t} else {\r\n\t\t\treturn this.clone();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 将当前日期设置为指定时间单位的结束。\r\n\t *\r\n\t * @param {string} arg - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\r\n\t */\r\n\tendOf(units : DayutsUnit) : Dayuts {\r\n\t\treturn this.startOf(units, false)\r\n\t}\r\n\t/**\r\n\t * 设置指定的时间单位的值。\r\n\t *\r\n\t * @param {string} units - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @param {number} int - 要设置的值。\r\n\t * @returns {Dayuts} 返回当前对象。\r\n\t */\r\n\tprivate $set(units : DayutsUnit, int : number) : Dayuts { // private set\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// const utcPad = `set${this.$u ? 'UTC' : ''}`\r\n\t\tconst arg = unit == D ? this.$D + (int - this.$W) : int\r\n\t\tconst setDateUnit = (date : Dayuts, unit : DayutsUnit, arg : number) => {\r\n\t\t\tif (unit == D || unit == DATE) {\r\n\t\t\t\tdate.$d.setDate(arg);\r\n\t\t\t} else if (unit == M) {\r\n\t\t\t\tdate.$d.setMonth(arg);\r\n\t\t\t} else if (unit == Y) {\r\n\t\t\t\tdate.$d.setFullYear(arg);\r\n\t\t\t} else if (unit == H) {\r\n\t\t\t\tdate.$d.setHours(arg);\r\n\t\t\t} else if (unit == MIN) {\r\n\t\t\t\tdate.$d.setMinutes(arg);\r\n\t\t\t} else if (unit == S) {\r\n\t\t\t\tdate.$d.setSeconds(arg);\r\n\t\t\t} else if (unit == MS) {\r\n\t\t\t\tdate.$d.setMilliseconds(arg);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (unit == M || unit == Y) {\r\n\t\t\t// clone is for badMutable plugin\r\n\t\t\tconst date = this.clone().set(DATE, 1)\r\n\t\t\t// date.$d[name](arg)\r\n\t\t\tsetDateUnit(date, unit, arg)\r\n\t\t\tdate.init()\r\n\t\t\tthis.$d = date.set(DATE, Math.min(this.$D, date.daysInMonth())).$d\r\n\t\t} else {\r\n\t\t\tsetDateUnit(this, unit, arg)\r\n\t\t\t// this.$d[name](arg)\r\n\t\t}\r\n\r\n\t\tthis.init()\r\n\t\treturn this\r\n\t}\r\n\t/**\r\n\t * 创建一个当前对象的副本，并设置指定的时间单位的值。\r\n\t *\r\n\t * @param {string} string - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @param {number} int - 要设置的值。\r\n\t * @returns {Dayuts} 返回一个新的 `dayuts` 对象，其值为当前对象的副本，并设置了指定的时间单位的值。\r\n\t */\r\n\tset(string : DayutsUnit, int : number) : Dayuts {\r\n\t\treturn this.clone().$set(string, int);\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象的指定时间单位的值。\r\n\t *\r\n\t * @param {string} units - 要获取的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {number} 返回当前 `dayuts` 对象的指定时间单位的值。\r\n\t */\r\n\tget(units : DayutsUnit) : number {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\tif (unit == D) {\r\n\t\t\treturn this.day()\r\n\t\t} else if (unit == DATE) {\r\n\t\t\treturn this.date()\r\n\t\t} else if (unit == M) {\r\n\t\t\treturn this.month()\r\n\t\t} else if (unit == Y) {\r\n\t\t\treturn this.year()\r\n\t\t} else if (unit == H) {\r\n\t\t\treturn this.hour()\r\n\t\t} else if (unit == MIN) {\r\n\t\t\treturn this.minute()\r\n\t\t} else if (unit == S) {\r\n\t\t\treturn this.second()\r\n\t\t} else if (unit == MS) {\r\n\t\t\treturn this.millisecond()\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\t/**\r\n\t * 获取或设置年份。\r\n\t * @param {number | null} [input] - 要设置的年份。\r\n\t * @returns {number | Dayuts} 年份或 Dayuts 实例。\r\n\t */\r\n\tyear() : number\r\n\tyear(input : number) : Dayuts\r\n\tyear(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$y\r\n\t\treturn this.set(Y, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置月份。\r\n\t * @param {number | null} [input] - 要设置的月份（0-11）。\r\n\t * @returns {number | Dayuts} 月份或 Dayuts 实例。\r\n\t */\r\n\tmonth() : number\r\n\tmonth(input : number) : Dayuts\r\n\tmonth(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$M\r\n\t\treturn this.set(M, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置星期几。\r\n\t * @param {number | null} [input] - 要设置的星期几（0-6）。\r\n\t * @returns {number | Dayuts} 星期几或 Dayuts 实例。\r\n\t */\r\n\tday() : number\r\n\tday(input : number) : Dayuts\r\n\tday(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$W\r\n\t\treturn this.set(D, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置月份中的某一天。\r\n\t * @param {number | null} [input] - 要设置的月份中的某一天（1-31）。\r\n\t * @returns {number | Dayuts} 月份中的某一天或 Dayuts 实例。\r\n\t */\r\n\tdate() : number\r\n\tdate(input : number) : Dayuts\r\n\tdate(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$D\r\n\t\treturn this.set(DATE, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置小时。\r\n\t * @param {number | null} [input] - 要设置的小时（0-23）。\r\n\t * @returns {number | Dayuts} 小时或 Dayuts 实例。\r\n\t */\r\n\thour() : number\r\n\thour(input : number) : Dayuts\r\n\thour(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$H\r\n\t\treturn this.set(H, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置分钟。\r\n\t * @param {number | null} [input] - 要设置的分钟（0-59）。\r\n\t * @returns {number | Dayuts} 分钟或 Dayuts 实例。\r\n\t */\r\n\tminute() : number\r\n\tminute(input : number) : Dayuts\r\n\tminute(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$m\r\n\t\treturn this.set(MIN, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置秒。\r\n\t * @param {number | null} [input] - 要设置的秒（0-59）。\r\n\t * @returns {number | Dayuts} 秒或 Dayuts 实例。\r\n\t */\r\n\tsecond() : number\r\n\tsecond(input : number) : Dayuts\r\n\tsecond(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$s\r\n\t\treturn this.set(S, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置毫秒。\r\n\t * @param {number | null} [input] - 要设置的毫秒（0-999）。\r\n\t * @returns {number | Dayuts} 毫秒或 Dayuts 实例。\r\n\t */\r\n\tmillisecond() : number\r\n\tmillisecond(input : number) : Dayuts\r\n\tmillisecond(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$ms\r\n\t\treturn this.set(MS, input)\r\n\t}\r\n\r\n\t/**\r\n\t * 在当前 Dayuts 实例上添加指定的时间长度。\r\n\t * @param {number} number - 要添加的时间长度。\r\n\t * @param {string} units - 要添加的时间单位（例如，“years”，“months”，“days”等）。\r\n\t * @returns {Dayuts} 更新的 Dayuts 实例。\r\n\t */\r\n\tadd(number : number, units : DayutsUnit) : Dayuts {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// 创建一个新的 Dayuts 实例，并根据给定的 n 值设置日期。\r\n\t\t// n 值乘以 number 参数，然后加到当前日期上，以设置新的日期。\r\n\t\tconst instanceFactorySet = (n : number) : Dayuts => {\r\n\t\t\t// 创建一个新的 Dayuts 实例，它是当前实例的副本\r\n\t\t\tconst d = dayuts(this)\r\n\t\t\t// 设置新的日期并返回更新后的 Dayuts 实例\r\n\t\t\treturn d.date(d.date() + Math.round(n * number)) //Utils.w(d.date(d.date() + Math.round(n * number)), this)\r\n\t\t}\r\n\t\tif (unit == M) {\r\n\t\t\treturn this.set(M, this.$M + number)\r\n\t\t}\r\n\t\tif (unit == Y) {\r\n\t\t\treturn this.set(Y, this.$y + number)\r\n\t\t}\r\n\t\tif (unit == D) {\r\n\t\t\treturn instanceFactorySet(1)\r\n\t\t}\r\n\t\tif (unit == W) {\r\n\t\t\treturn instanceFactorySet(7)\r\n\t\t}\r\n\r\n\t\tconst steps = new Map<string, number>([\r\n\t\t\t[MIN, MILLISECONDS_A_MINUTE],\r\n\t\t\t[H, MILLISECONDS_A_HOUR],\r\n\t\t\t[S, MILLISECONDS_A_SECOND],\r\n\t\t])\r\n\t\tconst step = steps.get(unit) ?? 1;\r\n\t\tconst nextTimeStamp = this.$d.getTime() + (number * step)\r\n\t\treturn wrapper(nextTimeStamp, this)\r\n\t}\r\n\t/**\r\n\t * 从当前 Dayuts 实例中减去指定的时间。\r\n\t * @param {number} number - 要减去的时间。\r\n\t * @param {string} units - 要减去的时间单位（例如，“years”，“months”，“days”等）。\r\n\t * @returns {Dayuts} 更新的 Dayuts 实例。\r\n\t */\r\n\tsubtract(number : number, units : DayutsUnit) : Dayuts {\r\n\t\t// 通过将 number 乘以 -1，然后调用 add 方法来实现减法操作\r\n\t\treturn this.add(number * -1, units);\r\n\t}\r\n\t/**\r\n\t * 日期格式化\r\n\t * @param {string} formatStr - 格式化字符串，包含各种格式化占位符（例如，“YYYY-MM-DD”，“HH:mm:ss”等）。\r\n\t * @returns {string} 格式化后的日期字符串。\r\n\t */\r\n\tformat(formatStr : string | null = null) : string {\r\n\t\tconst locale = this.$locale();\r\n\t\tif (!this.isValid()) return INVALID_DATE_STRING // locale.invalidDate || INVALID_DATE_STRING;\r\n\r\n\t\tconst str = formatStr ?? FORMAT_DEFAULT;\r\n\t\t// @ts-ignore\r\n\t\tconst zoneStr = padZoneStr(this);\r\n\t\tconst { $H, $m, $M } = this;\r\n\t\tconst { weekdays, months, meridiem } = locale;\r\n\t\t/**\r\n\t\t * 从给定的数组中获取缩写或完整的字符串。\r\n\t\t * @param {Array} arr - 包含缩写字符串的数组。\r\n\t\t * @param {number} index - 数组中要获取的元素的索引。\r\n\t\t * @param {Array} full - 包含完整字符串的数组。\r\n\t\t * @param {number} length - 要返回的字符串的长度。\r\n\t\t * @returns {string} 缩写或完整的字符串。\r\n\t\t */\r\n\t\tfunction getShort(arr : string[] | null, index : number, full : string[] = [], length : number = 0) : string {\r\n\t\t\tif (arr != null && arr.length >= index) {\r\n\t\t\t\treturn arr[index]\r\n\t\t\t} else if (full.length >= index) {\r\n\t\t\t\treturn full[index].slice(0, length)\r\n\t\t\t}\r\n\t\t\treturn ''\r\n\t\t};\r\n\t\t/**\r\n\t\t * 获取12小时制的小时数。\r\n\t\t * @param {number} num - 小时数的位数。\r\n\t\t * @returns {string} 12小时制的小时数字符串。\r\n\t\t */\r\n\t\tconst get$H = (num : number) : string => padStart(($H % 12 == 0 ? 12 : $H % 12).toString(), num, '0')\r\n\t\t/**\r\n\t\t * 获取上午或下午的字符串表示。\r\n\t\t * @param {number} hour - 小时数。\r\n\t\t * @param {number} minute - 分钟数。\r\n\t\t * @param {boolean} isLowercase - 是否返回小写字符串。\r\n\t\t * @returns {string} 上午或下午的字符串表示。\r\n\t\t */\r\n\t\tconst meridiemFunc = meridiem ?? ((hour : number, _ : number, isLowercase : boolean) : string => {\r\n\t\t\tconst m = (hour < 12 ? 'AM' : 'PM');\r\n\t\t\treturn isLowercase ? m.toLowerCase() : m;\r\n\t\t});\r\n\t\t// #ifdef APP-ANDROID\r\n\t\treturn str.replace('YYYY', padStart(this.$y.toString(), 4, '0'))\r\n\t\t\t.replace('YY', (this.$y).toString().slice(-2))\r\n\t\t\t.replace('MMMM', getShort(months, $M))\r\n\t\t\t.replace('MM', padStart(($M + 1).toString(), 2, '0'))\r\n\t\t\t.replace('M', ($M + 1).toString())\r\n\t\t\t.replace('DD', padStart(this.$D.toString(), 2, '0'))\r\n\t\t\t.replace('D', this.$D.toString())\r\n\t\t\t.replace('dddd', weekdays[this.$W])\r\n\t\t\t.replace('ddd', getShort(locale.weekdaysShort, this.$W, weekdays, 3))\r\n\t\t\t.replace('dd', getShort(locale.weekdaysMin, this.$W, weekdays, 2))\r\n\t\t\t.replace('d', this.$W.toString())\r\n\t\t\t.replace('HH', padStart($H.toString(), 2, '0'))\r\n\t\t\t.replace('H', $H.toString())\r\n\t\t\t.replace('hh', get$H(2))\r\n\t\t\t.replace('h', get$H(1))\r\n\t\t\t.replace('mm', padStart($m.toString(), 2, '0'))\r\n\t\t\t.replace('m', $m.toString())\r\n\t\t\t.replace('ss', padStart(this.$s.toString(), 2, '0'))\r\n\t\t\t.replace('s', this.$s.toString())\r\n\t\t\t.replace('SSS', padStart(this.$ms.toString(), 3, '0'))\r\n\t\t\t.replace('A', meridiemFunc($H, $m, false))\r\n\t\t\t.replace('a', meridiemFunc($H, $m, true))\r\n\t\t\t.replace('Z', zoneStr)\r\n\t\t// #endif\r\n\t\t// #ifndef APP-ANDROID\r\n\t\tconst matches = (match : string) : string | null => {\r\n\t\t\tif (match == 'YY') {\r\n\t\t\t\treturn (this.$y).toString().slice(-2);\r\n\t\t\t} else if (match == 'YYYY') {\r\n\t\t\t\treturn padStart(this.$y.toString(), 4, '0');\r\n\t\t\t} else if (match == 'M') {\r\n\t\t\t\treturn ($M + 1).toString();\r\n\t\t\t} else if (match == 'MM') {\r\n\t\t\t\treturn padStart(($M + 1).toString(), 2, '0');\r\n\t\t\t} else if (match == 'MMM') {\r\n\t\t\t\treturn getShort(locale.monthsShort, $M, months, 3);\r\n\t\t\t} else if (match == 'MMMM') {\r\n\t\t\t\treturn getShort(months, $M);\r\n\t\t\t} else if (match == 'D') {\r\n\t\t\t\treturn this.$D.toString();\r\n\t\t\t} else if (match == 'DD') {\r\n\t\t\t\treturn padStart(this.$D.toString(), 2, '0');\r\n\t\t\t} else if (match == 'd') {\r\n\t\t\t\treturn this.$W.toString();\r\n\t\t\t} else if (match == 'dd') {\r\n\t\t\t\treturn getShort(locale.weekdaysMin, this.$W, weekdays, 2);\r\n\t\t\t} else if (match == 'ddd') {\r\n\t\t\t\treturn getShort(locale.weekdaysShort, this.$W, weekdays, 3);\r\n\t\t\t} else if (match == 'dddd') {\r\n\t\t\t\treturn weekdays[this.$W];\r\n\t\t\t} else if (match == 'H') {\r\n\t\t\t\treturn $H.toString();\r\n\t\t\t} else if (match == 'HH') {\r\n\t\t\t\treturn padStart($H.toString(), 2, '0');\r\n\t\t\t} else if (match == 'h') {\r\n\t\t\t\treturn get$H(1);\r\n\t\t\t} else if (match == 'hh') {\r\n\t\t\t\treturn get$H(2);\r\n\t\t\t} else if (match == 'a') {\r\n\t\t\t\treturn meridiemFunc($H, $m, true);\r\n\t\t\t} else if (match == 'A') {\r\n\t\t\t\treturn meridiemFunc($H, $m, false);\r\n\t\t\t} else if (match == 'm') {\r\n\t\t\t\treturn $m.toString();\r\n\t\t\t} else if (match == 'mm') {\r\n\t\t\t\treturn padStart($m.toString(), 2, '0');\r\n\t\t\t} else if (match == 's') {\r\n\t\t\t\treturn this.$s.toString();\r\n\t\t\t} else if (match == 'ss') {\r\n\t\t\t\treturn padStart(this.$s.toString(), 2, '0');\r\n\t\t\t} else if (match == 'SSS') {\r\n\t\t\t\treturn padStart(this.$ms.toString(), 3, '0');\r\n\t\t\t} else if (match == 'Z') {\r\n\t\t\t\treturn zoneStr; // 'ZZ' logic below\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\treturn str.replace(REGEX_FORMAT, (match : string, $1 : string, offset : number, string : string) : string => {\r\n\t\t\treturn $1 ?? matches(match) ?? zoneStr.replace(':', '')\r\n\t\t})\r\n\t\t// #endif\r\n\t}\r\n\t/**\r\n\t * 获取 Dayuts 实例的 UTC 偏移量（以分钟为单位）。\r\n\t * @returns {number} UTC 偏移量（以分钟为单位）。\r\n\t */\r\n\tutcOffset() : number {\r\n\t\t// Because a bug at FF24, we're rounding the timezone offset around 15 minutes\r\n\t\t// https://github.com/moment/moment/pull/1871\r\n\t\t// #ifndef APP-ANDROID || APP-IOS\r\n\t\treturn -Math.round(this.$d.getTimezoneOffset() / 15) * 15\r\n\t\t// #endif\r\n\t\t// #ifdef APP-ANDROID || APP-IOS\r\n\t\treturn 0\r\n\t\t// #endif\r\n\t}\r\n\t/**\r\n\t * 计算两个日期之间的差值\r\n\t * @param {string|number|Date|Dayuts} input - 要比较的日期\r\n\t * @param {string} units - 要计算的时间单位，如 'years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'\r\n\t * @param {boolean} float - 是否返回浮点数结果\r\n\t * @returns {number} 返回两个日期之间的差值\r\n\t */\r\n\tdiff(input : string) : number\r\n\tdiff(input : number) : number\r\n\tdiff(input : Date) : number\r\n\tdiff(input : Dayuts) : number\r\n\tdiff(input : UTSJSONObject) : number\r\n\r\n\tdiff(input : string, units : DayutsUnit) : number\r\n\tdiff(input : number, units : DayutsUnit) : number\r\n\tdiff(input : Date, units : DayutsUnit) : number\r\n\tdiff(input : Dayuts, units : DayutsUnit) : number\r\n\tdiff(input : UTSJSONObject, units : DayutsUnit) : number\r\n\r\n\tdiff(input : string, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : number, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : Date, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : Dayuts, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : UTSJSONObject, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : any, units : DayutsUnit = 'millisecond', float : boolean = false) : number {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\tconst that = dayuts(input)\r\n\t\tconst zoneDelta = (that.utcOffset() - this.utcOffset()) * MILLISECONDS_A_MINUTE\r\n\t\tconst diff = this.valueOf() - that.valueOf()\r\n\t\t// @ts-ignore\r\n\t\tconst getMonth = () : number => monthDiff(this, that)\r\n\t\tlet result : number;\r\n\t\tswitch (unit) {\r\n\t\t\tcase Y:\r\n\t\t\t\tresult = getMonth() / 12\r\n\t\t\t\tbreak\r\n\t\t\tcase M:\r\n\t\t\t\tresult = getMonth()\r\n\t\t\t\tbreak\r\n\t\t\tcase Q:\r\n\t\t\t\tresult = getMonth() / 3\r\n\t\t\t\tbreak\r\n\t\t\tcase W:\r\n\t\t\t\tresult = (diff - zoneDelta) / MILLISECONDS_A_WEEK\r\n\t\t\t\tbreak\r\n\t\t\tcase D:\r\n\t\t\t\tresult = (diff - zoneDelta) / MILLISECONDS_A_DAY\r\n\t\t\t\tbreak\r\n\t\t\tcase H:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_HOUR\r\n\t\t\t\tbreak\r\n\t\t\tcase MIN:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_MINUTE\r\n\t\t\t\tbreak\r\n\t\t\tcase S:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_SECOND\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tresult = diff // milliseconds\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn float ? result : absFloor(result)\r\n\t}\r\n\t/**\r\n\t * 将当前 Dayuts 对象转换为原生 Date 对象。\r\n\t *\r\n\t * @returns {Date} 返回一个表示当前日期的原生 Date 对象。\r\n\t */\r\n\ttoDate() : Date {\r\n\t\treturn new Date(this.valueOf())\r\n\t}\r\n\t/**\r\n\t * 将 Moment 对象转换为 JSON 字符串\r\n\t * @returns {string | null} 如果 Moment 对象有效，则返回 ISO 8601 格式的字符串，否则返回 null\r\n\t */\r\n\ttoJSON() : string | null {\r\n\t\treturn this.isValid() ? this.toISOString() : null;\r\n\t}\r\n\t/**\r\n\t * 将 Moment 对象转换为 ISO 8601 格式的字符串\r\n\t * @returns {string} 返回 ISO 8601 格式的字符串\r\n\t */\r\n\ttoISOString() : string {\r\n\t\t// #ifndef APP-ANDROID || APP-IOS\r\n\t\treturn this.$d.toISOString();\r\n\t\t// #endif\r\n\t\t// #ifdef APP-ANDROID || APP-IOS\r\n\t\treturn this.$d.toString();\r\n\t\t// #endif\r\n\t}\r\n\ttoObject() : DayutsObject {\r\n\t\treturn {\r\n\t\t\tyears: this.$y,\r\n\t\t\tmonths: this.$M,\r\n\t\t\tdate: this.$D,\r\n\t\t\thours: this.$H,\r\n\t\t\tminutes: this.$m,\r\n\t\t\tseconds: this.$s,\r\n\t\t\tmilliseconds: this.$ms\r\n\t\t} as DayutsObject\r\n\t}\r\n\ttoArray() : number[] {\r\n\t\treturn [\r\n\t\t\tthis.$y,\r\n\t\t\tthis.$M,\r\n\t\t\tthis.$D,\r\n\t\t\tthis.$H,\r\n\t\t\tthis.$m,\r\n\t\t\tthis.$s,\r\n\t\t\tthis.$ms\r\n\t\t]\r\n\t}\r\n\t/**\r\n\t * 获取当前日期的毫秒数。\r\n\t *\r\n\t * @returns {number} 返回一个表示当前日期的毫秒数。\r\n\t */\r\n\tvalueOf() : number {\r\n\t\t// 使用 Date 对象的 getTime 方法获取当前日期的毫秒数。\r\n\t\treturn this.$d.getTime()\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象所在月份的天数。\r\n\t *\r\n\t * @returns {number} 返回当前 `dayuts` 对象所在月份的天数。\r\n\t */\r\n\tdaysInMonth() : number {\r\n\t\treturn this.endOf(M).$D;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前日期的区域设置对象。\r\n\t *\r\n\t * @returns {Object} 区域设置对象。\r\n\t */\r\n\tprivate $locale() : DayutsLocale { // get locale object\r\n\t\t// return Ls.get(this.$L)!\r\n\t\treturn localeState.locales.get(this.$L)!\r\n\t}\r\n\t/**\r\n\t * 设置或获取 Dayuts 实例的本地化配置\r\n\t * @param {string|Object} preset - 本地化预设名称或自定义本地化配置对象\r\n\t * @param {Object} [DayutsLocale] - 可选的自定义本地化配置对象\r\n\t * @returns {Dayuts|string} 如果设置了本地化配置，则返回一个新的 Dayuts 实例；否则返回当前实例的本地化配置名称\r\n\t */\r\n\tlocale(preset : string, object : DayutsLocale) : Dayuts\r\n\tlocale(preset : DayutsLocale, object : DayutsLocale) : Dayuts\r\n\tlocale(preset : any, object : DayutsLocale | null = null) : Dayuts {\r\n\t\t// if (!preset) return this.$L\r\n\t\tconst that = this.clone()\r\n\t\tconst nextLocaleName = parseLocale(preset, object, true)\r\n\t\tif (nextLocaleName != null) that.$L = nextLocaleName\r\n\t\treturn that\r\n\t}\r\n\tclone() : Dayuts {\r\n\t\treturn wrapper(this.$d.getTime(), this)\r\n\t}\r\n\t/**\r\n\t * 返回当前 dayuts 对象的 UTC 字符串表示。\r\n\t *\r\n\t * @returns {string} 当前 dayuts 对象的 UTC 字符串表示。\r\n\t */\r\n\t// #ifdef APP-ANDROID\r\n\toverride toString() : string {\r\n\t\t// return this.$d.toUTCString();\r\n\t\t// const locale = localeState.locales.get('en')!\r\n\t\t// const weekday = locale.weekdays[this.$d.getDay()].substring(0,3);\r\n\t\t// const month = locale.months[this.$d.getMonth()].substring(0,3)\r\n\t\t// const day = `${this.$D}`.padStart(2, '0');\r\n\t\t// const hours = `${this.$H}`.padStart(2, '0');\r\n\t\t// const minutes = `${this.$m}`.padStart(2, '0');\r\n\t\t// const seconds = `${this.$s}`.padStart(2, '0');\r\n\t\t// return `${weekday}, ${day} ${month} ${this.$y} ${hours}:${minutes}:${seconds} GMT`;\r\n\t\treturn this.$d.toString();\r\n\t}\r\n\t// #endif\r\n\t// #ifndef APP-ANDROID\r\n\ttoString() : string {\r\n\t\t// return this.$d.toUTCString();\r\n\t\treturn this.$d.toString();\r\n\t}\r\n\t// #endif\r\n\t/**\r\n\t * 计算给定日期在当年的第几天，或者设置给定日期为当年的第几天。\r\n\t * @param {number} [input] - 如果提供了输入值，则将日期设置为当年的第几天。如果没有提供输入值，则返回当前日期在当年的第几天。\r\n\t * @returns {number} 如果提供了输入值，则返回调整后的日期。如果没有提供输入值，则返回当前日期在当年的第几天。\r\n\t */\r\n\tdayOfYear() : number\r\n\tdayOfYear(input : number) : Dayuts\r\n\tdayOfYear(input : number | null = null) : any {\r\n\t\tconst dayOfYear = Math.round((this.startOf('day').valueOf() - this.startOf('year').valueOf()) / 864e5) + 1\r\n\t\treturn input == null ? dayOfYear : this.add(input - dayOfYear, 'day')\r\n\t}\r\n\t/**\r\n\t * 根据输入的时间计算与当前时间的相对时间差，并以指定的格式返回。\r\n\t * @param {Date|number|string} input - 输入的时间，可以是Date对象、时间戳或符合Date.parse()方法的字符串\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀\r\n\t * @param {Object} instance - 当前时间的实例\r\n\t * @param {boolean} isFrom - 是否从输入时间计算到当前时间\r\n\t * @param {Function} postFormat - 格式化绝对值后的结果的函数\r\n\t * @returns {string} 相对时间差的格式化字符串\r\n\t */\r\n\t// postFormat\r\n\tfromToBase(input : string, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : number, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : Date, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : Dayuts, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : UTSJSONObject, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : any, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string {\r\n\t\tconst relObj = localeState.locales.get('en')?.relativeTime\r\n\t\tconst loc = instance.$locale().relativeTime ?? relObj\r\n\t\tif (loc == null) return '';\r\n\t\tconst T : Threshold[] = [\r\n\t\t\t{ l: 's', r: 44, d: S },\r\n\t\t\t{ l: 'm', r: 89 },\r\n\t\t\t{ l: 'mm', r: 44, d: MIN },\r\n\t\t\t{ l: 'h', r: 89 },\r\n\t\t\t{ l: 'hh', r: 21, d: H },\r\n\t\t\t{ l: 'd', r: 35 },\r\n\t\t\t{ l: 'dd', r: 25, d: D },\r\n\t\t\t{ l: 'M', r: 45 },\r\n\t\t\t{ l: 'MM', r: 10, d: M },\r\n\t\t\t{ l: 'y', r: 17 },\r\n\t\t\t{ l: 'yy', d: Y }\r\n\t\t]\r\n\t\tconst Tl = T.length\r\n\t\tlet result : number = 0;\r\n\t\tlet out : string = '';\r\n\t\tlet isFuture : boolean = false\r\n\t\tfor (let i = 0; i < Tl; i += 1) {\r\n\t\t\tlet t = T[i]\r\n\t\t\tif (t.d != null) {\r\n\t\t\t\tresult = isFrom\r\n\t\t\t\t\t? dayuts(input).diff(instance, t.d!, true)\r\n\t\t\t\t\t: instance.diff(input, t.d!, true)\r\n\t\t\t}\r\n\t\t\tlet abs = Math.round(Math.abs(result))\r\n\t\t\tisFuture = result > 0\r\n\t\t\tif (t.r == null || t.r != null && abs <= t.r!) {\r\n\t\t\t\tif (abs <= 1 && i > 0) t = T[i - 1] // 1 minutes -> a minute, 0 seconds -> 0 second\r\n\t\t\t\tconst format = loc[t.l]\r\n\t\t\t\t// if (postFormat) {\r\n\t\t\t\t// \tabs = postFormat(`${abs}`)\r\n\t\t\t\t// }\r\n\t\t\t\tif (typeof format == 'string') {\r\n\t\t\t\t\tout = (format as string).replace('%d', abs.toString())\r\n\t\t\t\t}\r\n\t\t\t\t// else {\r\n\t\t\t\t// \tout = format(abs, withoutSuffix, t.l!, isFuture)\r\n\t\t\t\t// }\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (withoutSuffix) return out\r\n\t\tconst pastOrFuture = isFuture ? loc.future : loc.past\r\n\t\t// if (typeof pastOrFuture == 'function') {\r\n\t\t// \treturn pastOrFuture(out)\r\n\t\t// }\r\n\t\treturn pastOrFuture.replace('%s', out)\r\n\t}\r\n\t/**\r\n\t * 相对指定时间(后)。\r\n\t * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tto(input : string) : string\r\n\tto(input : number) : string\r\n\tto(input : Date) : string\r\n\tto(input : Dayuts) : string\r\n\tto(input : UTSJSONObject) : string\r\n\r\n\tto(input : string, withoutSuffix : boolean) : string\r\n\tto(input : number, withoutSuffix : boolean) : string\r\n\tto(input : Date, withoutSuffix : boolean) : string\r\n\tto(input : Dayuts, withoutSuffix : boolean) : string\r\n\tto(input : UTSJSONObject, withoutSuffix : boolean) : string\r\n\tto(input : any, withoutSuffix : boolean = false) : string {\r\n\t\treturn this.fromToBase(input, withoutSuffix, this, true)\r\n\t}\r\n\t/**\r\n\t * 将当前时间转换为与输入时间的相对时间差，并以指定的格式返回。\r\n\t * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tfrom(input : string) : string\r\n\tfrom(input : number) : string\r\n\tfrom(input : Date) : string\r\n\tfrom(input : Dayuts) : string\r\n\tfrom(input : UTSJSONObject) : string\r\n\r\n\tfrom(input : string, withoutSuffix : boolean) : string\r\n\tfrom(input : number, withoutSuffix : boolean) : string\r\n\tfrom(input : Date, withoutSuffix : boolean) : string\r\n\tfrom(input : Dayuts, withoutSuffix : boolean) : string\r\n\tfrom(input : UTSJSONObject, withoutSuffix : boolean) : string\r\n\tfrom(input : any, withoutSuffix : boolean = false) : string {\r\n\t\treturn this.fromToBase(input, withoutSuffix, this, false)\r\n\t}\r\n\t/**\r\n\t * 获取当前时间与实例时间的相对时间差，并以指定的格式返回。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\ttoNow() : string\r\n\ttoNow(withoutSuffix : boolean = false) : string {\r\n\t\treturn this.to(dayuts(), withoutSuffix)\r\n\t}\r\n\t/**\r\n\t * 获取实例时间与当前时间的相对时间差，并以指定的格式返回。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tfromNow() : string\r\n\tfromNow(withoutSuffix : boolean = false) : string {\r\n\t\treturn this.from(dayuts(), withoutSuffix)\r\n\t}\r\n}\r\n\r\nfunction dayuts() : Dayuts;\r\nfunction dayuts(date : string) : Dayuts;\r\nfunction dayuts(date : any[]) : Dayuts;\r\nfunction dayuts(date : number) : Dayuts;\r\nfunction dayuts(date : UTSJSONObject) : Dayuts;\r\nfunction dayuts(date : Date) : Dayuts;\r\nfunction dayuts(date : Dayuts) : Dayuts;\r\n// #ifndef APP-ANDROID || APP-IOS\r\nfunction dayuts(date : any | null, format : string) : Dayuts;\r\nfunction dayuts(date : any | null, format : string | null, locale : string | null) : Dayuts;\r\n// #endif\r\nfunction dayuts(date : any | null = null, format : string | null = null, locale : string | null = null) : Dayuts {\r\n\tif (date != null && date instanceof Dayuts) return date.clone()\r\n\treturn new Dayuts({\r\n\t\tdate,\r\n\t\tformat,\r\n\t\tlocale\r\n\t} as DayutsConfig)\r\n}\r\n\r\n/**\r\n * 判断给定的对象是否为Dayuts实例\r\n * @param {(any | null)} date - 输入的对象\r\n * @returns {boolean} - 如果给定的对象是Dayuts实例，则返回true，否则返回false\r\n */\r\nfunction isDayuts(date : any | null = null) : boolean {\r\n\treturn date instanceof Dayuts\r\n}\r\n\r\nexport {\r\n\tdayuts,\r\n\tisDayuts\r\n}","<template>\n\t<view class=\"container\">\n\t\t<view class=\"vedio-box\">\n\t\t\t<video class=\"video\" id=\"myVideo\" :src=\"videoSrc\" ref=\"videoRef\" :controls=\"true\" :show-play-btn=\"true\"\n\t\t\t\t:show-center-play-btn=\"true\" :enable-progress-gesture=\"true\" :show-fullscreen-btn=\"true\"\n\t\t\t\t:show-mute-btn=\"true\" :title=\"testTitle\"></video>\n\t\t\t\t<view></view>\n\t\t</view>\n\t\t<button @click=\"playVideo\">播放视频</button>\n\t\t<button @click=\"pasueVideo\">暂停视频</button>\n\t\t<view class=\"content-box\">\n\t\t\t<view class=\"sub-nav\">\n\t\t\t\t<view class=\"today\" @click=\"ShowCalendar\">\n\t\t\t\t\t<text>{{today}}</text>\n\t\t\t\t\t<image class=\"down\" src=\"/static/down.png\" />\n\t\t\t\t\t<text> | </text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"select\">\n\t\t\t\t\t<text v-for=\"(tab, index) in tabs\" :key=\"index\" class=\"select-item\"\n\t\t\t\t\t\t:class=\"{ active: activeTab === index }\" @click=\"changeTab(index)\">\n\t\t\t\t\t\t{{ tab.label }}\n\t\t\t\t\t</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<view class=\"tab-content\">\n\t\t\t\t<view v-for=\"(event, index) in getFilteredEvents()\" :key=\"index\" class=\"tab-pane\">\n\t\t\t\t\t<view class=\"item-content\">\n\t\t\t\t\t\t<image class=\"item-icon\" mode=\"aspectFit\"\n\t\t\t\t\t\t\t:src=\"event.type === 'human' ? '/static/people.png' : '/static/mobile.png'\" />\n\t\t\t\t\t\t<view class=\"info\">\n\t\t\t\t\t\t\t<text>{{ event.type === 'human' ? '人形侦测' : '移动侦测' }}</text>\n\t\t\t\t\t\t\t<text>{{ event.time }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<image class=\"item-img\" mode=\"aspectFit\" src=\"/static/vedio.png\" />\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t<view class=\"calendar-box\" v-if=\"showCalendar\">\n\t\t\t<l-daily-punch :signedDates=\"checkIns\" @select=\"select\" @panelChange=\"change\"\n\t\t\t\t:dayHeight=\"60\"></l-daily-punch>\n\t\t\t<button class=\"btn-chanel-box\" @click=\"hideCalendar\">\n\t\t\t\t取消\n\t\t\t</button>\n\t\t</view>\n\t</view>\n</template>\n\n<script lang=\"uts\" setup>\n\timport { ref, onMounted, computed } from 'vue'\n\timport { dayuts } from '@/uni_modules/lime-dayuts';\n\timport { LDay, LYearMonth } from '@/uni_modules/lime-daily-punch'\n\tconst checkIns = ref(['2025-06-09', '2025-07-01', '2025-07-02'])\n\tconst today = ref(dayuts().format('MM-DD'))\n\tconst showCalendar = ref<boolean>(false)\n\tconst videoSrc = \"https://qiniu-web-assets.dcloud.net.cn/video/sample/2minute-demo.mp4\"\n\tconst activeTab = ref(0)\n\tconst testTitle = ref('测试标题')\n\n\tconst videoRef = ref(null);\n\n\tconst playVideo = () => {\n\n\t\tvideoRef.value.play()\n\n\t\tuni.createVideoContext('myVideo')!!.play();\n\t};\n\t\n\tconst pasueVideo = () =>{\n\n\t\tvideoRef.value.pause()\n\n\t\tuni.createVideoContext('myVideo')!!.pause();\n\t}\n\n\t//构造函数的方式来定义event时间类型\n\tclass SecurityEvent {\n\t\tid : number;\n\t\ttype : string;\n\t\ttime : string;\n\t\tlocation : string;\n\n\t\tconstructor(id : number, type : string, time : string, location : string) {\n\t\t\tthis.id = id;\n\t\t\tthis.type = type;\n\t\t\tthis.time = time;\n\t\t\tthis.location = location;\n\t\t}\n\t}\n\n\t//定义tab标签的类型\n\tclass Tab {\n\t\tlabel : string;\n\t\ttype : string;\n\n\t\tconstructor(label : string, type : string) {\n\t\t\tthis.label = label;\n\t\t\tthis.type = type;\n\t\t}\n\t}\n\n\tconst tabs = ref<Tab[]>([\n\t\t{ label: '全部类型', type: 'all' },\n\t\t{ label: '人形侦测', type: 'human' },\n\t\t{ label: '移动侦测', type: 'motion' }\n\t])\n\n\tconst events = ref<SecurityEvent[]>([\n\t\tnew SecurityEvent(1, 'human', '15:29', '前门走廊'),\n\t\tnew SecurityEvent(2, 'motion', '14:45', '车库入口'),\n\t\tnew SecurityEvent(3, 'human', '13:20', '后花园'),\n\t\tnew SecurityEvent(4, 'motion', '11:05', '侧门通道')\n\t])\n\n\t//执行筛选数据的方法\n\tconst getFilteredEvents = () : SecurityEvent[] => {\n\t\tif (activeTab.value == 0) return [...events.value];\n\t\tconst selectedType = tabs.value[activeTab.value].type;\n\t\treturn events.value.filter(event => event.type === selectedType);\n\t}\n\n\t//切换tab\n\tconst changeTab = (index : number) => {\n\t\tactiveTab.value = index\n\t}\n\n\t//选择日期\n\tconst select = (day : LDay) => {\n\t\ttoday.value = dayuts(day.fullDate).format('MM-DD')\n\t\tuni.__log__('log','at pages/message/message.uvue:130',today.value)\n\t\tif (day.isToday) {\n\t\t\tuni.__log__('log','at pages/message/message.uvue:132','今天')\n\t\t}\n\t\tshowCalendar.value = false\n\t}\n\n\tconst change = (res : LYearMonth) => {\n\t\tuni.__log__('log','at pages/message/message.uvue:138','res', res)\n\t}\n\n\tconst ShowCalendar = () => {\n\t\tshowCalendar.value = !showCalendar.value\n\t}\n\n\tconst hideCalendar = () => {\n\t\tshowCalendar.value = false\n\t}\n</script>\n\n\n\n<style lang=\"scss\" scoped>\n\t.container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: relative;\n\t\tbackground-color: #f3f3f3;\n\n\t\t.vedio-box {\n\t\t\twidth: 100%;\n\n\t\t\t.video {\n\t\t\t\t@extend .vedio-box\n\t\t\t}\n\t\t}\n\n\t\t.content-box {\n\t\t\tpadding: 30rpx 20rpx;\n\n\t\t\t.sub-nav {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t\talign-items: center;\n\n\t\t\t\t.today {\n\t\t\t\t\twidth: 120rpx;\n\t\t\t\t\t@extend .sub-nav;\n\t\t\t\t\talign-items: center;\n\n\t\t\t\t\t.down {\n\t\t\t\t\t\twidth: 25rpx;\n\t\t\t\t\t\theight: 25rpx;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.select {\n\t\t\t\t\t@extend .sub-nav;\n\t\t\t\t\tmargin-left: 10rpx;\n\n\t\t\t\t\t.select-item {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\t\tcolor: #333;\n\t\t\t\t\t\tpadding: 10rpx 20rpx;\n\t\t\t\t\t\tborder-radius: 5rpx;\n\t\t\t\t\t\tmargin: 0 5rpx;\n\t\t\t\t\t}\n\n\t\t\t\t\t.active {\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tbackground-color: #1296db;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.tab-content {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tmargin-top: 20rpx;\n\n\t\t\t\t.tab-pane {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: row;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tbackground-color: #fff;\n\t\t\t\t\tborder-radius: 20rpx;\n\t\t\t\t\tpadding: 20rpx;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmargin-bottom: 30rpx;\n\n\t\t\t\t\t.item-content {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tflex-direction: row;\n\t\t\t\t\t\talign-items: center;\n\n\t\t\t\t\t\t.item-icon {\n\t\t\t\t\t\t\twidth: 60rpx;\n\t\t\t\t\t\t\theight: 60rpx;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.info {\n\t\t\t\t\t\t\tmargin-left: 20rpx;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.item-img {\n\t\t\t\t\t\twidth: 100rpx;\n\t\t\t\t\t\theight: 60rpx\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\n\t\t.calendar-box {\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\n\n\n\n\t\t\theight: 60%;\n\n\t\t\twidth: 100%;\n\t\t\tbackground-color: #fff;\n\n\t\t\t.btn-chanel-box {\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: 85%;\n\t\t\t\tbottom: 45rpx;\n\t\t\t\tleft: 60rpx;\n\t\t\t\tborder-radius: 50rpx;\n\t\t\t}\n\t\t}\n\t}\n</style>","export default \"__VITE_ASSET__1f763d97__\"","export default \"__VITE_ASSET__a7deb1d1__\"","<template>\r\n\t<view class=\"container\">\r\n\t\t<view class=\"files\">\r\n\t\t\t<view class=\"file\">\r\n\t\t\t\t<image class=\"fileIcon\" src=\"/static/mine/local.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t<text class=\"file-text\">本地文件</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"file\">\r\n\t\t\t\t<image class=\"fileIcon\" src=\"/static/mine/cloud.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t<text class=\"file-text\">永久备份</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"file\">\r\n\t\t\t\t<image class=\"fileIcon\" src=\"/static/mine/msgList.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t<text class=\"file-text\">消息列表</text>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"tools-list\">\r\n\t\t\t<view class=\"item\" @click=\"userInfo\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/user.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">个人信息</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/liuliang.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">流量充值</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/order.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">我的订单</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/quetion.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">常见问题</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/online.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">在线客服</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/advice.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">意见反馈</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/setting.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">设置</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"item no-bottom\">\r\n\t\t\t\t<view class=\"info\">\r\n\t\t\t\t\t<image class=\"item-icon\" src=\"/static/mine/about.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t\t<text class=\"item-text\">关于</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view>\r\n\t\t\t\t\t<image class=\"right-icon\" src=\"/static/mine/right.png\" mode=\"aspectFit\"></image>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\n\t\r\n\tconst userInfo = () => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: '/pages/mine/userInfo/userInfo'\r\n\t\t})\r\n\t}\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.container {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tpadding: 0 20rpx;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #f1f1f1;\r\n\r\n\t\t.files {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: center;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100rpx;\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tborder-radius: 15rpx;\r\n\t\t\tpadding: 70rpx 80rpx;\r\n\t\t\tmargin: 20rpx 0;\r\n\r\n\t\t\t.file {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t.fileIcon {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\twidth: 48rpx;\r\n\t\t\t\t\theight: 48rpx;\r\n\t\t\t\t\tmargin-bottom: 15rpx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.file-text {\r\n\t\t\t\t\tfont-size: 20rpx;\r\n\t\t\t\t\tcolor: #333;\r\n\t\t\t\t\tfont-weight: bold;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.tools-list {\r\n\t\t\tbackground-color: #fff;\r\n\t\t\tborder-radius: 15rpx;\r\n\t\t\tpadding: 20rpx;\r\n\r\n\t\t\t.item {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\theight: 100rpx;\r\n\t\t\t\tborder-bottom: 1rpx solid #f1f1f1;\r\n\t\t\t\t.info {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tmargin-left: 40rpx;\r\n\t\t\t\t\t.item-icon {\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\twidth: 48rpx;\r\n\t\t\t\t\t\theight: 48rpx;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.item-text {\r\n\t\t\t\t\t\tfont-size: 25rpx;\r\n\t\t\t\t\t\tcolor: #333;\r\n\t\t\t\t\t\tmargin-left: 20rpx;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.right-icon {\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\twidth: 35rpx;\r\n\t\t\t\t\theight: 35rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.no-bottom{\r\n\t\t\t\tborder-bottom: none;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</style>","export default \"__VITE_ASSET__5d080727__\"","export default \"__VITE_ASSET__06954391__\"","export default \"__VITE_ASSET__d9b623eb__\"","export default \"__VITE_ASSET__4450440c__\"","export default \"__VITE_ASSET__c9c5a4fa__\"","export default \"__VITE_ASSET__9abc0933__\"","export default \"__VITE_ASSET__651113db__\"","export default \"__VITE_ASSET__381cf7bd__\"","export default \"__VITE_ASSET__1425c9bb__\"","export default \"__VITE_ASSET__23b027f4__\"","export default \"__VITE_ASSET__db8e72ef__\"","export default \"__VITE_ASSET__471ee4d9__\"","<template>\r\n\t<view class=\"fui-switch__input\"\r\n\t\t:class=\"[`fui-switch__size-${type}`,scaleRatio!=1? `fui-switch__scale-${scaleAlign}`:'',disabled && disabledStyle ?'fui-switch__checkbox-disabled':'']\"\r\n\t\t:style=\"{transform:`scale(${scaleRatio})`}\">\r\n\t\t<view class=\"fui-switch__input-def\" :style=\"getSwitchStyl\"\r\n\t\t\t:class=\"{'fui-checkbox__disabled':disabled,'fui-switch__checked-color':styleVal && color=='','fui-switch__normal-bcolor':!styleVal && borderColor=='','fui-switch__normal-bg':!styleVal && transitionColor==''}\"\r\n\t\t\tv-if=\"type=='switch'\" @tap=\"onChange\">\r\n\t\t\t<view class=\"fui-switch__input-before\" :style=\"getBeforeBgColor\"\r\n\t\t\t\t:class=\"{'fui-switch__input--before':val,'fui-switch__before-bg':!styleVal && normalColor==''}\">\r\n\t\t\t</view>\r\n\t\t\t<view class=\"fui-switch__input-after\" :style=\"getStyle\"\r\n\t\t\t\t:class=\"{'fui-switch__input--after':val,'fui-switch__after-bg':(btnColor=='' && styleVal) || (!styleVal && btnNormalColor=='')}\">\r\n\t\t\t\t<slot></slot>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"fui-switch__checkbox-self\"\r\n\t\t\t:class=\"{'fui-switch__checked-color':styleVal && color=='','fui-switch__normal-bcolor':!styleVal && borderColor=='','fui-switch__circle-bg':!styleVal && normalColor==''}\"\r\n\t\t\t:style=\"getSwitchStyl\" v-else @tap=\"onChange\">\r\n\t\t\t<view class=\"fui-switch__check-mark\" :class=\"{'fui-switch__mark-color':checkMarkColor==''}\"\r\n\t\t\t\t:style=\"getMarkStyl\" v-if=\"val\"></view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n\timport { ComponentPublicInstance } from 'vue'\r\n\t/**\r\n\t * Switch 开关\r\n\t * @description Switch 开关选择器，原生组件增强。\r\n\t * @tutorial https://unix.firstui.cn/\r\n\t * @property {String} name {String}\t开关选择器名称\r\n\t * @property {Boolean} checked {Boolean} 是否打开\r\n\t * @property {Boolean} disabled\t {Boolean} 是否禁用\r\n\t * @property {Boolean} disabledStyle {Boolean} 禁用后是否改变样式\r\n\t * @property {String} type {String}\t开关显示样式，有效值：switch, checkbox\r\n\t * @property {String} color {String} 开关打开时颜色\r\n\t * @property {String} normalColor {String} 开关未选中时背景色颜色\r\n\t * @property {String} transitionColor {String} 开关过渡动画颜色\r\n\t * @property {String} btnColor {String} 开关打开时按钮背景色\r\n\t * @property {String} btnNormalColor {String} 开关关闭时按钮背景色\r\n\t * @property {String} borderColor {String} 边框颜色，type=checkbox时生效\r\n\t * @property {String} checkMarkColor {String} 对号颜色，type=checkbox时生效\r\n\t * @property {Number} scaleRatio {Number} 缩放比例，当比例大于1时，外层容器需要设置 overflow: visible或者留出足够空间，避免显示不全\r\n\t * @property {String} scaleAlign {String} 缩放后对齐方式,可选值：left、center、right\r\n\t * @event {Function} change 开关切换状态时触发，(event: boolean) => void\r\n\t * @event {Function} update:checked 开关切换状态时触发，用于双向绑定，v-model:checked，(event: boolean) => void\r\n\t */\r\n\texport default {\r\n\t\tname: \"fui-switch\",\r\n\t\temits: ['change', 'update:checked'],\r\n\t\tprops: {\r\n\t\t\tname: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tchecked: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\tdisabled: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\tdisabledStyle: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'switch'\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tnormalColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\ttransitionColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tbtnColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tbtnNormalColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tborderColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tcheckMarkColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tscaleRatio: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 1\r\n\t\t\t},\r\n\t\t\tscaleAlign: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'center'\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tval: false,\r\n\t\t\t\tstyleVal: false,\r\n\t\t\t\tisLabel: false,\r\n\t\t\t\tfuiLabel: null as null | ComponentPublicInstance,\r\n\t\t\t\tfuiForm: null as null | ComponentPublicInstance\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tgetStyle() : object {\r\n\t\t\t\tconst mp : Map<string, string> = new Map();\r\n\t\t\t\tif (this.val) {\r\n\t\t\t\t\tif (this.btnColor != '') mp.set('background', this.btnColor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.btnNormalColor != '') mp.set('background', this.btnNormalColor);\r\n\t\t\t\t}\r\n\t\t\t\treturn mp\r\n\t\t\t},\r\n\t\t\tgetSwitchStyl() : object {\r\n\t\t\t\tconst mp : Map<string, string> = new Map();\r\n\t\t\t\tif (this.val) {\r\n\t\t\t\t\tif (this.color != '') {\r\n\t\t\t\t\t\tmp.set('borderColor', this.color);\r\n\t\t\t\t\t\tmp.set('background', this.color);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.transitionColor != '') mp.set('background', this.transitionColor);\r\n\t\t\t\t\tif (this.borderColor != '') mp.set('borderColor', this.borderColor);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn mp;\r\n\t\t\t},\r\n\t\t\tgetBeforeBgColor() : object {\r\n\t\t\t\tconst mp : Map<string, string> = new Map();\r\n\t\t\t\tif (this.normalColor != '') mp.set('background', this.normalColor)\r\n\t\t\t\treturn mp;\r\n\t\t\t},\r\n\t\t\tgetMarkStyl() : object {\r\n\t\t\t\tconst mp : Map<string, string> = new Map();\r\n\t\t\t\tif (this.checkMarkColor != '') {\r\n\t\t\t\t\tmp.set('borderBottomColor', this.checkMarkColor)\r\n\t\t\t\t\tmp.set('borderRightColor', this.checkMarkColor)\r\n\t\t\t\t}\r\n\t\t\t\treturn mp;\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tchecked(val : boolean) {\r\n\t\t\t\tthis.val = val;\r\n\t\t\t},\r\n\t\t\tval() {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.styleVal = this.val\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.val = this.checked;\r\n\t\t\tconst parent = this.getParent('fui-label');\r\n\t\t\tif (parent) {\r\n\t\t\t\tthis.isLabel = true\r\n\t\t\t\tconst label = this.fuiLabel as ComponentPublicInstance\r\n\t\t\t\t(label.$data['childrens'] as ComponentPublicInstance[]).push(this as ComponentPublicInstance);\r\n\t\t\t}\r\n\t\t\t//用于submit、reset事件\r\n\t\t\tconst isForm = this.getParent('fui-form');\r\n\t\t\tif (isForm) {\r\n\t\t\t\tconst form = this.fuiForm as ComponentPublicInstance\r\n\t\t\t\t(form.$data['formChildren'] as ComponentPublicInstance[]).push(this as ComponentPublicInstance);\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tonChange(e : UniPointerEvent) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tif (this.disabled) return;\r\n\t\t\t\tthis.emitChange(!this.val)\r\n\t\t\t},\r\n\t\t\temitChange(e : boolean) {\r\n\t\t\t\tthis.val = e;\r\n\t\t\t\tthis.$emit('change', e)\r\n\t\t\t\tthis.$emit('update:checked', e)\r\n\t\t\t},\r\n\t\t\tlabelClick() {\r\n\t\t\t\tif (this.disabled) return;\r\n\t\t\t\tthis.emitChange(!this.val)\r\n\t\t\t},\r\n\t\t\t//provide/inject方式（可能有警告，设置default:null也无法去除，应该是底层有bug）\r\n\t\t\tgetParent(name : string) : boolean {\r\n\t\t\t\tif (this.$parent == null) return false;\r\n\t\t\t\tlet parent = this.$parent as ComponentPublicInstance;\r\n\t\t\t\tlet parentName = parent.$options['name'];\r\n\t\t\t\twhile (parentName != name) {\r\n\t\t\t\t\tif (parent.$parent == null) return false;\r\n\t\t\t\t\tparent = parent.$parent as ComponentPublicInstance;\r\n\t\t\t\t\tif (parent.$options['name'] == '') return false;\r\n\t\t\t\t\tparentName = parent.$options['name'];\r\n\t\t\t\t}\r\n\t\t\t\tif (name == 'fui-label') {\r\n\t\t\t\t\tthis.fuiLabel = parent;\r\n\t\t\t\t} else if (name == 'fui-form') {\r\n\t\t\t\t\tthis.fuiForm = parent;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t\treset() {\r\n\t\t\t\tthis.val = false;\r\n\t\t\t\tthis.$emit('change', false);\r\n\t\t\t\tthis.$emit('update:checked', false);\r\n\t\t\t},\r\n\t\t\tgetSubmitValue() : boolean {\r\n\t\t\t\treturn this.val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\t$fui-color-primary: #465CFF !default;\r\n\t$fui-switch-background: #FFFFFF !default;\r\n\t$fui-switch-normal-transition: #dfdfdf !default;\r\n\t$fui-switch-border-color: #CCCCCC !default;\r\n\t$fui-switch-circle-shadow: 0 0 6rpx rgba(0, 0, 0, .4) !default;\r\n\t$fui-switch-circle-background: #FFFFFF !default;\r\n\t$fui-switch-mark-color: #FFFFFF !default;\r\n\r\n\t.fui-switch__input {\r\n\t\tflex-shrink: 0;\r\n\t}\r\n\r\n\t.fui-switch__scale-left {\r\n\t\ttransform-origin: 0 center;\r\n\t}\r\n\r\n\t.fui-switch__scale-center {\r\n\t\ttransform-origin: center center;\r\n\t}\r\n\r\n\t.fui-switch__scale-right {\r\n\t\ttransform-origin: 100% center;\r\n\t}\r\n\r\n\t.fui-switch__size-switch {\r\n\t\twidth: 52px;\r\n\t\theight: 32px;\r\n\t}\r\n\r\n\t.fui-switch__size-checkbox {\r\n\t\twidth: 40rpx;\r\n\t\theight: 40rpx;\r\n\t}\r\n\r\n\t.fui-switch__checkbox-self {\r\n\t\twidth: 40rpx;\r\n\t\theight: 40rpx;\r\n\t\tborder-radius: 40px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tposition: relative;\r\n\t\tborder-style: solid;\r\n\t\tborder-width: 1px;\r\n\t\tborder-color: $fui-switch-border-color;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.fui-switch__input-def {\r\n\t\tposition: relative;\r\n\t\twidth: 52px;\r\n\t\theight: 32px;\r\n\t\tborder-width: 1px;\r\n\t\tborder-style: solid;\r\n\t\tborder-color: $fui-switch-border-color;\r\n\t\tborder-radius: 16px;\r\n\t\tbox-sizing: border-box;\r\n\t\ttransition: background-color .1s, border .1s;\r\n\r\n\t}\r\n\r\n\t.fui-switch__normal-bg {\r\n\t\tbackground: $fui-switch-normal-transition !important;\r\n\t}\r\n\r\n\t.fui-switch__checked-color {\r\n\t\tbackground: $fui-color-primary !important;\r\n\t\tborder-color: $fui-color-primary !important;\r\n\t}\r\n\r\n\t.fui-switch__normal-bcolor {\r\n\t\tborder-color: $fui-switch-border-color !important;\r\n\t}\r\n\r\n\r\n\t.fui-switch__input-before {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 50px;\r\n\t\theight: 30px;\r\n\t\tborder-radius: 15px;\r\n\t\ttransition: transform .3s\r\n\t}\r\n\r\n\t.fui-switch__before-bg {\r\n\t\tbackground: $fui-switch-background !important;\r\n\t}\r\n\r\n\t.fui-switch__input-after {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 30px;\r\n\t\theight: 30px;\r\n\t\tborder-radius: 15px;\r\n\t\tbox-shadow: $fui-switch-circle-shadow;\r\n\t\ttransition: transform .3s;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\r\n\t.fui-switch__after-bg {\r\n\t\tbackground: $fui-switch-background !important;\r\n\t}\r\n\r\n\r\n\t.fui-switch__input--before {\r\n\t\ttransform: scale(0)\r\n\t}\r\n\r\n\t.fui-switch__input--after {\r\n\t\ttransform: translateX(20px)\r\n\t}\r\n\r\n\r\n\t.fui-switch__check-mark {\r\n\t\twidth: 20rpx;\r\n\t\theight: 40rpx;\r\n\t\tborder-bottom-style: solid;\r\n\t\tborder-bottom-width: 3px;\r\n\t\tborder-bottom-color: #FFFFFF;\r\n\t\tborder-right-style: solid;\r\n\t\tborder-right-width: 3px;\r\n\t\tborder-right-color: #FFFFFF;\r\n\t\ttransform: rotate(45deg) scale(0.5);\r\n\t\ttransform-origin: 54% 48%;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\r\n\t.fui-switch__circle-bg {\r\n\t\tbackground: $fui-switch-circle-background !important;\r\n\t}\r\n\r\n\t.fui-switch__mark-color {\r\n\t\t// border-bottom-color: $fui-checkbox-mark-color !important;\r\n\t\t// border-right-color: $fui-checkbox-mark-color !important;\r\n\t}\r\n\r\n\t.fui-switch__checkbox-disabled {\r\n\t\topacity: 0.6;\r\n\t}\r\n</style>","<template>\r\n\t<view class=\"fui-button__wrap\"\r\n\t\t:class=\"[getWidth=='' || getWidth=='100%'?'fui-button__flex-1':'',disabled && disabledBackground=='' ? 'fui-button__opacity' : '',background=='' && disabledBackground=='' && !plain?`fui-button__${type}`:'',height=='' && btnSize==''?'fui-button__height':'',radius==''?'fui-button__radius':'',highlight && !disabled ?'fui-button__active':'']\"\r\n\t\t:style=\"{width: getWidth,height: getHeight,margin:margin,borderRadius: radius,background:getBackground,border:`${borderColor==''?'0px':borderWidth} solid`,borderColor:getBorderColor}\"\r\n\t\t@touchstart=\"handleStart\" @touchend=\"handleEnd\" @touchcancel=\"handleEnd\" @tap=\"handleTap\">\r\n\t\t<view ref=\"fui_button_loading\" @transitionend=\"onEnd\" class=\"fui-button__spin\" :style=\"getStyl\" v-if=\"loading\">\r\n\r\n\t\t\t<view class=\"fui-button__spin-dot\" :style=\"{background:activeColor}\"></view>\r\n\r\n\t\t</view>\r\n\t\t<text class=\"fui-button__text\"\r\n\t\t\t:class=\"{'fui-btn__gray-color':background=='' && disabledBackground=='' && !plain && type=='gray' && color=='#fff','fui-text__bold':bold,'fui-button__size':size==0 && btnSize=='','fui-button__height-text':height=='' && btnSize==''}\"\r\n\t\t\tv-if=\"text\"\r\n\t\t\t:style=\"{fontSize: getSize,color:getColor,height: getHeight,lineHeight:getHeight}\">{{text}}</text>\r\n\t\t<slot></slot>\r\n\t\t<view ref=\"fui_button_hover\" class=\"fui-button__hover\" :style=\"{borderRadius: radius}\"\r\n\t\t\t:class=\"{'fui-button__radius':radius==''}\" v-if=\"highlight\"></view>\r\n\t</view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\n\timport { ComponentPublicInstance } from 'vue';\r\n\t/**\r\n\t * Button 按钮\r\n\t * @description Button 按钮，支持自定义大小、颜色等。\r\n\t * @tutorial https://unix.firstui.cn/\r\n\t * @property {String} type {String} 按钮类型，可取值：primary、success、 warning、danger、link、purple、gray\r\n\t * @property {String} background {String} 按钮背景色，当传入值时type失效\r\n\t * @property {String} text {String}\t按钮显示文本\r\n\t * @property {String} color\t{String} 按钮字体颜色\r\n\t * @property {String} disabledBackground {String} 按钮禁用状态下背景色\r\n\t * @property {String} disabledColor {String} 按钮禁用状态下字体颜色\r\n\t * @property {String} borderWidth {String} 按钮边框宽度\r\n\t * @property {String} borderColor {String} 按钮边框颜色\r\n\t * @property {String} btnSize {String} 按钮大小，可选值：medium、small、mini，优先级高于width和height属性\r\n\t * @property {String} width\t{String} 按钮宽度\r\n\t * @property {String} height 按钮高度\r\n\t * @property {Number} size {Number} 字体大小，单位rpx\r\n\t * @property {Boolean} bold {Boolean} 字体是否加粗\r\n\t * @property {String} margin {String} margin值：\r\n\t * @property {String} radius {String} 圆角大小\r\n\t * @property {Boolean} plain {Boolean} 是否镂空\r\n\t * @property {Boolean} highlight {Boolean} 是否需要点击效果 \r\n\t * @property {Boolean} disabled\t{Boolean} 是否禁用\r\n\t * @property {Boolean}loading {Boolean} 是否显示加载图标\r\n\t * @property {String} iconColor\t{String} loading圆环背景色\r\n\t * @property {String} activeColor {String} loading圆环高亮部分颜色\r\n\t * @property {String} formType {String} 用于 form 组件，点击分别会触发 form 组件的 submit/reset 事件\r\n\t * @event {Function} onclick 按钮点击事件，(event: MouseEvent) => void\r\n\t */\r\n\texport default {\r\n\t\tname: 'fui-button',\r\n\t\temits: ['onclick'],\r\n\t\tprops: {\r\n\t\t\ttype: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'primary'\r\n\t\t\t},\r\n\t\t\tbackground: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\ttext: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tdisabledBackground: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tdisabledColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tborderWidth: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '0.5px'\r\n\t\t\t},\r\n\t\t\tborderColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tbtnSize: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\twidth: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: '100%'\r\n\t\t\t},\r\n\t\t\theight: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\ttype: Number,\r\n\t\t\t\tdefault: 0\r\n\t\t\t},\r\n\t\t\tbold: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\tmargin: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tradius: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\tplain: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\thighlight: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\tdisabled: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\tloading: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\t\t\ticonColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"#B2B2B2\"\r\n\t\t\t},\r\n\t\t\tactiveColor: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: \"#FFFFFF\"\r\n\t\t\t},\r\n\t\t\t//V1.2.6+\r\n\t\t\tformType: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: ''\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tgetStyl() : object {\r\n\t\t\t\tconst mp : Map<string, string> = new Map()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t//ios端暂时不支持单边框颜色，设置border-radius\r\n\t\t\t\tmp.set('border-color', this.iconColor)\r\n\r\n\t\t\t\treturn mp;\r\n\t\t\t},\r\n\t\t\tgetBackground() : string {\r\n\t\t\t\tlet color = this.background;\r\n\t\t\t\tif (this.disabled && this.disabledBackground != '') {\r\n\t\t\t\t\tcolor = this.disabledBackground;\r\n\t\t\t\t}\r\n\t\t\t\tcolor = this.type == 'link' || this.plain ? 'rgba(0,0,0,0)' : color;\r\n\t\t\t\treturn color\r\n\t\t\t},\r\n\t\t\tgetBorderColor() : string {\r\n\t\t\t\tlet color = this.borderColor\r\n\t\t\t\tif (color == '') {\r\n\t\t\t\t\tcolor = this.disabled && this.disabledBackground != '' ? this.disabledBackground : this.background\r\n\t\t\t\t}\r\n\t\t\t\tcolor = this.type == 'link' ? 'rgba(0,0,0,0)' : color;\r\n\t\t\t\treturn color;\r\n\t\t\t},\r\n\t\t\tgetColor() : string {\r\n\t\t\t\tlet color : string;\r\n\t\t\t\tif (this.color != '') {\r\n\t\t\t\t\tcolor = this.disabled && this.disabledBackground != '' ? this.disabledColor : this.color\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.disabled && this.disabledBackground != '') {\r\n\t\t\t\t\t\tcolor = this.disabledColor == '' ? '#FFFFFF' : this.disabledColor\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcolor = this.type == 'gray' ? '#465CFF' : '#FFFFFF'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn color;\r\n\t\t\t},\r\n\t\t\tgetSize() : string {\r\n\t\t\t\tlet size = this.size;\r\n\t\t\t\tif (this.btnSize != '') {\r\n\t\t\t\t\tsize = size == 0 ? 32 : size;\r\n\t\t\t\t\tif (this.btnSize == 'small') {\r\n\t\t\t\t\t\tsize = size > 28 ? 28 : size;\r\n\t\t\t\t\t} else if (this.btnSize == 'mini') {\r\n\t\t\t\t\t\tsize = size > 28 ? 24 : size;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn `${size}rpx`\r\n\t\t\t},\r\n\t\t\tgetWidth() : string {\r\n\t\t\t\t//medium 400*84 / small 200*84/ mini 120 * 64\r\n\t\t\t\tlet width = this.width;\r\n\t\t\t\tif (this.btnSize != '') {\r\n\t\t\t\t\twidth = ({\r\n\t\t\t\t\t\tmedium: '400rpx',\r\n\t\t\t\t\t\tsmall: '200rpx',\r\n\t\t\t\t\t\tmini: '120rpx'\r\n\t\t\t\t\t}[this.btnSize]) as string\r\n\t\t\t\t}\r\n\t\t\t\treturn width\r\n\t\t\t},\r\n\t\t\tgetHeight() : string {\r\n\t\t\t\tlet height = this.height;\r\n\t\t\t\tif (this.btnSize != '') {\r\n\t\t\t\t\theight = ({\r\n\t\t\t\t\t\tmedium: '84rpx',\r\n\t\t\t\t\t\tsmall: '72rpx',\r\n\t\t\t\t\t\tmini: '64rpx'\r\n\t\t\t\t\t}[this.btnSize]) as string\r\n\t\t\t\t}\r\n\t\t\t\treturn height\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tloading(newValue : boolean) {\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.startSpin()\r\n\t\t\t\t\t\t}, 50)\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.endSpin()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttimes: 0,\r\n\t\t\t\tisSpin: false,\r\n\t\t\t\telement: null as UniElement | null,\r\n\t\t\t\thoverEle: null as UniElement | null,\r\n\t\t\t\tfuiForm: null as null | ComponentPublicInstance\r\n\t\t\t};\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.getParent('fui-form')\r\n\t\t},\r\n\r\n\t\tmounted() {\r\n\t\t\tthis.$nextTick(() => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (this.loading) this.startSpin();\r\n\t\t\t\t}, 200)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tbeforeUnmount() {\r\n\t\t\tthis.isSpin = false\r\n\t\t\tthis.element = null;\r\n\t\t\tthis.hoverEle = null\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\thandleStart() {\r\n\r\n\t\t\t\tthis.switchHover(true)\r\n\r\n\t\t\t},\r\n\t\t\thandleTap(e : MouseEvent) {\r\n\t\t\t\tif (this.disabled) return;\r\n\t\t\t\tthis.$emit('onclick', e);\r\n\t\t\t\tif (this.formType != '' && this.fuiForm != null) {\r\n\t\t\t\t\tconst form = this.fuiForm as ComponentPublicInstance;\r\n\t\t\t\t\tform.$callMethod('buttonEvent', this.formType)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thandleEnd() {\r\n\r\n\t\t\t\tthis.switchHover(false)\r\n\r\n\t\t\t},\r\n\t\t\tswitchHover(show : boolean) {\r\n\t\t\t\tif (!this.highlight || this.disabled) return;\r\n\t\t\t\tif (this.hoverEle == null) {\r\n\t\t\t\t\tthis.hoverEle = this.$refs['fui_button_hover'] as UniElement;\r\n\t\t\t\t}\r\n\t\t\t\tthis.hoverEle!.style.setProperty('visibility', show ? 'visible' : 'hidden')\r\n\t\t\t},\r\n\t\t\tstartSpin() {\r\n\t\t\t\tif (this.element != null && this.isSpin) return;\r\n\t\t\t\tif (this.element == null) {\r\n\t\t\t\t\tthis.element = this.$refs['fui_button_loading'] as UniElement;\r\n\t\t\t\t}\r\n\t\t\t\tthis.times = this.times + 1\r\n\t\t\t\tthis.element!.style.setProperty('transform', `rotate(${this.times * 360}deg)`)\r\n\t\t\t\tthis.element!.style.setProperty('transition-duration', '600ms')\r\n\t\t\t\tthis.isSpin = true\r\n\t\t\t},\r\n\t\t\tendSpin() {\r\n\t\t\t\tthis.isSpin = false\r\n\t\t\t\tthis.times = 0\r\n\t\t\t\tthis.element!.style.setProperty('transform', `rotate(${this.times * 360}deg)`)\r\n\t\t\t\tthis.element!.style.setProperty('transition-duration', '0s')\r\n\t\t\t\tthis.element = null;\r\n\t\t\t},\r\n\t\t\tonEnd() {\r\n\r\n\t\t\t\tif (this.isSpin && this.loading) {\r\n\t\t\t\t\tthis.times = this.times + 1\r\n\t\t\t\t\tthis.element!.style.setProperty('transform', `rotate(${this.times * 360}deg)`)\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tgetParent(name : string) : boolean {\r\n\t\t\t\tif (this.$parent == null) return false;\r\n\t\t\t\tlet parent = this.$parent as ComponentPublicInstance;\r\n\t\t\t\tlet parentName = parent.$options['name'];\r\n\t\t\t\twhile (parentName != name) {\r\n\t\t\t\t\tif (parent.$parent == null) return false;\r\n\t\t\t\t\tparent = parent.$parent as ComponentPublicInstance;\r\n\t\t\t\t\tif (parent.$options['name'] == '') return false;\r\n\t\t\t\t\tparentName = parent.$options['name'];\r\n\t\t\t\t}\r\n\t\t\t\tthis.fuiForm = parent;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\t$fui-color-primary: #465CFF !default;\r\n\t$fui-color-success: #09BE4F !default;\r\n\t$fui-color-warning: #FFB703 !default;\r\n\t$fui-color-danger: #FF2B2B !default;\r\n\t$fui-color-purple: #6831FF !default;\r\n\t$fui-bg-color-content: #F8F8F8 !default;\r\n\t$fui-bg-color-hover: rgba(0, 0, 0, 0.2) !default;\r\n\t$fui-button-height: 96rpx !default;\r\n\t$fui-button-size: 32rpx !default;\r\n\t$fui-button-radius: 16rpx !default;\r\n\r\n\t.fui-button__wrap {\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t.fui-button__flex-1 {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.fui-button__opacity {\r\n\t\topacity: .5;\r\n\t}\r\n\r\n\t.fui-button__hover {\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\ttop: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground-color: $fui-bg-color-hover;\r\n\t\tz-index: 2;\r\n\t\tborder-radius: 0;\r\n\t\tvisibility: hidden;\r\n\t\tpointer-events: none;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t.fui-button__spin {\r\n\t\twidth: 32rpx;\r\n\t\theight: 32rpx;\r\n\t\tborder-width: 2px;\r\n\t\tborder-style: solid;\r\n\t\tborder-radius: 100px;\r\n\t\ttransition-duration: 600ms;\r\n\t\ttransition-property: transform;\r\n\t\ttransition-timing-function: linear;\r\n\t\ttransform: rotate(0deg);\r\n\t\tbox-sizing: border-box;\r\n\t\tmargin-right: 8rpx;\r\n\t\tposition: relative;\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t.fui-button__spin-dot {\r\n\t\tposition: absolute;\r\n\t\twidth: 12rpx;\r\n\t\theight: 12rpx;\r\n\t\tborder-radius: 8rpx;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t}\r\n\r\n\r\n\r\n\t.fui-button__text {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\t.fui-text__bold {\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t.fui-button__link {\r\n\t\tborder-color: rgba(0, 0, 0, 0) !important;\r\n\t\tbackground-color: rgba(0, 0, 0, 0) !important;\r\n\t}\r\n\r\n\r\n\t.fui-button__primary {\r\n\t\tborder-color: $fui-color-primary !important;\r\n\t\tbackground: $fui-color-primary !important;\r\n\t}\r\n\r\n\r\n\t.fui-button__success {\r\n\t\tborder-color: $fui-color-success !important;\r\n\t\tbackground: $fui-color-success !important;\r\n\t}\r\n\r\n\t.fui-button__warning {\r\n\t\tborder-color: $fui-color-warning !important;\r\n\t\tbackground: $fui-color-warning !important;\r\n\t}\r\n\r\n\t.fui-button__danger {\r\n\t\tborder-color: $fui-color-danger !important;\r\n\t\tbackground: $fui-color-danger !important;\r\n\t}\r\n\r\n\t.fui-button__purple {\r\n\t\tborder-color: $fui-color-purple !important;\r\n\t\tbackground: $fui-color-purple !important;\r\n\t}\r\n\r\n\t.fui-button__gray {\r\n\t\tborder-color: $fui-bg-color-content !important;\r\n\t\tbackground: $fui-bg-color-content !important;\r\n\t}\r\n\r\n\t.fui-btn__gray-color {\r\n\t\tcolor: $fui-color-primary !important;\r\n\t}\r\n\r\n\t.fui-button__height {\r\n\t\theight: $fui-button-height !important;\r\n\t}\r\n\r\n\t.fui-button__height-text {\r\n\t\theight: $fui-button-height !important;\r\n\t\tline-height: $fui-button-height !important;\r\n\t}\r\n\r\n\t.fui-button__size {\r\n\t\tfont-size: $fui-button-size !important;\r\n\t}\r\n\r\n\t.fui-button__radius {\r\n\t\tborder-radius: $fui-button-radius !important;\r\n\t}\r\n</style>","<template>\r\n\t<view class=\"container\">\r\n\t\t<view class=\"title\">\r\n\t\t\t<text>个人信息</text>\r\n\t\t</view>\r\n\t\t<view class=\"info\">\r\n\t\t\t<view class=\"info-item\">\r\n\t\t\t\t<text>账号</text>\r\n\t\t\t\t<text>18888888888</text>\r\n\t\t\t</view>\r\n\t\t\t<view class=\"info-item nobottom\" @click=\"changePhoneNumber\">\r\n\t\t\t\t<text>手机号</text>\r\n\t\t\t\t<view class=\"phone\">\r\n\t\t\t\t\t<text>18888888888</text>\r\n\t\t\t\t\t<image class=\"icon\" src=\"@/static/mine/right.png\" mode=\"aspectFit\" />\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"title\">\r\n\t\t\t<text>安全信息</text>\r\n\t\t</view>\r\n\t\t<view class=\"info\">\r\n\t\t\t<view class=\"info-item\">\r\n\t\t\t\t<text>修改密码</text>\r\n\t\t\t\t<image class=\"icon\" src=\"@/static/mine/right.png\" mode=\"aspectFit\" />\r\n\t\t\t</view>\r\n\t\t\t<view class=\"info-item nobottom\" @click=\"cancelAnAccount\">\r\n\t\t\t\t<text>注销账号</text>\r\n\t\t\t\t<image class=\"icon\" src=\"@/static/mine/right.png\" mode=\"aspectFit\" />\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"title\">\r\n\t\t\t<text>第三方账号</text>\r\n\t\t</view>\r\n\t\t<view class=\"info\">\r\n\t\t\t<view class=\"info-item nobottom\">\r\n\t\t\t\t<text>微信</text>\r\n\t\t\t\t<view class=\"switch-state\">\r\n\t\t\t\t\t<text style=\"margin-right: 10rpx;\">{{switchVal ? '已绑定' : '未绑定'}}</text>\r\n\t\t\t\t\t<fui-switch color=\"#1296db\" @change=\"change\"></fui-switch>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\t\t<view class=\"btn-box\">\r\n\t\t\t<fui-button color=\"#fff\" text=\"退出登陆\" background=\"#1296db\" @onclick=\"logout\"></fui-button>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script setup lang=\"uts\">\r\n\timport { ref } from 'vue'\r\n\tconst switchVal = ref(false)\r\n\tconst change = () => {\r\n\t\tconst isCurrentlyBound = switchVal.value\r\n\t\tif (isCurrentlyBound) {\r\n\t\t\t// 解绑操作\r\n\t\t\tuni.showModal({\r\n\t\t\t\ttitle: '确认解绑',\r\n\t\t\t\tcontent: '确定要解除微信绑定吗？',\r\n\t\t\t\tcancelText: '取消',\r\n\t\t\t\tconfirmText: '确定',\r\n\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\tuni.__log__('log','at pages/mine/userInfo/userInfo.uvue:64','调用解绑API...')\r\n\r\n\t\t\t\t\t\tswitchVal.value = false\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '已成功解绑微信',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tswitchVal.value = isCurrentlyBound\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tuni.showModal({\r\n\t\t\t\ttitle: '确认绑定',\r\n\t\t\t\tcontent: '确定要绑定微信账号吗？',\r\n\t\t\t\tcancelText: '取消',\r\n\t\t\t\tconfirmText: '确定',\r\n\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\tuni.__log__('log','at pages/mine/userInfo/userInfo.uvue:84','调用绑定API...')\r\n\r\n\t\t\t\t\t\tswitchVal.value = true\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '已成功绑定微信',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tswitchVal.value = isCurrentlyBound\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst logout = () => {\r\n\t\tuni.showModal({\r\n\t\t\tcontent: '确定退出登陆吗？',\r\n\t\t\tcancelText: '取消',\r\n\t\t\tconfirmText: '确定',\r\n\t\t\tsuccess(res) {\r\n\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '退出成功',\r\n\t\t\t\t\t\ticon: 'none',\r\n\t\t\t\t\t\tduration: 500,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t//修改手机号\r\n\tconst changePhoneNumber = () => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: '/pages/mine/userInfo/changePhoneNumber/changePhoneNumber'\r\n\t\t})\r\n\t}\r\n\r\n\t//注销账号\r\n\tconst cancelAnAccount = () => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: '/pages/mine/userInfo/CancelAnAccount/CancelAnAccount'\r\n\t\t})\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t.container {\r\n\t\theight: 100%;\r\n\t\tbackground: #f3f3f3;\r\n\t\tpadding: 0 20rpx;\r\n\r\n\t\t.title {\r\n\t\t\tfont-size: 30rpx;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tcolor: #333;\r\n\t\t\tpadding: 50rpx 0 10rpx 20rpx;\r\n\t\t}\r\n\r\n\t\t.info {\r\n\t\t\tbackground: #fff;\r\n\t\t\tpadding: 10rpx 30rpx;\r\n\t\t\tborder-radius: 10rpx;\r\n\r\n\t\t\t.info-item {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: row;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 20rpx 0;\r\n\t\t\t\tborder-bottom: 1rpx solid #f1f1f1;\r\n\r\n\t\t\t\t.icon {\r\n\t\t\t\t\twidth: 30rpx;\r\n\t\t\t\t\theight: 30rpx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.switch-state {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.phone {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.nobottom {\r\n\t\t\t\tborder-bottom: none;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.btn-box {\r\n\t\t\tmargin-top: 200rpx;\r\n\t\t}\r\n\t}\r\n</style>","<template>\n\t<view class=\"container\">\n\t\t<image src=\"@/static/error_big.png\" class=\"close\"></image>\n\t\t<view class=\"content\">\n\t\t\t<text class=\"content-word\">账号注销后将会删除个人数据且无法恢复，请谨慎操作。</text>\n\t\t\t<text class=\"content-word\">注销前，请您自行备份重要数据及信息。</text>\n\t\t</view>\n\t\t<view class=\"btn-box\">\n\t\t\t<view class=\"btn\">\n\t\t\t\t<fui-button text=\"取消\" background=\"#fff\" color=\"#1296db\" borderColor=\"#666\" height=\"70rpx\"></fui-button>\n\t\t\t</view>\n\t\t\t<view class=\"btn\">\n\t\t\t\t<fui-button text=\"申请注销\" background=\"#1296db\" color=\"#fff\" height=\"70rpx\" @onclick=\"cancelAccount\"></fui-button>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup lang=\"uts\">\n\tconst cancelAccount = () => {\n\t\tuni.showToast({\n\t\t\ttitle: '注销成功',\n\t\t\ticon: 'success',\n\t\t\tduration: 2000\n\t\t})\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\t.container{\n\t\theight: 100%;\n\t\tbackground: #F5F5F5;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tpadding: 100rpx;\n\t\t.content{\n\t\t\tmargin: 50rpx 0;\n\t\t\t.content-word{\n\t\t\t\tmargin: 20rpx 0;\n\t\t\t}\n\t\t}\n\t\t.close{\n\t\t\twidth: 120rpx;\n\t\t\theight: 120rpx;\n\t\t}\n\t\t.btn-box{\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t\tjustify-content: space-between;\n\t\t\twidth: 100%;\n\t\t\t.btn{\n\t\t\t\twidth:45%\n\t\t\t}\n\t\t}\n\t}\t\n</style>\n","export default \"__VITE_ASSET__7e5e8159__\"","<script lang=\"uts\">\r\n\tlet firstBackTime = 0\r\n\texport default {\r\n\t\tonLaunch: function () {\r\n\t\t\tuni.__log__('log','at App.uvue:5','App Launch')\r\n\t\t},\r\n\t\tonShow: function () {\r\n\t\t\tuni.__log__('log','at App.uvue:8','App Show')\r\n\t\t},\r\n\t\tonHide: function () {\r\n\t\t\tuni.__log__('log','at App.uvue:11','App Hide')\r\n\t\t},\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\tonExit: function () {\r\n\t\t\tuni.__log__('log','at App.uvue:32','App Exit')\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t/*每个页面公共css */\r\n\t.uni-row {\r\n\t\tflex-direction: row;\r\n\t}\r\n\r\n\t.uni-column {\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>"],"names":["videoSrc","ref","i","day","icon","isNumber","computed","watchEffect","getCurrentInstance","onMounted","nextTick","DayutsLocale","reactive","zhCn","locale","unit","arg","_a","defineComponent"],"mappings":"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","x_google_ignoreList":[0,8],"sourceRoot":"/Users/xyhc/Documents/veepai_uniappx"}