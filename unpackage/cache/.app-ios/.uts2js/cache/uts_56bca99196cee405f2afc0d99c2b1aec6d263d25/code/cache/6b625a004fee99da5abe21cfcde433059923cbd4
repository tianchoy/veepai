{"code":"// @ts-nocheck\nimport { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { HSL, HSLA, HSV, HSVA, HSBA, RGB, RGBA, RGBAString, LColorInfo, LColorOptions } from \"../utssdk/interface\";\nimport { bound01, boundAlpha, clamp01, toBoolean, isNumber } from './util';\nexport class TinyColor {\n    constructor(color = '', opts = new LColorOptions({})) {\n        var _a, _b;\n        let _color = color;\n        // if(color instanceof TinyColor){\n        // \treturn color as TinyColor\n        // } \n        if (isNumber(color)) {\n            _color = numberInputToObject(color);\n        }\n        this.originalInput = _color;\n        const rgb = inputToRGB(_color);\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // 不要让范围在 [0,255] 中的值返回成 [0,1]。 \n        // 这里可能会失去一些精度，但可以解决原来 \n        // .5 被解释为总数的半数，而不是1的一半的问题 \n        // 如果本来应该是128，那么这个已经在 inputToRgb 中处理过了\t\tif (this.r < 1) {\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = (_b = rgb.ok) !== null && _b !== void 0 ? _b : false;\n        this.reversedNames = new Map();\n        names.forEach((value, key) => {\n            this.reversedNames.set(value, key);\n        });\n    }\n    /**\n     * 判断当前颜色是否为暗色。\n     * @returns 一个布尔值，表示当前颜色是否为暗色。\n     */\n    isDark() {\n        return this.getBrightness() < 128;\n    }\n    /**\n     * 判断当前颜色是否为亮色。\n     * @returns 一个布尔值，表示当前颜色是否为亮色。\n     */\n    isLight() {\n        return !this.isDark();\n    }\n    /**\n     * 计算当前颜色的亮度值。\n     * 亮度值是根据 RGB 颜色空间中的红、绿、蓝三个通道的值计算得出的，计算公式为：(r * 299 + g * 587 + b * 114) / 1000。\n     * @returns 返回颜色的感知亮度，范围从0-255。\n     */\n    getBrightness() {\n        // http://www.w3.org/TR/AERT#color-contrast\n        const rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    }\n    /**\n     * 计算当前颜色的相对亮度值。\n     * 相对亮度值是根据 RGB 颜色空间中的红、绿、蓝三个通道的值计算得出的，计算公式为：0.2126 * R + 0.7152 * G + 0.0722 * B。\n     * @returns 返回颜色的感知亮度，范围从0-1。\n     */\n    getLuminance() {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        const rgb = this.toRgb();\n        let R;\n        let G;\n        let B;\n        const RsRGB = rgb.r / 255;\n        const GsRGB = rgb.g / 255;\n        const BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    }\n    /**\n     * 获取当前颜色的透明度值。\n     * 透明度值的范围是 0 到 1，其中 0 表示完全透明，1 表示完全不透明。\n     * @returns 一个数字，表示当前颜色的透明度值。\n     */\n    getAlpha() {\n        return this.a;\n    }\n    setAlpha(alpha = null) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    }\n    /**\n     * 判断当前颜色是否为单色。\n     * 单色是指颜色的饱和度（S）为 0 的颜色，这些颜色只有明度（L）变化，没有颜色变化。\n     * @returns 一个布尔值，表示当前颜色是否为单色。\n     */\n    isMonochrome() {\n        const s = this.toHsl().s;\n        return s == 0;\n    }\n    /**\n     * 将当前颜色转换为 HSV（色相、饱和度、亮度）颜色空间。\n     * @returns 一个对象，包含四个属性：`h`（色相）、`s`（饱和度）、`v`（亮度）和 `a`（透明度）。\n     */\n    toHsv() {\n        const hsv = rgbToHsv(this.r, this.g, this.b);\n        return new HSVA({ h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a });\n    }\n    /**\n     * 将当前颜色转换为 HSV（色相、饱和度、亮度）颜色空间的字符串表示。\n     * @returns 一个字符串，表示当前颜色的 HSV 或 HSVA 格式 hsva(xxx, xxx, xxx, xx)。\n     */\n    toHsvString() {\n        const hsv = rgbToHsv(this.r, this.g, this.b);\n        const h = Math.round(hsv.h * 360);\n        const s = Math.round(hsv.s * 100);\n        const v = Math.round(hsv.v * 100);\n        return this.a == 1 ? `hsv(${h}, ${s}%, ${v}%)` : `hsva(${h}, ${s}%, ${v}%, ${this.roundA})`;\n    }\n    /**\n     * 将当前颜色对象转换为HSBA颜色空间,即Hue（色相）、Saturation（饱和度）、Brightness（亮度）和Alpha（透明度\n     * @returns {HSBA} 返回一个HSBA对象，表示当前颜色对象在HSBA颜色空间中的值\n     */\n    toHsb() {\n        const hsv = rgbToHsv(this.r, this.g, this.b);\n        return new HSBA({ h: hsv.h * 360, s: hsv.s, b: hsv.v, a: this.a });\n    }\n    /**\n     * 将当前颜色对象转换为CSS风格的HSB或HSVA字符串\n     * @returns {string} 返回一个CSS风格的HSB或HSVA字符串，表示当前颜色对象的颜色值\n     */\n    toHsbString() {\n        const hsb = this.toHsb();\n        const h = Math.round(hsb.h);\n        const s = Math.round(hsb.s * 100);\n        const b = Math.round(hsb.b * 100);\n        return this.a == 1\n            ? `hsb(${h}, ${s}%, ${b}%)`\n            : `hsva(${h}, ${s}%, ${b}%, ${this.roundA})`;\n    }\n    /**\n     * 将当前颜色转换为 HSL（色相、饱和度、明度）颜色空间。\n     * @returns 一个对象，包含四个属性：`h`（色相）、`s`（饱和度）、`l`（明度）和 `a`（透明度）。\n     */\n    toHsl() {\n        const hsl = rgbToHsl(this.r, this.g, this.b);\n        return new HSLA({ h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a });\n    }\n    /**\n     * 将当前颜色转换为 HSL（色相、饱和度、明度）颜色空间的字符串表示。\n     * @returns 一个字符串，表示当前颜色的 HSL 或 HSLA 格式 hsla(xxx, xxx, xxx, xx)。\n     */\n    toHslString() {\n        const hsl = rgbToHsl(this.r, this.g, this.b);\n        const h = Math.round(hsl.h * 360);\n        const s = Math.round(hsl.s * 100);\n        const l = Math.round(hsl.l * 100);\n        return this.a == 1 ? `hsl(${h}, ${s}%, ${l}%)` : `hsla(${h}, ${s}%, ${l}%, ${this.roundA})`;\n    }\n    /**\n     * 将当前颜色转换为十六进制颜色表示。\n     * @param allow3Char 是否允许返回简写的十六进制颜色表示（如果可能）。默认值为 `false`。\n     * @returns 一个字符串，表示当前颜色的十六进制格式。\n     */\n    toHex(allow3Char = false) {\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    }\n    /**\n     * 将当前颜色转换为带有井号（`#`）前缀的十六进制颜色表示。\n     * @param allow3Char 是否允许返回简写的十六进制颜色表示（如果可能）。默认值为 `false`。\n     * @returns 一个字符串，表示当前颜色的带有井号前缀的十六进制格式。\n     */\n    toHexString(allow3Char = false) {\n        return '#' + this.toHex(allow3Char);\n    }\n    /**\n     * 返回颜色的八位十六进制值.\n     * @param allow4Char 如果可能的话，将十六进制值缩短为4个字符\n     */\n    toHex8(allow4Char = false) {\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    }\n    /**\n     * 返回颜色的八位十六进制值，并且值前面带有#符号.\n     * @param allow4Char 如果可能的话，将十六进制值缩短为4个字符\n     */\n    toHex8String(allow4Char = false) {\n        return '#' + this.toHex8(allow4Char);\n    }\n    /**\n     * 根据颜色的透明度（Alpha值）返回较短的十六进制值，并且值前面带有#符号。\n     * @param allowShortChar 如果可能的话，将十六进制值缩短至3个或4个字符\n     */\n    toHexShortString(allowShortChar = false) {\n        return this.a == 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);\n    }\n    /**\n     * 将当前颜色转换为 RGB（红、绿、蓝）颜色空间的对象表示。\n     * @returns 一个包含 `r`、`g`、`b` 和 `a` 属性的对象，表示当前颜色的 RGB 格式。\n     */\n    toRgb() {\n        return new RGBA({\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        });\n    }\n    /**\n     * 将当前颜色对象转换为CSS风格的RGB或RGBA字符串\n     * @returns {string} 返回一个CSS风格的RGB或RGBA字符串，表示当前颜色对象的颜色值\n     */\n    toRgbString() {\n        const r = Math.round(this.r);\n        const g = Math.round(this.g);\n        const b = Math.round(this.b);\n        return this.a == 1 ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${this.roundA})`;\n    }\n    /**\n     * 将当前颜色转换为百分比表示的 RGB（红、绿、蓝）颜色空间的对象表示。\n     * @returns 一个包含 `r`、`g`、`b` 和 `a` 属性的对象，表示当前颜色的百分比表示的 RGB 格式。\n     */\n    toPercentageRgb() {\n        // 定义一个格式化函数，将颜色值转换为百分比表示\n        const fmt = (x) => { return `${Math.round(bound01(x, 255) * 100)}%`; };\n        // 返回一个RGBA对象，其中颜色值已转换为百分比表示\n        return new RGBAString({\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        });\n    }\n    /**\n     * 将RGBA相对值插值为一个字符串，颜色值以百分比表示。\n     */\n    toPercentageRgbString() {\n        // 定义一个四舍五入函数，将颜色值转换为百分比表示的整数\n        const rnd = (x) => { return Math.round(bound01(x, 255) * 100); };\n        // 根据alpha值返回不同的字符串表示\n        return this.a == 1\n            ? `rgb(${rnd(this.r)}%, ${rnd(this.g)}%, ${rnd(this.b)}%)`\n            : `rgba(${rnd(this.r)}%, ${rnd(this.g)}%, ${rnd(this.b)}%, ${this.roundA})`;\n    }\n    /**\n     * 返回这个颜色的'真实'名称,不存在返回null\n     */\n    toName() {\n        if (this.a == 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return null;\n        }\n        const hex = this.toHexString(); //'#' + rgbToHex(this.r, this.g, this.b, false);\n        return UTS.mapGet(this.reversedNames, hex);\n    }\n    /**\n     * 将颜色转换为字符串表示。\n     *\n     * @param format - 用于显示字符串表示的格式。\n     */\n    // toString<T extends 'name'>(format : T) : string;\n    // toString<T extends LColorFormats>(format ?: T) : string;\n    toString(format = null) {\n        var _a;\n        const formatSet = toBoolean(format);\n        let _format = format !== null && format !== void 0 ? format : this.format;\n        let formattedString = null;\n        const hasAlpha = this.a < 1 && this.a >= 0;\n        const needsAlphaFormat = !formatSet && hasAlpha && (_format != null && _format.startsWith('hex') || _format == 'name');\n        if (needsAlphaFormat) {\n            // 特殊情况：透明度，所有其他非透明度格式都会在有透明度时返回rgba。\n            // 当透明度为0时，返回\"transparent\"。\n            if (_format == 'name' && this.a == 0) {\n                return (_a = this.toName()) !== null && _a !== void 0 ? _a : 'transparent';\n            }\n            return this.toRgbString();\n        }\n        if (_format == 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (_format == 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (_format == 'hex' || _format == 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (_format == 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (_format == 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (_format == 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (_format == 'name') {\n            formattedString = this.toName();\n        }\n        if (_format == 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (_format == 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        if (_format == 'hsb') {\n            formattedString = this.toHsbString();\n        }\n        return formattedString !== null && formattedString !== void 0 ? formattedString : this.toHexString();\n    }\n    toNumber() {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    }\n    clone() {\n        return new TinyColor(this.toString());\n    }\n    /**\n     * 将颜色变浅指定的量。提供100将始终返回白色。\n     * @param amount - 有效值介于1-100之间\n     */\n    lighten(amount = 10) {\n        const hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 将颜色变亮一定的量，范围从0到100。\n     * @param amount - 有效值在1-100之间\n     */\n    brighten(amount = 10) {\n        const rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 将颜色变暗一定的量，范围从0到100。\n     * 提供100将始终返回黑色。\n     * @param amount - 有效值在1-100之间\n     */\n    darken(amount = 10) {\n        const hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 将颜色与纯白色混合，范围从0到100。\n     * 提供0将什么都不做，提供100将始终返回白色。\n     * @param amount - 有效值在1-100之间\n     */\n    tint(amount = 10) {\n        return this.mix('white', amount);\n    }\n    /**\n     * 将颜色与纯黑色混合，范围从0到100。\n     * 提供0将什么都不做，提供100将始终返回黑色。\n     * @param amount - 有效值在1-100之间\n     */\n    shade(amount = 10) {\n        return this.mix('black', amount);\n    }\n    /**\n     * 将颜色的饱和度降低一定的量，范围从0到100。\n     * 提供100与调用greyscale相同\n     * @param amount - 有效值在1-100之间\n     */\n    desaturate(amount = 10) {\n        const hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 将颜色饱和度提高一定数量，范围从 0 到 100。\n     * @param amount - 有效值介于 1 到 100 之间。\n     */\n    saturate(amount = 10) {\n        const hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 将颜色完全去饱和为灰度。\n     * 等同于调用 `desaturate(100)`。\n     */\n    greyscale() {\n        return this.desaturate(100);\n    }\n    /**\n     * spin 方法接收一个正数或负数作为参数，表示色相的变化量，变化范围在 [-360, 360] 之间。\n     * 如果提供的值超出此范围，它将被限制在此范围内。\n     */\n    spin(amount) {\n        const hsl = this.toHsl();\n        const hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 将当前颜色与另一种颜色按给定的比例混合，范围从0到100。\n     * 0表示不混合（返回当前颜色）\n     */\n    mix(color = null, amount = 50) {\n        const rgb1 = this.toRgb();\n        const rgb2 = new TinyColor(color).toRgb();\n        const p = amount / 100;\n        const rgba = new UTSJSONObject({\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        });\n        return new TinyColor(rgba, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 生成一组与当前颜色相似的颜色。\n     * 这些颜色在色相环上是相邻的，形成一个类似于彩虹的颜色序列。\n     * @param results - 要生成的相似颜色的数量，默认值为 6。\n     * @param slices - 将色相环划分为多少个部分，默认值为 30。\n     * @returns 一个包含当前颜色及其相似颜色的 TinyColor 对象数组。\n     */\n    analogous(results = 6, slices = 30) {\n        const hsl = this.toHsl();\n        const part = 360 / slices;\n        const ret = [this];\n        let _results = results;\n        // for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n        // \thsl.h = (hsl.h + part) % 360;\n        // \tret.push(new TinyColor(hsl));\n        // }\n        hsl.h = (hsl.h - ((part * _results) >> 1) + 720) % 360;\n        while (_results > 0) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n            _results--;\n        }\n        return ret;\n    }\n    /**\n     * 计算当前颜色的补色。\n     * 补色是指在色相环上相对位置的颜色，它们的色相差为 180°。\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     * @returns 一个 TinyColor 对象，表示当前颜色的补色。\n     */\n    complement() {\n        const hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl, new LColorOptions({ format: this.format }));\n    }\n    /**\n     * 生成一组与当前颜色具有相同色相和饱和度的颜色。\n     * 这些颜色的亮度值不同，形成一个单色调的颜色序列。\n     * @param results - 要生成的单色调颜色的数量，默认值为 6。\n     * @returns 一个包含当前颜色及其单色调颜色的 TinyColor 对象数组。\n     */\n    monochromatic(results = 6) {\n        const hsv = this.toHsv();\n        const h = hsv.h;\n        const s = hsv.s;\n        let v = hsv.v;\n        const res = [];\n        const modification = 1 / results;\n        let _results = results;\n        // while (results--) {\n        // \tres.push(new TinyColor({ h, s, v }));\n        // \tv = (v + modification) % 1;\n        // }\n        while (_results > 0) {\n            res.push(new TinyColor(new UTSJSONObject({ h, s, v })));\n            v = (v + modification) % 1;\n            _results--;\n        }\n        return res;\n    }\n    /**\n     * 生成当前颜色的分裂补色。\n     * 分裂补色是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 180°。\n     * @returns 一个包含当前颜色及其分裂补色的 TinyColor 对象数组。\n     */\n    splitcomplement() {\n        const hsl = this.toHsl();\n        const h = hsl.h;\n        return [\n            this,\n            new TinyColor(new UTSJSONObject({ h: (h + 72) % 360, s: hsl.s, l: hsl.l })),\n            new TinyColor(new UTSJSONObject({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })),\n        ];\n    }\n    /**\n     * 计算当前颜色在给定背景颜色上的显示效果。\n     * @param background - 背景颜色，可以是任何 LColorInput 类型的值。\n     * @returns 一个 TinyColor 对象，表示当前颜色在给定背景颜色上的显示效果。\n     */\n    onBackground(background = null) {\n        const fg = this.toRgb();\n        const bg = new TinyColor(background).toRgb();\n        const alpha = fg.a + bg.a * (1 - fg.a);\n        return new TinyColor(new UTSJSONObject({\n            r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,\n            g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,\n            b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,\n            a: alpha,\n        }));\n    }\n    /**\n     * 生成当前颜色的三色调。\n     * 三色调是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 120°。\n     * 这是 `polyad(3)` 方法的别名。\n     * @returns 一个包含当前颜色及其三色调颜色的 TinyColor 对象数组。\n     */\n    triad() {\n        return this.polyad(3);\n    }\n    /**\n     * 生成当前颜色的四色调。\n     * 四色调是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 90°。\n     * 这是 `polyad(4)` 方法的别名。\n     * @returns 一个包含当前颜色及其四色调颜色的 TinyColor 对象数组。\n     */\n    tetrad() {\n        return this.polyad(4);\n    }\n    /**\n     * 生成当前颜色的 n 色调。\n     * n 色调是指在色相环上位于当前颜色的两侧的颜色，它们的色相差为 360° / n。\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     * @param n - 一个整数，表示要生成的色调数量。\n     * @returns 一个包含当前颜色及其 n 色调颜色的 TinyColor 对象数组。\n     */\n    polyad(n) {\n        const hsl = this.toHsl();\n        const h = hsl.h;\n        const result = [this];\n        const increment = 360 / n;\n        for (let i = 1; i < n; i++) {\n            result.push(new TinyColor(new UTSJSONObject({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l })));\n        }\n        return result;\n    }\n    /**\n     * 比较当前颜色与给定颜色是否相等。\n     * @param color - 一个 LColorInput 类型的值，表示要比较的颜色。\n     * @returns 一个布尔值，表示当前颜色与给定颜色是否相等。\n     */\n    equals(other = null) {\n        if (other == null) {\n            return false;\n        }\n        else if (UTS.isInstanceOf(other, TinyColor)) {\n            return this.toRgbString() == other.toRgbString();\n        }\n        return this.toRgbString() == new TinyColor(other).toRgbString();\n    }\n}\nexport function tinyColor(color = '', opts = new LColorOptions({})) {\n    return new TinyColor(color, opts);\n}\n//# sourceMappingURL=/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/common/color.uts.js.map","references":["/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/common/conversion.uts","/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/common/css-color-names.uts","/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/common/format-input.uts","/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/common/util.uts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"color.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"color.uts\"],\"names\":[],\"mappings\":\"AAAA,cAAc;AACd,OAAO,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAC5F,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAC1C,OAAO,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAiB,aAAa,EAAe,4BAAgC;AACnJ,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAE3E,MAAM,OAAO,SAAS;IAmBrB,YAAY,QAAsB,EAAE,EAAE,yBAAuB,EAAmB,CAAA;;QAC/E,IAAI,MAAM,GAAS,KAAK,CAAA;QACxB,kCAAkC;QAClC,6BAA6B;QAC7B,KAAK;QACL,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACpB,MAAM,GAAG,mBAAmB,CAAC,KAAe,CAAC,CAAC;SAC9C;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAC5B,MAAM,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,GAAG,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAEtC,gCAAgC;QAChC,uBAAuB;QACvB,2BAA2B;QAC3B,yDAAyD;QACzD,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;QAED,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACf,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;QAED,IAAI,CAAC,OAAO,GAAG,MAAA,GAAG,CAAC,EAAE,mCAAI,KAAK,CAAC;QAG/B,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAkB,CAAA;QAC9C,KAAK,CAAC,OAAO,CAAC,CAAC,KAAc,EAAE,GAAY;YAC1C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;QACnC,CAAC,CAAC,CAAA;IAEH,CAAC;IACD;;;OAGG;IACH,MAAM;QACL,OAAO,IAAI,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC;IACnC,CAAC;IACD;;;OAGG;IACH,OAAO;QACN,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,aAAa;QACZ,2CAA2C;QAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;IACzD,CAAC;IACD;;;;OAIG;IACH,YAAY;QACX,sEAAsE;QACtE,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAU,CAAC;QACf,IAAI,CAAU,CAAC;QACf,IAAI,CAAU,CAAC;QACf,MAAM,KAAK,GAAY,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACnC,MAAM,KAAK,GAAY,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACnC,MAAM,KAAK,GAAY,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAEnC,IAAI,KAAK,IAAI,OAAO,EAAE;YACrB,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;SAClB;aAAM;YACN,0DAA0D;YAC1D,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;SAC3C;QAED,IAAI,KAAK,IAAI,OAAO,EAAE;YACrB,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;SAClB;aAAM;YACN,0DAA0D;YAC1D,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;SAC3C;QAED,IAAI,KAAK,IAAI,OAAO,EAAE;YACrB,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;SAClB;aAAM;YACN,0DAA0D;YAC1D,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;SAC3C;QAED,OAAO,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED;;;;OAIG;IACH,QAAQ;QACP,OAAO,IAAI,CAAC,CAAC,CAAC;IACf,CAAC;IASD,QAAQ,CAAC,YAAY;QACpB,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC7C,OAAO,IAAI,CAAC;IACb,CAAC;IACD;;;;OAIG;IACH,YAAY;QACH,MAAA,CAAC,GAAK,IAAI,CAAC,KAAK,EAAE,EAAjB,CAAkB;QAC3B,OAAO,CAAC,IAAI,CAAC,CAAC;IACf,CAAC;IAED;;;OAGG;IACH,KAAK;QACJ,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,gBAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAU,EAAC;IAClE,CAAC;IAED;;;OAGG;IACH,WAAW;QACV,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC;IAC7F,CAAC;IAED;;;OAGG;IACH,KAAK;QACJ,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,gBAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAU,EAAC;IAClE,CAAC;IACD;;;OAGG;IACH,WAAW;QACV,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC;YACjB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;YAC3B,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC;IAC/C,CAAC;IACD;;;OAGG;IACH,KAAK;QACJ,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,gBAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAU,EAAC;IAClE,CAAC;IAED;;;OAGG;IACH,WAAW;QACV,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC;IAC7F,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,UAAU,GAAG,KAAK;QACvB,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACrD,CAAC;IACD;;;;OAIG;IACH,WAAW,CAAC,UAAU,GAAG,KAAK;QAC7B,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IACD;;;OAGG;IACH,MAAM,CAAC,UAAU,GAAG,KAAK;QACxB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IAC9D,CAAC;IACD;;;OAGG;IACH,YAAY,CAAC,UAAU,GAAG,KAAK;QAC9B,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IACD;;;OAGG;IACH,gBAAgB,CAAC,cAAc,GAAG,KAAK;QACtC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IAC3F,CAAC;IACD;;;OAGG;IACH,KAAK;QACJ,gBAAO;YACN,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACrB,CAAC,EAAE,IAAI,CAAC,CAAC;SACD,EAAC;IACX,CAAC;IAED;;;OAGG;IACH,WAAW;QACV,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC;IACzF,CAAC;IACD;;;OAGG;IACH,eAAe;QACd,yBAAyB;QACzB,MAAM,GAAG,GAAG,CAAC,CAAU,OAAc,OAAA,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAvC,CAAuC,CAAC;QAC7E,4BAA4B;QAC5B,sBAAO;YACN,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,CAAC,EAAE,IAAI,CAAC,CAAC;SACK,EAAC;IACjB,CAAC;IACD;;OAEG;IACH,qBAAqB;QACpB,6BAA6B;QAC7B,MAAM,GAAG,GAAG,CAAC,CAAU,OAAc,OAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAjC,CAAiC,CAAC;QACvE,qBAAqB;QACrB,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC;YACjB,CAAC,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;YAC1D,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM,GAAG,CAAC;IAC9E,CAAC;IACD;;OAEG;IACH,MAAM;QACL,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,aAAa,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;YACf,OAAO,IAAI,CAAC;SACZ;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA,CAAA,gDAAgD;QAa9E,kBAAO,IAAI,CAAC,aAAa,EAAK,GAAG,EAAC;IAEnC,CAAC;IACD;;;;OAIG;IACH,mDAAmD;IACnD,2DAA2D;IAO3D,QAAQ,CAAC,aAAuB;;QAC/B,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,IAAI,CAAC,MAAM,CAAC;QAEpC,IAAI,eAAe,GAAmB,IAAI,CAAC;QAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,gBAAgB,GAAG,CAAC,SAAS,IAAI,QAAQ,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC;QAEvH,IAAI,gBAAgB,EAAE;YACrB,qCAAqC;YACrC,2BAA2B;YAC3B,IAAI,OAAO,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;gBACrC,OAAO,MAAA,IAAI,CAAC,MAAM,EAAE,mCAAI,aAAa,CAAC;aACtC;YACD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC1B;QAED,IAAI,OAAO,IAAI,KAAK,EAAE;YACrB,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACrC;QAED,IAAI,OAAO,IAAI,MAAM,EAAE;YACtB,eAAe,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC/C;QAED,IAAI,OAAO,IAAI,KAAK,IAAI,OAAO,IAAI,MAAM,EAAE;YAC1C,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACrC;QAED,IAAI,OAAO,IAAI,MAAM,EAAE;YACtB,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,IAAI,OAAO,IAAI,MAAM,EAAE;YACtB,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC1C;QAED,IAAI,OAAO,IAAI,MAAM,EAAE;YACtB,eAAe,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;SACtC;QAED,IAAI,OAAO,IAAI,MAAM,EAAE;YACtB,eAAe,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SAChC;QAED,IAAI,OAAO,IAAI,KAAK,EAAE;YACrB,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACrC;QAED,IAAI,OAAO,IAAI,KAAK,EAAE;YACrB,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACrC;QACD,IAAI,OAAO,IAAI,KAAK,EAAE;YACrB,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SACrC;QACD,OAAO,eAAe,aAAf,eAAe,cAAf,eAAe,GAAI,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9C,CAAC;IACD,QAAQ;QACP,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpF,CAAC;IACD,KAAK;QACJ,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvC,CAAC;IACD;;;OAGG;IACH,OAAO,CAAC,MAAM,GAAG,EAAE;QAClB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC;QACtB,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;OAGG;IACH,QAAQ,CAAC,MAAM,GAAG,EAAE;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9E,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;;OAIG;IACH,MAAM,CAAC,MAAM,GAAG,EAAE;QACjB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC;QACtB,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;;OAIG;IACH,IAAI,CAAC,MAAM,GAAG,EAAE;QACf,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IACD;;;;OAIG;IACH,KAAK,CAAC,MAAM,GAAG,EAAE;QAChB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IACD;;;;OAIG;IACH,UAAU,CAAC,MAAM,GAAG,EAAE;QACrB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC;QACtB,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;OAGG;IACH,QAAQ,CAAC,MAAM,GAAG,EAAE;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,GAAG,CAAC;QACtB,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;OAGG;IACH,SAAS;QACR,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IACD;;;OAGG;IACH,IAAI,CAAC,MAAe;QACnB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QACnC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAClC,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;OAGG;IACH,GAAG,CAAC,YAAmB,EAAE,MAAM,GAAG,EAAE;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1B,MAAM,IAAI,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;QAE1C,MAAM,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC;QACvB,MAAM,IAAI,qBAAG;YACZ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;YACjC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;YACjC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;YACjC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;SACjC,CAAA,CAAC;QAEF,OAAO,IAAI,SAAS,CAAC,IAAI,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACtE,CAAC;IACD;;;;;;OAMG;IACH,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE,MAAM,GAAG,EAAE;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,MAAM,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC;QAC1B,MAAM,GAAG,GAAiB,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,OAAO,CAAA;QACtB,4EAA4E;QAC5E,iCAAiC;QACjC,iCAAiC;QACjC,IAAI;QACJ,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QACvD,OAAO,QAAQ,GAAG,CAAC,EAAE;YACpB,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;YAC7B,GAAG,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7B,QAAQ,EAAE,CAAC;SACX;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IACD;;;;;OAKG;IACH,UAAU;QACT,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;QAC5B,OAAO,IAAI,SAAS,CAAC,GAAG,oBAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAmB,EAAC,CAAC;IACrE,CAAC;IACD;;;;;OAKG;IACH,aAAa,CAAC,OAAO,GAAG,CAAC;QACxB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACjB,MAAA,CAAC,GAAK,GAAG,EAAR,CAAS;QACV,MAAA,CAAC,GAAK,GAAG,EAAR,CAAS;QACZ,IAAA,CAAC,GAAK,GAAG,EAAR,CAAS;QAChB,MAAM,GAAG,GAAiB,EAAE,CAAC;QAC7B,MAAM,YAAY,GAAG,CAAC,GAAG,OAAO,CAAC;QACjC,IAAI,QAAQ,GAAG,OAAO,CAAA;QACtB,sBAAsB;QACtB,yCAAyC;QACzC,+BAA+B;QAC/B,IAAI;QACJ,OAAO,QAAQ,GAAG,CAAC,EAAE;YACpB,GAAG,CAAC,IAAI,CAAC,IAAI,SAAS,mBAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAC,CAAC,CAAC;YACrC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;YAC3B,QAAQ,EAAE,CAAA;SACV;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IACD;;;;OAIG;IACH,eAAe;QACd,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACjB,MAAA,CAAC,GAAK,GAAG,EAAR,CAAS;QAClB,OAAO;YACN,IAAI;YACJ,IAAI,SAAS,mBAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAC;YACxD,IAAI,SAAS,mBAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAC;SAC1C,CAAC;IAClB,CAAC;IACD;;;;OAIG;IACH,YAAY,CAAC,iBAAwB;QACpC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACxB,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;QAC7C,MAAM,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAEvC,OAAO,IAAI,SAAS,mBAAC;YACpB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;YACnD,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;YACnD,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;YACnD,CAAC,EAAE,KAAK;SACR,EAAC,CAAC;IACJ,CAAC;IACD;;;;;OAKG;IACH,KAAK;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IACD;;;;;OAKG;IACH,MAAM;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IACD;;;;;;;OAOG;IACH,MAAM,CAAC,CAAU;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACjB,MAAA,CAAC,GAAK,GAAG,EAAR,CAAS;QAElB,MAAM,MAAM,GAAiB,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,SAAS,mBAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC;SACjF;QAED,OAAO,MAAM,CAAC;IACf,CAAC;IACD;;;;OAIG;IAGH,MAAM,CAAC,YAAoB;QAC1B,IAAI,KAAK,IAAI,IAAI,EAAE;YAClB,OAAO,KAAK,CAAA;SACZ;aAAM,qBAAI,KAAK,EAAY,SAAS,GAAE;YACtC,OAAO,IAAI,CAAC,WAAW,EAAE,IAAK,KAAmB,CAAC,WAAW,EAAE,CAAA;SAC/D;QACD,OAAO,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;IACjE,CAAC;CAYD;AAED,MAAM,UAAU,SAAS,CAAC,QAAsB,EAAE,EAAE,yBAAuB,EAAmB,CAAA;IAC7F,OAAO,IAAI,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACnC,CAAC\"}"}
