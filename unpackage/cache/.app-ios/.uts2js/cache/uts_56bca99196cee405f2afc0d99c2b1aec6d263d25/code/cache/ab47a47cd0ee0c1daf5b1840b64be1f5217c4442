{"code":"// import {isNumber} from '@/uni_modules/lime-shared/isNumber'\n// import {isString} from '@/uni_modules/lime-shared/isString'\n// import {isNumeric} from '@/uni_modules/lime-shared/isNumeric'\nexport function isNumber(value = null) {\n    return ['Int8', 'UInt8', 'Int16', 'UInt16', 'Int32', 'UInt32', 'Int64', 'UInt64', 'Int', 'UInt', 'Float', 'Float16', 'Float32', 'Float64', 'Double', 'number'].includes(typeof value);\n}\nexport function isString(value = null) {\n    return typeof value == 'string';\n}\nexport function isNumeric(value = null) {\n    if (isNumber(value)) {\n        return true;\n    }\n    else if (isString(value)) {\n        // const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\n        const regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\");\n        return regex.test(value); //regex.matches(value as string) \n    }\n    return false;\n}\nexport function toBoolean(value = null) {\n    // 根据输入值的类型，返回相应的布尔值\n    if (isNumber(value)) {\n        return value != 0;\n    }\n    if (isString(value)) {\n        return `${value}`.length > 0;\n    }\n    if (typeof value == 'boolean') {\n        return value;\n    }\n    return value != null;\n}\n/**\n * Check to see if string passed in is a percentage\n * 检查传入的字符串是否为百分比\n * @hidden\n */\nexport function isPercentage(n = null) {\n    return isString(n) && n.indexOf('%') != -1;\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * 需要处理 1.0 为 100%，因为一旦它是数字，它与 1 没有区别\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n = null) {\n    return isString(n) && n.indexOf('.') != -1 && parseFloat(n) == 1;\n}\nfunction bound01(n = null, max) {\n    if (!(isNumber(n) || isString(n))) {\n        return 1;\n    }\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    const isPercent = isPercentage(n);\n    n = (isNumber(n) ? n : parseFloat(n));\n    n = max == 360 ? n : Math.min(max, Math.max(0, n));\n    // Automatically convert percentage into number\n    // 自动将百分比转换为数字\n    if (isPercent) {\n        n = parseInt(`${Math.min(n, 100) * max}`, 10) / 100;\n    }\n    // Handle floating point rounding errors\n    //  处理浮点数舍入误差\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    // 如果它还不是，将其转换为 [0, 1] 范围\n    if (max == 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        // 如果 n 是以度为单位的色调，\n        // 将超出范围的值环绕到 [0, 360] 范围内\n        // 然后将其转换为 [0, 1]。\n        n = (n < 0 ? (n % max) + max : n % max) / max; // parseFloat(`${max}`);\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        // 如果 n 不是以度为单位的色调\n        // 如果它还不是，将其转换为 [0, 1] 范围。\n        n = (n % max) / max; //parseFloat(`${max}`);\n    }\n    return n;\n}\nexport { bound01 };\n/**\n * Force a number between 0 and 1\n * 在 0 和 1 之间强制一个数字\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\nfunction boundAlpha(a = null) {\n    let n = a == null ? 1 : (isString(a) ? parseFloat(a) : a);\n    if (isNaN(n) || n < 0 || n > 1) {\n        n = 1;\n    }\n    return n;\n}\nexport { boundAlpha };\nfunction convertToPercentage(n = null) {\n    n = isNumeric(n) ? parseFloat(`${n}`) : n; // as number\n    if (isNumber(n) && n <= 1) {\n        return `${n * 100}%`.replace('.0%', '%');\n    }\n    return n;\n}\nexport { convertToPercentage };\n/**\n * Force a hex value to have 2 characters\n * 强制使十六进制值具有 2 个字符\n * @hidden\n */\nexport function pad2(c) {\n    //c.padStart(2, '0');//\n    return c.length == 1 ? '0' + c : `${c}`;\n}\n//# sourceMappingURL=/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/common/util.uts.js.map","references":[],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"util.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"util.uts\"],\"names\":[],\"mappings\":\"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\"}"}
