{"code":"import { unitConvert } from '@/uni_modules/lime-shared/unitConvert';\nexport class DrawBorderOptions extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    direction: { type: \"Unknown\", optional: false },\n                    color: { type: String, optional: true },\n                    colorKey: { type: String, optional: true },\n                    startOffsetKey: { type: String, optional: true },\n                    startOffset: { type: \"Unknown\", optional: true },\n                    endOffset: { type: \"Unknown\", optional: true },\n                    lineWidth: { type: Number, optional: true },\n                    watchSize: { type: Boolean, optional: true },\n                    immediate: { type: Boolean, optional: true },\n                    bordered: { type: Boolean, optional: true }\n                };\n            },\n            name: \"DrawBorderOptions\"\n        };\n    }\n    constructor(options, metadata = DrawBorderOptions.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.direction = this.__props__.direction;\n        this.color = this.__props__.color;\n        this.colorKey = this.__props__.colorKey;\n        this.startOffsetKey = this.__props__.startOffsetKey;\n        this.startOffset = this.__props__.startOffset;\n        this.endOffset = this.__props__.endOffset;\n        this.lineWidth = this.__props__.lineWidth;\n        this.watchSize = this.__props__.watchSize;\n        this.immediate = this.__props__.immediate;\n        this.bordered = this.__props__.bordered;\n        delete this.__props__;\n    }\n}\nexport class UseDrawBorderReturn extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    color: { type: \"Unknown\", optional: false },\n                    renderBorder: { type: \"Unknown\", optional: false },\n                    clearBorder: { type: \"Unknown\", optional: false },\n                    dispose: { type: \"Unknown\", optional: false }\n                };\n            },\n            name: \"UseDrawBorderReturn\"\n        };\n    }\n    constructor(options, metadata = UseDrawBorderReturn.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.color = this.__props__.color;\n        this.renderBorder = this.__props__.renderBorder;\n        this.clearBorder = this.__props__.clearBorder;\n        this.dispose = this.__props__.dispose;\n        delete this.__props__;\n    }\n}\n/**\n * 在元素上绘制边框，并支持动态监听尺寸变化\n * @param elementRef 目标元素的 Ref\n * @param options 边框配置\n * @returns 清理函数（用于卸载时取消监听）\n */\nexport function useDrawBorder(elementRef, options) {\n    var _a, _b;\n    let resizeObserver = null;\n    const _c = options.watchSize, watchSize = _c == void 0 ? true : _c, _d = options.immediate, immediate = _d == void 0 ? true : _d;\n    const defalutColor = '#e7e7e7';\n    const color = ref((_a = options.color) !== null && _a !== void 0 ? _a : defalutColor);\n    const bordered = ref((_b = options.bordered) !== null && _b !== void 0 ? _b : true);\n    let computedStartOffset = 0;\n    let computedEndOffset = 0;\n    // 绘制边框\n    const renderBorder = () => {\n        var _a, _b, _c, _d;\n        if (elementRef.value == null)\n            return null;\n        const ctx = elementRef.value.getDrawableContext();\n        if (ctx == null)\n            return null;\n        const rect = elementRef.value.getBoundingClientRect();\n        ctx.reset();\n        const direction = options.direction, _e = options.startOffset, startOffset = _e == void 0 ? 0 : _e, _f = options.endOffset, endOffset = _f == void 0 ? 0 : _f, _g = options.lineWidth, lineWidth = _g == void 0 ? 0.5 : _g, colorKey = options.colorKey, startOffsetKey = options.startOffsetKey;\n        // 转换单位（如果是字符串，如 '10px'）\n        if (computedStartOffset == 0) {\n            computedStartOffset = unitConvert((startOffsetKey != null ? (_b = (_a = elementRef.value) === null || _a === void 0 ? null : _a.style.getPropertyValue(startOffsetKey)) !== null && _b !== void 0 ? _b : startOffset : startOffset));\n        }\n        if (computedEndOffset == 0) {\n            computedEndOffset = unitConvert(endOffset);\n        }\n        if (color.value == defalutColor && colorKey != null) {\n            color.value = (_d = (_c = elementRef.value) === null || _c === void 0 ? null : _c.style.getPropertyValue(colorKey)) !== null && _d !== void 0 ? _d : defalutColor;\n            // if(color.value.length == 0) {\n            // \tcolor.value = defalutColor\n            // }\n        }\n        ctx.strokeStyle = color.value;\n        ctx.lineWidth = lineWidth;\n        // 根据方向计算坐标\n        switch (direction) {\n            case 'top':\n                ctx.moveTo(computedStartOffset, 0);\n                ctx.lineTo(rect.width - computedEndOffset, 0);\n                break;\n            case 'bottom':\n                ctx.moveTo(computedStartOffset, rect.height - 0.25);\n                ctx.lineTo(rect.width - computedEndOffset, rect.height - 0.25);\n                break;\n            case 'left':\n                ctx.moveTo(0, computedStartOffset);\n                ctx.lineTo(0, rect.height - computedEndOffset);\n                break;\n            case 'right':\n                ctx.moveTo(rect.width, computedStartOffset);\n                ctx.lineTo(rect.width, rect.height - computedEndOffset);\n                break;\n        }\n        ctx.stroke();\n        ctx.update();\n    };\n    const setupResizeObserver = () => {\n        // 监听尺寸变化（如果启用）\n        if (watchSize) {\n            if (resizeObserver == null) {\n                resizeObserver = new UniResizeObserver((entries) => {\n                    if (!bordered.value)\n                        return null;\n                    renderBorder();\n                });\n            }\n            watchEffect(() => {\n                if (elementRef.value != null) {\n                    resizeObserver.observe(elementRef.value);\n                }\n            });\n        }\n    };\n    // 清理函数（卸载时取消监听）\n    const dispose = () => {\n        if (resizeObserver != null && elementRef.value != null) {\n            // resizeObserver.unobserve(elementRef.value!);\n            resizeObserver.disconnect();\n            resizeObserver = null;\n        }\n    };\n    const clearBorder = () => {\n        if (elementRef.value == null)\n            return null;\n        const ctx = elementRef.value.getDrawableContext();\n        if (ctx == null)\n            return null;\n        bordered.value = false;\n        ctx.reset();\n        ctx.update();\n    };\n    setupResizeObserver();\n    // 初始绘制\n    if (immediate) {\n        renderBorder();\n    }\n    return new UseDrawBorderReturn({\n        renderBorder,\n        dispose,\n        clearBorder,\n        color\n    });\n}\n//# sourceMappingURL=/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-style/hairline.uts.js.map","references":["/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-shared/unitConvert/index.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"hairline.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"hairline.uts\"],\"names\":[],\"mappings\":\"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\"}"}
