{"code":"// @ts-nocheck\nimport { DayutsConfig, DayutsObject } from '../utssdk/interface';\nimport { REGEX_FORMAT, REGEX_PARSE, INVALID_DATE_STRING, M, Y, W, D, DATE, H, MIN, S, MS, Q, MILLISECONDS_A_MINUTE, MILLISECONDS_A_HOUR, MILLISECONDS_A_SECOND, MILLISECONDS_A_WEEK, MILLISECONDS_A_DAY, FORMAT_DEFAULT } from './constant';\nimport { isNumber, prettyUnit, padStart, padZoneStr, monthDiff, absFloor } from './utils';\nimport { dayutsIntl, localeState } from './use';\nfunction parseLocale(preset, object = null, isLocal = false) {\n    let l = null;\n    if (preset == null)\n        return dayutsIntl.locale;\n    if (typeof preset == 'string') {\n        const presetLower = preset.toLowerCase();\n        if (dayutsIntl.has(presetLower)) {\n            l = presetLower;\n        }\n        if (object != null) {\n            dayutsIntl.set(presetLower, object);\n            l = presetLower;\n        }\n        const presetSplit = preset.split('-');\n        if (l == null && presetSplit.length > 1) {\n            return parseLocale(presetSplit[0]);\n        }\n    }\n    else if (preset instanceof DayutsLocale) {\n        // const { name } = preset as DayutsLocale\n        dayutsIntl.set(preset.name, preset);\n        l = preset.name;\n    }\n    if (!isLocal && l != null) {\n        // L = l\n        dayutsIntl.locale = l;\n    }\n    // return l ?? L //(!isLocal && L != null)\n    return l !== null && l !== void 0 ? l : dayutsIntl.locale; //(!isLocal && L != null)\n}\nfunction tryParseNumberAtIndex(digits, index) {\n    // 检查索引是否在数组范围内\n    if (index >= 0 && index < digits.length) {\n        if (digits[index] == null)\n            return null;\n        // 尝试解析索引位置的字符串为数字\n        const parsedNumber = isNumber(digits[index]) ? digits[index] : parseInt(`${digits[index]}`, 10);\n        // 检查解析结果是否为有效数字\n        if (!isNaN(parsedNumber)) {\n            return parsedNumber;\n        }\n    }\n    return null;\n}\n// function createDateFromArray(d: number[]):Date\n// function createDateFromArray(d: string[]):Date\nfunction createDateFromArray(d, offset = 0) {\n    var _a, _b, _c, _e, _f, _g, _h;\n    const year = (_a = tryParseNumberAtIndex(d, 1 - offset)) !== null && _a !== void 0 ? _a : new Date().getFullYear();\n    const month = ((_b = tryParseNumberAtIndex(d, 2 - offset)) !== null && _b !== void 0 ? _b : 1) - 1;\n    const day = (_c = tryParseNumberAtIndex(d, 3 - offset)) !== null && _c !== void 0 ? _c : 1;\n    const hour = (_e = tryParseNumberAtIndex(d, 4 - offset)) !== null && _e !== void 0 ? _e : 0;\n    const minute = (_f = tryParseNumberAtIndex(d, 5 - offset)) !== null && _f !== void 0 ? _f : 0;\n    const second = (_g = tryParseNumberAtIndex(d, 6 - offset)) !== null && _g !== void 0 ? _g : 0;\n    const millisecond = ((_h = tryParseNumberAtIndex(d, 7 - offset)) !== null && _h !== void 0 ? _h : 0).toString().substring(0, 3); //d.length > 7 ? parseInt((d[7] ?? '0').substring(0, 3)) : 0\n    return new Date(year, month, day, hour, minute, second, parseInt(millisecond));\n}\nfunction parseDate(cfg) {\n    const date = cfg.date;\n    if (date == null)\n        return new Date();\n    if (date instanceof Date)\n        return date;\n    try {\n        if (typeof date == 'string' && /^\\d+$/.test(date)) {\n            return new Date(parseInt(`${date}`.padEnd(13, '0')));\n        }\n        if (typeof date == 'string' && !/Z$/i.test(date)) {\n            const d = date.match(REGEX_PARSE);\n            const isNull = d == null || Array.isArray(d) && d.length == 0;\n            if (!isNull) {\n                return createDateFromArray(d);\n            }\n        }\n        if (typeof date == 'string')\n            return new Date(date);\n        if (Array.isArray(date)) {\n            return createDateFromArray(date, 1);\n        }\n        if (isNumber(date))\n            return new Date(date);\n        return null; //new Date()\n    }\n    catch (err) {\n        return null; //new Date()\n    }\n}\nfunction wrapper(date, instance) {\n    return dayuts(date, instance.$L);\n}\nexport class Dayuts {\n    constructor(cfg) {\n        var _a;\n        this.valid = true;\n        this.$d = new Date();\n        this.$y = 0;\n        this.$M = 0;\n        this.$D = 0;\n        this.$W = 0;\n        this.$H = 0;\n        this.$m = 0;\n        this.$s = 0;\n        this.$ms = 0;\n        this.$u = false;\n        this.$L = (_a = parseLocale(cfg.locale)) !== null && _a !== void 0 ? _a : dayutsIntl.locale; //'en'\n        this.parse(cfg);\n    }\n    parse(cfg) {\n        const _d = parseDate(cfg);\n        if (_d != null) {\n            this.$d = parseDate(cfg);\n            this.init();\n        }\n        else {\n            this.valid = false;\n        }\n    }\n    init() {\n        const $d = this.$d;\n        this.$y = $d.getFullYear();\n        this.$M = $d.getMonth();\n        this.$D = $d.getDate();\n        this.$W = $d.getDay();\n        this.$H = $d.getHours();\n        this.$m = $d.getMinutes();\n        this.$s = $d.getSeconds();\n        this.$ms = $d.getMilliseconds();\n    }\n    /**\n     * 检查日期对象是否有效。\n     *\n     * @returns {boolean} 如果日期对象有效，则返回true；否则返回false。\n     */\n    isValid() {\n        return this.valid;\n        // return !(this.$d.toString() == INVALID_DATE_STRING)\n    }\n    isSame(input, units = 'millisecond') {\n        const other = input instanceof Dayuts ? input : dayuts(input);\n        const date1 = this.startOf(units).valueOf();\n        const date2 = other.valueOf();\n        const date3 = this.endOf(units).valueOf();\n        return date1 <= date2 && date2 <= date3;\n    }\n    isAfter(input, units = 'millisecond') {\n        const other = input instanceof Dayuts ? input : dayuts(input);\n        const date1 = other.valueOf();\n        const date2 = this.startOf(units).valueOf();\n        return date1 < date2;\n    }\n    isBefore(input, units = 'millisecond') {\n        const other = input instanceof Dayuts ? input : dayuts(input);\n        const date1 = other.valueOf();\n        const date2 = this.endOf(units).valueOf();\n        return date2 < date1;\n    }\n    isSameOrBefore(input, units = 'millisecond') {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n    isSameOrAfter(input, units = 'millisecond') {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n    /**\n     * 判断当前Dayuts对象是否在给定的两个时间之间\n     * @param {any} input - 第一个时间输入\n     * @param {any} input2 - 第二个时间输入\n     * @param {DayutsUnit} units - 指定的时间单位\n     * @param {string} interval - 区间符号，表示区间的开闭性，默认为'()'，表示开区间\n     * @returns {boolean} - 如果当前Dayuts对象在给定的两个时间之间，则返回true，否则返回false\n     */\n    isBetween(input, input2, units = 'millisecond', interval = '()') {\n        const dA = dayuts(input);\n        const dB = dayuts(input2);\n        const dAi = interval.startsWith('(');\n        const dBi = interval.endsWith(')');\n        return ((dAi ? this.isAfter(dA, units) : !this.isBefore(dA, units)) &&\n            (dBi ? this.isBefore(dB, units) : !this.isAfter(dB, units)))\n            || ((dAi ? this.isBefore(dA, units) : !this.isAfter(dA, units)) &&\n                (dBi ? this.isAfter(dB, units) : !this.isBefore(dB, units)));\n    }\n    /**\n     * 判断当前Dayuts对象所在的年份是否为闰年\n     * @returns {boolean} - 如果当前Dayuts对象所在的年份是闰年，则返回true，否则返回false\n     */\n    isLeapYear() {\n        return ((this.$y % 4 == 0) && (this.$y % 100 != 0)) || (this.$y % 400 == 0);\n    }\n    isToday() {\n        const comparisonTemplate = 'YYYY-MM-DD';\n        const now = dayuts();\n        return this.format(comparisonTemplate) == now.format(comparisonTemplate);\n    }\n    /**\n     * 获取当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\n     *\n     * @returns {number} 返回当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\n     */\n    unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n    /**\n     * 将当前日期设置为指定时间单位的开始或结束。\n     *\n     * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\n     * @param {boolean} startOf - 如果为true，则设置为开始；如果为false，则设置为结束。\n     * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\n     */\n    startOf(units, startOf = true) {\n        var _a;\n        const isStartOf = startOf;\n        const unit = prettyUnit(units);\n        // instanceFactory 函数用于创建一个新的 Dayuts 对象，表示给定日期的开始或结束。\n        // 参数 d 和 m 分别表示日期和月份。\n        const instanceFactory = (d, m) => {\n            const ins = dayuts(new Date(this.$y, m, d));\n            return isStartOf ? ins : ins.endOf(D);\n        };\n        // instanceFactorySet 函数用于创建一个新的 Dayuts 对象，表示调整后的时间。\n        // 参数 method 表示要调用的 Date 对象的方法（如 'setHours'），slice 表示要调整的时间部分的索引。\n        const instanceFactorySet = (method, slice) => {\n            // 定义表示开始和结束时间的参数数组。\n            const argumentStart = [0, 0, 0, 0];\n            const argumentEnd = [23, 59, 59, 999];\n            // 根据 isStartOf 的值，选择开始或结束时间的参数数组，并调用 Date 对象的方法。\n            const args = (isStartOf ? argumentStart : argumentEnd).slice(slice);\n            const date = this.toDate();\n            if (method == 'setHours') {\n                date.setHours(args[0]);\n                date.setMinutes(args[1]);\n                date.setSeconds(args[2]);\n                date.setMilliseconds(args[3]);\n            }\n            else if (method == 'setMinutes') {\n                date.setMinutes(args[0]);\n                date.setSeconds(args[1]);\n                date.setMilliseconds(args[2]);\n            }\n            else if (method == 'setSeconds') {\n                date.setSeconds(args[0]);\n                date.setMilliseconds(args[1]);\n            }\n            else if (method == 'setMilliseconds') {\n                date.setMilliseconds(args[0]);\n            }\n            return dayuts(date);\n        };\n        const _b = this, $W = _b.$W, $M = _b.$M, $D = _b.$D;\n        const utcPad = `set${this.$u ? 'UTC' : ''}`;\n        if (unit == Y) {\n            return isStartOf ? instanceFactory(1, 0) : instanceFactory(31, 11);\n        }\n        else if (unit == M) {\n            return isStartOf ? instanceFactory(1, $M) : instanceFactory(0, $M + 1);\n        }\n        else if (unit == W) {\n            const weekStart = (_a = this.$locale().weekStart) !== null && _a !== void 0 ? _a : 0;\n            const gap = ($W < weekStart ? $W + 7 : $W) - weekStart;\n            return instanceFactory(isStartOf ? $D - gap : $D + (6 - gap), $M);\n        }\n        else if (unit == D || unit == DATE) {\n            return instanceFactorySet(`${utcPad}Hours`, 0);\n        }\n        else if (unit == H) {\n            return instanceFactorySet(`${utcPad}Minutes`, 1);\n        }\n        else if (unit == MIN) {\n            return instanceFactorySet(`${utcPad}Seconds`, 2);\n        }\n        else if (unit == S) {\n            return instanceFactorySet(`${utcPad}Milliseconds`, 3);\n        }\n        else {\n            return this.clone();\n        }\n    }\n    /**\n     * 将当前日期设置为指定时间单位的结束。\n     *\n     * @param {string} arg - 时间单位，例如'year'、'month'、'day'等。\n     * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\n     */\n    endOf(units) {\n        return this.startOf(units, false);\n    }\n    /**\n     * 设置指定的时间单位的值。\n     *\n     * @param {string} units - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @param {number} int - 要设置的值。\n     * @returns {Dayuts} 返回当前对象。\n     */\n    $set(units, int) {\n        const unit = prettyUnit(units);\n        // const utcPad = `set${this.$u ? 'UTC' : ''}`\n        const arg = unit == D ? this.$D + (int - this.$W) : int;\n        const setDateUnit = (date, unit, arg) => {\n            if (unit == D || unit == DATE) {\n                date.$d.setDate(arg);\n            }\n            else if (unit == M) {\n                date.$d.setMonth(arg);\n            }\n            else if (unit == Y) {\n                date.$d.setFullYear(arg);\n            }\n            else if (unit == H) {\n                date.$d.setHours(arg);\n            }\n            else if (unit == MIN) {\n                date.$d.setMinutes(arg);\n            }\n            else if (unit == S) {\n                date.$d.setSeconds(arg);\n            }\n            else if (unit == MS) {\n                date.$d.setMilliseconds(arg);\n            }\n        };\n        if (unit == M || unit == Y) {\n            // clone is for badMutable plugin\n            const date = this.clone().set(DATE, 1);\n            // date.$d[name](arg)\n            setDateUnit(date, unit, arg);\n            date.init();\n            this.$d = date.set(DATE, Math.min(this.$D, date.daysInMonth())).$d;\n        }\n        else {\n            setDateUnit(this, unit, arg);\n            // this.$d[name](arg)\n        }\n        this.init();\n        return this;\n    }\n    /**\n     * 创建一个当前对象的副本，并设置指定的时间单位的值。\n     *\n     * @param {string} string - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @param {number} int - 要设置的值。\n     * @returns {Dayuts} 返回一个新的 `dayuts` 对象，其值为当前对象的副本，并设置了指定的时间单位的值。\n     */\n    set(string, int) {\n        return this.clone().$set(string, int);\n    }\n    /**\n     * 获取当前 `dayuts` 对象的指定时间单位的值。\n     *\n     * @param {string} units - 要获取的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\n     * @returns {number} 返回当前 `dayuts` 对象的指定时间单位的值。\n     */\n    get(units) {\n        const unit = prettyUnit(units);\n        if (unit == D) {\n            return this.day();\n        }\n        else if (unit == DATE) {\n            return this.date();\n        }\n        else if (unit == M) {\n            return this.month();\n        }\n        else if (unit == Y) {\n            return this.year();\n        }\n        else if (unit == H) {\n            return this.hour();\n        }\n        else if (unit == MIN) {\n            return this.minute();\n        }\n        else if (unit == S) {\n            return this.second();\n        }\n        else if (unit == MS) {\n            return this.millisecond();\n        }\n        return 0;\n    }\n    year(input = null) {\n        if (input == null)\n            return this.$y;\n        return this.set(Y, input);\n    }\n    month(input = null) {\n        if (input == null)\n            return this.$M;\n        return this.set(M, input);\n    }\n    day(input = null) {\n        if (input == null)\n            return this.$W;\n        return this.set(D, input);\n    }\n    date(input = null) {\n        if (input == null)\n            return this.$D;\n        return this.set(DATE, input);\n    }\n    hour(input = null) {\n        if (input == null)\n            return this.$H;\n        return this.set(H, input);\n    }\n    minute(input = null) {\n        if (input == null)\n            return this.$m;\n        return this.set(MIN, input);\n    }\n    second(input = null) {\n        if (input == null)\n            return this.$s;\n        return this.set(S, input);\n    }\n    millisecond(input = null) {\n        if (input == null)\n            return this.$ms;\n        return this.set(MS, input);\n    }\n    /**\n     * 在当前 Dayuts 实例上添加指定的时间长度。\n     * @param {number} number - 要添加的时间长度。\n     * @param {string} units - 要添加的时间单位（例如，“years”，“months”，“days”等）。\n     * @returns {Dayuts} 更新的 Dayuts 实例。\n     */\n    add(number, units) {\n        var _a;\n        const unit = prettyUnit(units);\n        // 创建一个新的 Dayuts 实例，并根据给定的 n 值设置日期。\n        // n 值乘以 number 参数，然后加到当前日期上，以设置新的日期。\n        const instanceFactorySet = (n) => {\n            // 创建一个新的 Dayuts 实例，它是当前实例的副本\n            const d = dayuts(this);\n            // 设置新的日期并返回更新后的 Dayuts 实例\n            return d.date(d.date() + Math.round(n * number)); //Utils.w(d.date(d.date() + Math.round(n * number)), this)\n        };\n        if (unit == M) {\n            return this.set(M, this.$M + number);\n        }\n        if (unit == Y) {\n            return this.set(Y, this.$y + number);\n        }\n        if (unit == D) {\n            return instanceFactorySet(1);\n        }\n        if (unit == W) {\n            return instanceFactorySet(7);\n        }\n        const steps = new Map([\n            [MIN, MILLISECONDS_A_MINUTE],\n            [H, MILLISECONDS_A_HOUR],\n            [S, MILLISECONDS_A_SECOND],\n        ]);\n        const step = (_a = steps.get(unit)) !== null && _a !== void 0 ? _a : 1;\n        const nextTimeStamp = this.$d.getTime() + (number * step);\n        return wrapper(nextTimeStamp, this);\n    }\n    /**\n     * 从当前 Dayuts 实例中减去指定的时间。\n     * @param {number} number - 要减去的时间。\n     * @param {string} units - 要减去的时间单位（例如，“years”，“months”，“days”等）。\n     * @returns {Dayuts} 更新的 Dayuts 实例。\n     */\n    subtract(number, units) {\n        // 通过将 number 乘以 -1，然后调用 add 方法来实现减法操作\n        return this.add(number * -1, units);\n    }\n    /**\n     * 日期格式化\n     * @param {string} formatStr - 格式化字符串，包含各种格式化占位符（例如，“YYYY-MM-DD”，“HH:mm:ss”等）。\n     * @returns {string} 格式化后的日期字符串。\n     */\n    format(formatStr = null) {\n        const locale = this.$locale();\n        if (!this.isValid())\n            return INVALID_DATE_STRING; // locale.invalidDate || INVALID_DATE_STRING;\n        const str = formatStr !== null && formatStr !== void 0 ? formatStr : FORMAT_DEFAULT;\n        // @ts-ignore\n        const zoneStr = padZoneStr(this);\n        const _a = this, $H = _a.$H, $m = _a.$m, $M = _a.$M;\n        const weekdays = locale.weekdays, months = locale.months, meridiem = locale.meridiem;\n        /**\n         * 从给定的数组中获取缩写或完整的字符串。\n         * @param {Array} arr - 包含缩写字符串的数组。\n         * @param {number} index - 数组中要获取的元素的索引。\n         * @param {Array} full - 包含完整字符串的数组。\n         * @param {number} length - 要返回的字符串的长度。\n         * @returns {string} 缩写或完整的字符串。\n         */\n        function getShort(arr, index, full = [], length = 0) {\n            if (arr != null && arr.length >= index) {\n                return arr[index];\n            }\n            else if (full.length >= index) {\n                return full[index].slice(0, length);\n            }\n            return '';\n        }\n        ;\n        /**\n         * 获取12小时制的小时数。\n         * @param {number} num - 小时数的位数。\n         * @returns {string} 12小时制的小时数字符串。\n         */\n        const get$H = (num) => { return padStart(($H % 12 == 0 ? 12 : $H % 12).toString(), num, '0'); };\n        /**\n         * 获取上午或下午的字符串表示。\n         * @param {number} hour - 小时数。\n         * @param {number} minute - 分钟数。\n         * @param {boolean} isLowercase - 是否返回小写字符串。\n         * @returns {string} 上午或下午的字符串表示。\n         */\n        const meridiemFunc = meridiem !== null && meridiem !== void 0 ? meridiem : ((hour, _, isLowercase) => {\n            const m = (hour < 12 ? 'AM' : 'PM');\n            return isLowercase ? m.toLowerCase() : m;\n        });\n        const matches = (match) => {\n            if (match == 'YY') {\n                return (this.$y).toString().slice(-2);\n            }\n            else if (match == 'YYYY') {\n                return padStart(this.$y.toString(), 4, '0');\n            }\n            else if (match == 'M') {\n                return ($M + 1).toString();\n            }\n            else if (match == 'MM') {\n                return padStart(($M + 1).toString(), 2, '0');\n            }\n            else if (match == 'MMM') {\n                return getShort(locale.monthsShort, $M, months, 3);\n            }\n            else if (match == 'MMMM') {\n                return getShort(months, $M);\n            }\n            else if (match == 'D') {\n                return this.$D.toString();\n            }\n            else if (match == 'DD') {\n                return padStart(this.$D.toString(), 2, '0');\n            }\n            else if (match == 'd') {\n                return this.$W.toString();\n            }\n            else if (match == 'dd') {\n                return getShort(locale.weekdaysMin, this.$W, weekdays, 2);\n            }\n            else if (match == 'ddd') {\n                return getShort(locale.weekdaysShort, this.$W, weekdays, 3);\n            }\n            else if (match == 'dddd') {\n                return weekdays[this.$W];\n            }\n            else if (match == 'H') {\n                return $H.toString();\n            }\n            else if (match == 'HH') {\n                return padStart($H.toString(), 2, '0');\n            }\n            else if (match == 'h') {\n                return get$H(1);\n            }\n            else if (match == 'hh') {\n                return get$H(2);\n            }\n            else if (match == 'a') {\n                return meridiemFunc($H, $m, true);\n            }\n            else if (match == 'A') {\n                return meridiemFunc($H, $m, false);\n            }\n            else if (match == 'm') {\n                return $m.toString();\n            }\n            else if (match == 'mm') {\n                return padStart($m.toString(), 2, '0');\n            }\n            else if (match == 's') {\n                return this.$s.toString();\n            }\n            else if (match == 'ss') {\n                return padStart(this.$s.toString(), 2, '0');\n            }\n            else if (match == 'SSS') {\n                return padStart(this.$ms.toString(), 3, '0');\n            }\n            else if (match == 'Z') {\n                return zoneStr; // 'ZZ' logic below\n            }\n            return null;\n        };\n        return str.replace(REGEX_FORMAT, (match, $1, offset, string) => {\n            var _a;\n            return (_a = $1 !== null && $1 !== void 0 ? $1 : matches(match)) !== null && _a !== void 0 ? _a : zoneStr.replace(':', '');\n        });\n    }\n    /**\n     * 获取 Dayuts 实例的 UTC 偏移量（以分钟为单位）。\n     * @returns {number} UTC 偏移量（以分钟为单位）。\n     */\n    utcOffset() {\n        // Because a bug at FF24, we're rounding the timezone offset around 15 minutes\n        // https://github.com/moment/moment/pull/1871\n        return 0;\n    }\n    diff(input, units = 'millisecond', float = false) {\n        const unit = prettyUnit(units);\n        const that = dayuts(input);\n        const zoneDelta = (that.utcOffset() - this.utcOffset()) * MILLISECONDS_A_MINUTE;\n        const diff = this.valueOf() - that.valueOf();\n        // @ts-ignore\n        const getMonth = () => { return monthDiff(this, that); };\n        let result;\n        switch (unit) {\n            case Y:\n                result = getMonth() / 12;\n                break;\n            case M:\n                result = getMonth();\n                break;\n            case Q:\n                result = getMonth() / 3;\n                break;\n            case W:\n                result = (diff - zoneDelta) / MILLISECONDS_A_WEEK;\n                break;\n            case D:\n                result = (diff - zoneDelta) / MILLISECONDS_A_DAY;\n                break;\n            case H:\n                result = diff / MILLISECONDS_A_HOUR;\n                break;\n            case MIN:\n                result = diff / MILLISECONDS_A_MINUTE;\n                break;\n            case S:\n                result = diff / MILLISECONDS_A_SECOND;\n                break;\n            default:\n                result = diff; // milliseconds\n                break;\n        }\n        return float ? result : absFloor(result);\n    }\n    /**\n     * 将当前 Dayuts 对象转换为原生 Date 对象。\n     *\n     * @returns {Date} 返回一个表示当前日期的原生 Date 对象。\n     */\n    toDate() {\n        return new Date(this.valueOf());\n    }\n    /**\n     * 将 Moment 对象转换为 JSON 字符串\n     * @returns {string | null} 如果 Moment 对象有效，则返回 ISO 8601 格式的字符串，否则返回 null\n     */\n    toJSON() {\n        return this.isValid() ? this.toISOString() : null;\n    }\n    /**\n     * 将 Moment 对象转换为 ISO 8601 格式的字符串\n     * @returns {string} 返回 ISO 8601 格式的字符串\n     */\n    toISOString() {\n        return this.$d.toString();\n    }\n    toObject() {\n        return {\n            years: this.$y,\n            months: this.$M,\n            date: this.$D,\n            hours: this.$H,\n            minutes: this.$m,\n            seconds: this.$s,\n            milliseconds: this.$ms\n        };\n    }\n    toArray() {\n        return [\n            this.$y,\n            this.$M,\n            this.$D,\n            this.$H,\n            this.$m,\n            this.$s,\n            this.$ms\n        ];\n    }\n    /**\n     * 获取当前日期的毫秒数。\n     *\n     * @returns {number} 返回一个表示当前日期的毫秒数。\n     */\n    valueOf() {\n        // 使用 Date 对象的 getTime 方法获取当前日期的毫秒数。\n        return this.$d.getTime();\n    }\n    /**\n     * 获取当前 `dayuts` 对象所在月份的天数。\n     *\n     * @returns {number} 返回当前 `dayuts` 对象所在月份的天数。\n     */\n    daysInMonth() {\n        return this.endOf(M).$D;\n    }\n    /**\n     * 获取当前日期的区域设置对象。\n     *\n     * @returns {Object} 区域设置对象。\n     */\n    $locale() {\n        // return Ls.get(this.$L)!\n        return localeState.locales.get(this.$L);\n    }\n    locale(preset, object = null) {\n        // if (!preset) return this.$L\n        const that = this.clone();\n        const nextLocaleName = parseLocale(preset, object, true);\n        if (nextLocaleName != null)\n            that.$L = nextLocaleName;\n        return that;\n    }\n    clone() {\n        return wrapper(this.$d.getTime(), this);\n    }\n    /**\n     * 返回当前 dayuts 对象的 UTC 字符串表示。\n     *\n     * @returns {string} 当前 dayuts 对象的 UTC 字符串表示。\n     */\n    toString() {\n        // return this.$d.toUTCString();\n        return this.$d.toString();\n    }\n    dayOfYear(input = null) {\n        const dayOfYear = Math.round((this.startOf('day').valueOf() - this.startOf('year').valueOf()) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'day');\n    }\n    fromToBase(input, withoutSuffix, instance, isFrom) {\n        var _a, _b;\n        const relObj = (_a = localeState.locales.get('en')) === null || _a === void 0 ? void 0 : _a.relativeTime;\n        const loc = (_b = instance.$locale().relativeTime) !== null && _b !== void 0 ? _b : relObj;\n        if (loc == null)\n            return '';\n        const T = [\n            { l: 's', r: 44, d: S },\n            { l: 'm', r: 89 },\n            { l: 'mm', r: 44, d: MIN },\n            { l: 'h', r: 89 },\n            { l: 'hh', r: 21, d: H },\n            { l: 'd', r: 35 },\n            { l: 'dd', r: 25, d: D },\n            { l: 'M', r: 45 },\n            { l: 'MM', r: 10, d: M },\n            { l: 'y', r: 17 },\n            { l: 'yy', d: Y }\n        ];\n        const Tl = T.length;\n        let result = 0;\n        let out = '';\n        let isFuture = false;\n        for (let i = 0; i < Tl; i += 1) {\n            let t = T[i];\n            if (t.d != null) {\n                result = isFrom\n                    ? dayuts(input).diff(instance, t.d, true)\n                    : instance.diff(input, t.d, true);\n            }\n            let abs = Math.round(Math.abs(result));\n            isFuture = result > 0;\n            if (t.r == null || t.r != null && abs <= t.r) {\n                if (abs <= 1 && i > 0)\n                    t = T[i - 1]; // 1 minutes -> a minute, 0 seconds -> 0 second\n                const format = loc[t.l];\n                // if (postFormat) {\n                // \tabs = postFormat(`${abs}`)\n                // }\n                if (typeof format == 'string') {\n                    out = format.replace('%d', abs.toString());\n                }\n                // else {\n                // \tout = format(abs, withoutSuffix, t.l!, isFuture)\n                // }\n                break;\n            }\n        }\n        if (withoutSuffix)\n            return out;\n        const pastOrFuture = isFuture ? loc.future : loc.past;\n        // if (typeof pastOrFuture == 'function') {\n        // \treturn pastOrFuture(out)\n        // }\n        return pastOrFuture.replace('%s', out);\n    }\n    to(input, withoutSuffix = false) {\n        return this.fromToBase(input, withoutSuffix, this, true);\n    }\n    from(input, withoutSuffix = false) {\n        return this.fromToBase(input, withoutSuffix, this, false);\n    }\n    toNow(withoutSuffix = false) {\n        return this.to(dayuts(), withoutSuffix);\n    }\n    fromNow(withoutSuffix = false) {\n        return this.from(dayuts(), withoutSuffix);\n    }\n}\nfunction dayuts(date = null, format = null, locale = null) {\n    if (date != null && date instanceof Dayuts)\n        return date.clone();\n    return new Dayuts({\n        date,\n        format,\n        locale\n    });\n}\n/**\n * 判断给定的对象是否为Dayuts实例\n * @param {(any | null)} date - 输入的对象\n * @returns {boolean} - 如果给定的对象是Dayuts实例，则返回true，否则返回false\n */\nfunction isDayuts(date = null) {\n    return date instanceof Dayuts;\n}\nexport { dayuts, isDayuts };\n//# sourceMappingURL=/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-dayuts/common/index.js.map","references":["/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-dayuts/utssdk/interface.uts","/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-dayuts/common/constant.ts","/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-dayuts/common/utils.ts","/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-dayuts/common/use.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\"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\"}"}
