{"code":"import { __read } from \"tslib\";\n// 引入颜色处理库\nimport { tinyColor } from '@/uni_modules/lime-color';\n/**\n * 加载组件返回接口\n */\nexport class UseLoadingReturn extends UTS.UTSType {\n    static get$UTSMetadata$() {\n        return {\n            kind: 2,\n            get fields() {\n                return {\n                    ratio: { type: \"Unknown\", optional: false },\n                    type: { type: \"Unknown\", optional: false },\n                    mode: { type: \"Unknown\", optional: false },\n                    color: { type: String, optional: false },\n                    play: { type: \"Unknown\", optional: false },\n                    failed: { type: \"Unknown\", optional: false },\n                    clear: { type: \"Unknown\", optional: false },\n                    destroy: { type: \"Unknown\", optional: false },\n                    pause: { type: \"Unknown\", optional: false }\n                };\n            },\n            name: \"UseLoadingReturn\"\n        };\n    }\n    constructor(options, metadata = UseLoadingReturn.get$UTSMetadata$(), isJSONParse = false) {\n        super();\n        this.__props__ = UTS.UTSType.initProps(options, metadata, isJSONParse);\n        this.ratio = this.__props__.ratio;\n        this.type = this.__props__.type;\n        this.mode = this.__props__.mode;\n        this.color = this.__props__.color;\n        this.play = this.__props__.play;\n        this.failed = this.__props__.failed;\n        this.clear = this.__props__.clear;\n        this.destroy = this.__props__.destroy;\n        this.pause = this.__props__.pause;\n        delete this.__props__;\n    }\n}\n/**\n * 计算圆周上指定角度的点的坐标\n * @param centerX 圆心的 X 坐标\n * @param centerY 圆心的 Y 坐标\n * @param radius 圆的半径\n * @param angleDegrees 角度（以度为单位）\n * @returns 包含 X 和 Y 坐标的对象\n */\nfunction getPointOnCircle(centerX, centerY, radius, angleDegrees) {\n    // 将角度转换为弧度\n    const angleRadians = (angleDegrees * Math.PI) / 180;\n    // 计算点的 X 和 Y 坐标\n    const x = centerX + radius * Math.cos(angleRadians);\n    const y = centerY + radius * Math.sin(angleRadians);\n    return [x, y];\n}\nexport function useLoading(element) {\n    const tick = ref('pause');\n    const state = reactive(new UseLoadingReturn({\n        color: '#000',\n        type: 'circular',\n        ratio: 1,\n        mode: 'raf',\n        play: () => {\n            tick.value = 'play';\n        },\n        failed: () => {\n            tick.value = 'failed';\n        },\n        clear: () => {\n            tick.value = 'clear';\n        },\n        destroy: () => {\n            tick.value = 'destroy';\n        },\n        pause: () => {\n            tick.value = 'pause';\n        }\n    }));\n    const context = shallowRef(null);\n    // let ctx:DrawableContext|null = null\n    // let rotation = 0\n    let isPlaying = false;\n    let canvasWidth = ref(0);\n    let canvasHeight = ref(0);\n    let canvasSize = ref(0);\n    let animationFrameId = -1;\n    let animation = null;\n    let drawFrame = null;\n    const size = computed(() => { return state.ratio > 1 ? state.ratio : canvasSize.value * state.ratio; });\n    // 绘制圆形加载\n    const drawCircular = () => {\n        let startAngle = 0; // 起始角度\n        let endAngle = 0; // 结束角度\n        let rotate = 0; // 旋转角度\n        // const ctx = context.value!\n        // 动画参数配置\n        const MIN_ANGLE = 5; // 最小保持角度\n        const ARC_LENGTH = 359.5; // 最大弧长（避免闭合）\n        const PI = Math.PI / 180; // 角度转弧度系数\n        const SPEED = 0.018 / 4; // 动画速度\n        const ROTATE_INTERVAL = 0.09 / 4; // 旋转增量\n        const lineWidth = size.value / 10; // 线宽计算\n        const x = canvasWidth.value / 2; // 中心点X\n        const y = canvasHeight.value / 2; // 中心点Y\n        const radius = size.value / 2 - lineWidth; // 实际绘制半径\n        drawFrame = () => {\n            if (context.value == null || !isPlaying)\n                return null;\n            let ctx = context.value;\n            // uni.__log__('log','at uni_modules/lime-loading/index.uts:124','radius', radius, size.value)\n            ctx.reset();\n            // 绘制圆弧\n            ctx.beginPath();\n            ctx.arc(x, y, radius, startAngle * PI + rotate, endAngle * PI + rotate);\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = state.color;\n            ctx.stroke();\n            // 角度更新逻辑\n            if (endAngle < ARC_LENGTH) {\n                endAngle = Math.min(ARC_LENGTH, endAngle + (ARC_LENGTH - MIN_ANGLE) * SPEED);\n            }\n            else if (startAngle < ARC_LENGTH) {\n                startAngle = Math.min(ARC_LENGTH, startAngle + (ARC_LENGTH - MIN_ANGLE) * SPEED);\n            }\n            else {\n                // 重置时保留最小可见角度\n                startAngle = 0;\n                endAngle = MIN_ANGLE;\n            }\n            ctx.update();\n            if (state.mode == 'raf') {\n                rotate = (rotate + ROTATE_INTERVAL) % 360; // 持续旋转并限制范围\n                if (isPlaying && drawFrame != null) {\n                    animationFrameId = requestAnimationFrame(drawFrame);\n                }\n            }\n        };\n    };\n    let lastTime = Date.now();\n    const drawSpinner = () => {\n        const steps = 12; // 旋转线条数量\n        // const size = state.ratio > 1 ? state.ratio : canvasSize.value\n        const lineWidth = size.value / 10; // 线宽\n        const x = canvasWidth.value / 2; // 中心坐标\n        const y = canvasHeight.value / 2;\n        let step = 0; // 当前步数\n        const length = size.value / 3.6 - lineWidth; // 线长\n        const offset = size.value / 4; // 距中心偏移\n        /** 生成颜色渐变数组 */\n        function generateColorGradient(hex, steps) {\n            const colors = [];\n            const _color = tinyColor(hex);\n            for (let i = 1; i <= steps; i++) {\n                _color.setAlpha(i / steps);\n                colors.push(_color.toRgbString());\n            }\n            return colors;\n        }\n        // 计算颜色渐变\n        let colors = computed(() => { return generateColorGradient(state.color, steps); });\n        /** 帧绘制函数 */\n        drawFrame = () => {\n            if (context.value == null || !isPlaying)\n                return null;\n            const delta = Date.now() - lastTime;\n            if (delta >= 1000 / 10) {\n                lastTime = Date.now();\n                let ctx = context.value;\n                ctx.reset();\n                for (let i = 0; i < steps; i++) {\n                    const stepAngle = 360 / steps; // 单步角度\n                    const angle = stepAngle * i; // 当前角度\n                    const index = (steps + i - step) % steps; // 颜色索引\n                    // 计算线段坐标\n                    const radian = angle * Math.PI / 180;\n                    const cos = Math.cos(radian);\n                    const sin = Math.sin(radian);\n                    // 绘制线段\n                    ctx.beginPath();\n                    ctx.moveTo(x + offset * cos, y + offset * sin);\n                    ctx.lineTo(x + (offset + length) * cos, y + (offset + length) * sin);\n                    ctx.lineWidth = lineWidth;\n                    ctx.lineCap = 'round';\n                    ctx.strokeStyle = colors.value[index];\n                    ctx.stroke();\n                }\n                ctx.update();\n                if (state.mode == 'raf') {\n                    // step += 1\n                    step = (step + 1) % steps; // 限制step范围\n                }\n            }\n            if (state.mode == 'raf') {\n                if (isPlaying && drawFrame != null) {\n                    animationFrameId = requestAnimationFrame(drawFrame);\n                }\n            }\n        };\n    };\n    const drwaFailed = () => {\n        if (context.value == null)\n            return null;\n        let ctx = context.value;\n        // const size = state.ratio > 1 ? state.ratio : canvasSize.value\n        const innerSize = size.value * 0.8; // 内圈尺寸\n        const lineWidth = innerSize / 10; // 线宽\n        const lineLength = (size.value - lineWidth) / 2; // X长度\n        const centerX = canvasWidth.value / 2;\n        const centerY = canvasHeight.value / 2;\n        const radius = (size.value - lineWidth) / 2;\n        const angleRadians1 = 45 * Math.PI / 180;\n        const angleRadians2 = (45 - 90) * Math.PI / 180;\n        ctx.reset();\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = state.color;\n        // 绘制逐渐显示的圆\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = state.color;\n        ctx.stroke();\n        const _a = __read(getPointOnCircle(centerX, centerY, lineLength / 2, 180 + 45), 2), startX1 = _a[0], startY = _a[1];\n        const _b = __read(getPointOnCircle(centerX, centerY, lineLength / 2, 180 + 90 + 45), 1), startX2 = _b[0];\n        const x2 = Math.sin(angleRadians1) * lineLength + startX1;\n        const y2 = Math.cos(angleRadians1) * lineLength + startY;\n        ctx.beginPath();\n        ctx.moveTo(startX1, startY);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        const x3 = Math.sin(angleRadians2) * lineLength + startX2;\n        const y3 = Math.cos(angleRadians2) * lineLength + startY;\n        ctx.beginPath();\n        ctx.moveTo(startX2, startY);\n        ctx.lineTo(x3, y3);\n        ctx.stroke();\n        ctx.update();\n    };\n    let currentType = null;\n    const useMode = () => {\n        if (state.mode != 'raf') {\n            const keyframes = [new UTSJSONObject({ transform: 'rotate(0)' }), new UTSJSONObject({ transform: 'rotate(360)' })];\n            animation = element.value.animate(keyframes, new UTSJSONObject({\n                duration: 80000,\n                easing: 'linear',\n                // fill: 'forwards',\n                iterations: Infinity\n            }));\n        }\n    };\n    const startAnimation = (type) => {\n        if (context.value == null || element.value == null)\n            return null;\n        animation === null || animation === void 0 ? null : animation.pause();\n        if (currentType == type) {\n            isPlaying = true;\n            animation === null || animation === void 0 ? null : animation.play();\n            drawFrame === null || drawFrame === void 0 ? null : drawFrame();\n            return null;\n        }\n        if (type == 'circular') {\n            currentType = 'circular';\n            drawCircular();\n            useMode();\n        }\n        if (type == 'spinner') {\n            currentType = 'spinner';\n            drawSpinner();\n            useMode();\n        }\n        isPlaying = true;\n        drawFrame === null || drawFrame === void 0 ? null : drawFrame();\n    };\n    // 监听元素尺寸\n    const resizeObserver = new UniResizeObserver((_entries) => {\n        requestAnimationFrame(() => {\n            var _a, _b;\n            (_b = (_a = element.value) === null || _a === void 0 ? null : _a.getBoundingClientRectAsync()) === null || _b === void 0 ? null : _b.then(rect => {\n                if (rect.width == 0 || rect.height == 0)\n                    return null;\n                context.value = element.value.getDrawableContext();\n                canvasWidth.value = rect.width;\n                canvasHeight.value = rect.height;\n                canvasSize.value = Math.min(rect.width, rect.height);\n                // startAnimation(state.type)\n            });\n        });\n    });\n    watchEffect(() => {\n        if (element.value == null)\n            return null;\n        resizeObserver.observe(element.value);\n    });\n    watchEffect(() => {\n        var _a, _b, _c, _d;\n        if (context.value == null)\n            return null;\n        if (tick.value == 'play') {\n            startAnimation(state.type);\n        }\n        if (tick.value == 'failed') {\n            clearTimeout(animationFrameId);\n            animation === null || animation === void 0 ? null : animation.pause();\n            animation === null || animation === void 0 ? null : animation.cancel();\n            drwaFailed();\n            return null;\n        }\n        if (tick.value == 'clear') {\n            clearTimeout(animationFrameId);\n            animation === null || animation === void 0 ? null : animation.pause();\n            animation === null || animation === void 0 ? null : animation.cancel();\n            (_a = context.value) === null || _a === void 0 ? null : _a.reset();\n            (_b = context.value) === null || _b === void 0 ? null : _b.update();\n            isPlaying = false;\n            return null;\n        }\n        if (tick.value == 'destroy') {\n            clearTimeout(animationFrameId);\n            animation === null || animation === void 0 ? null : animation.pause();\n            animation === null || animation === void 0 ? null : animation.cancel();\n            (_c = context.value) === null || _c === void 0 ? null : _c.reset();\n            (_d = context.value) === null || _d === void 0 ? null : _d.update();\n            context.value = null;\n            animation = null;\n            isPlaying = false;\n            return null;\n        }\n        if (tick.value == 'pause') {\n            clearTimeout(animationFrameId);\n            isPlaying = false;\n            animation === null || animation === void 0 ? null : animation.pause();\n            return null;\n        }\n    });\n    return state;\n}\n//# sourceMappingURL=/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-loading/index.uts.js.map","references":["/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-color/index.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"index.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"index.uts\"],\"names\":[],\"mappings\":\"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\"}"}
