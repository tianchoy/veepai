{"code":"// @ts-nocheck\nimport {} from './type';\n// import { chooseFile, ChooseFileOption, ChooseFileSuccessCallbackResult } from '@/uni_modules/lime-choose-file'\n/**\n * 由于小程序暂时在ios上不支持返回上传文件的fileType，这里用文件的后缀来判断\n * @param mediaType\n * @param tempFilePath\n * @returns string\n * @link https://developers.weixin.qq.com/community/develop/doc/00042820b28ee8fb41fc4d0c254c00\n */\nexport function getFileType(tempFilePath, fileType) {\n    if (fileType != null)\n        return fileType.replace(/\\/.+/, ''); // 如果有返回fileType就直接用\n    // 否则根据文件后缀进行判读\n    const videoType = ['avi', 'wmv', 'mkv', 'mp4', 'mov', 'rm', '3gp', 'flv', 'mpg', 'rmvb'];\n    const temp = tempFilePath.split('.');\n    const postfix = temp[temp.length - 1];\n    if (videoType.includes(postfix.toLocaleLowerCase())) {\n        return 'video';\n    }\n    return 'image';\n}\n// 选中文件之后，计算一个随机的短文件名\n// export function getRandFileName(filePath: string):string {\n// \tconst extIndex = filePath.lastIndexOf('.');\n// \tconst extName = extIndex === -1 ? '' : filePath.substr(extIndex);\n// \treturn parseInt(`${Date.now()}${Math.floor(Math.random() * 900 + 100)}`, 10).toString(36) + extName;\n// }\nexport function getFileName(filePath) {\n    return filePath.substring(filePath.lastIndexOf('/') + 1);\n}\nexport const isOverSize = (size, sizeLimit) => {\n    if (sizeLimit == null)\n        return false;\n    const base = 1000;\n    // const unitMap = {\n    //   B: 1,\n    //   KB: base,\n    //   MB: base * base,\n    //   GB: base * base * base,\n    // };\n    const computedSize = sizeLimit * base;\n    // const computedSize = typeof sizeLimit == 'number' ? sizeLimit * base : sizeLimit?.size * unitMap[sizeLimit?.unit ?? 'KB']; // 单位 KB\n    return size > computedSize;\n};\nexport function chooseImage(opts) {\n    uni.chooseImage({\n        count: opts.count,\n        sizeType: opts.sizeType,\n        sourceType: opts.sourceType,\n        extension: opts.extension,\n        success(res) {\n            var _a;\n            (_a = opts.success) === null || _a === void 0 ? void 0 : _a.call(opts, res);\n        },\n        fail(err) {\n            var _a;\n            (_a = opts.fail) === null || _a === void 0 ? void 0 : _a.call(opts, err);\n        }\n    });\n}\nexport function chooseVideo(opts) {\n    uni.chooseVideo({\n        sourceType: opts.sourceType,\n        success(res) {\n            var _a;\n            (_a = opts.success) === null || _a === void 0 ? void 0 : _a.call(opts, res);\n        },\n        fail(err) {\n            var _a;\n            (_a = opts.fail) === null || _a === void 0 ? void 0 : _a.call(opts, err);\n        }\n    });\n}\nexport function chooseMedia(opts) {\n    var _a, _b;\n    uni.chooseMedia({\n        count: opts.count,\n        mediaType: ['image', 'video'],\n        sourceType: opts.sourceType,\n        maxDuration: (_a = opts.maxDuration) !== null && _a !== void 0 ? _a : 10,\n        camera: (_b = opts.camera) !== null && _b !== void 0 ? _b : 'back',\n        success(res) {\n            var _a;\n            (_a = opts.success) === null || _a === void 0 ? void 0 : _a.call(opts, res);\n        },\n        fail(err) {\n            var _a;\n            (_a = opts.fail) === null || _a === void 0 ? void 0 : _a.call(opts, err);\n        }\n    });\n}\nexport function chooseAll(opts) {\n    uni.__log__('warn', 'at uni_modules/lime-upload/components/l-upload/utils.ts:172', \"【lime-upload】chooseAll 当前环境不支持\");\n}\nfunction normalizeChooseFiles(type, tempFiles, //ChooseImageTempFile\ntempFilePaths, sizeLimit, oversize) {\n    const files = [];\n    tempFiles.forEach((temp, index) => {\n        var _a, _b, _c, _d;\n        const tempFilePath = (_a = temp['tempFilePath']) !== null && _a !== void 0 ? _a : tempFilePaths[index];\n        const name = (_b = temp['name']) !== null && _b !== void 0 ? _b : getFileName(tempFilePath);\n        const size = (_c = temp['size']) !== null && _c !== void 0 ? _c : 0;\n        const width = temp['width'];\n        const height = temp['height'];\n        const duration = temp['duration'];\n        const path = (_d = temp['path']) !== null && _d !== void 0 ? _d : tempFilePath;\n        const thumb = temp['thumbTempFilePath'];\n        const _type = (type == 'all' ? getFileType(tempFilePath, temp['type']) : type);\n        if (isOverSize(size, sizeLimit)) {\n            oversize === null || oversize === void 0 ? void 0 : oversize(temp);\n            return;\n        }\n        ;\n        files.push({\n            name,\n            type: _type,\n            url: path,\n            path,\n            size,\n            width,\n            height,\n            duration,\n            thumb,\n            percent: 0,\n            // status: 'done'\n        });\n    });\n    return files;\n}\nexport function chooseFiles(opts) {\n    return new Promise((resolve, reject) => {\n        var _a, _b;\n        if (opts.mediaType == 'image') {\n            chooseImage({\n                count: opts.count,\n                mediaType: opts.mediaType,\n                sizeType: opts.sizeType,\n                sourceType: opts.sourceType,\n                success(result) {\n                    const res = result;\n                    const tempFilePaths = res.tempFilePaths;\n                    const tempFiles = res.tempFiles.map((item) => {\n                        return {\n                            name: item.name,\n                            path: item.path,\n                            size: item.size,\n                            type: item.type\n                        };\n                    });\n                    const files = normalizeChooseFiles('image', tempFiles, tempFilePaths, opts.sizeLimit, opts.oversize);\n                    resolve(files);\n                }\n            });\n        }\n        else if (opts.mediaType == 'video') {\n            chooseVideo({\n                count: opts.count,\n                mediaType: opts.mediaType,\n                sourceType: opts.sourceType,\n                sizeType: opts.sizeType,\n                maxDuration: opts.maxDuration,\n                success(result) {\n                    const res = result;\n                    const tempFilePaths = [res.tempFilePath];\n                    const tempFilePath = res.tempFilePath, duration = res.duration, size = res.size, height = res.height, width = res.width;\n                    const tempFiles = [{ path: tempFilePath, duration, duration, size, height, width }];\n                    const files = normalizeChooseFiles('video', tempFiles, tempFilePaths, opts.sizeLimit, opts.oversize);\n                    resolve(files);\n                }\n            });\n        }\n        else if (opts.mediaType == 'media') {\n            chooseMedia({\n                count: opts.count,\n                mediaType: 'media',\n                sourceType: opts.sourceType,\n                maxDuration: (_a = opts.maxDuration) !== null && _a !== void 0 ? _a : 10,\n                camera: (_b = opts.camera) !== null && _b !== void 0 ? _b : 'back',\n                sizeType: opts.sizeType,\n                success(result) {\n                    const res = result;\n                    const tempFilePaths = res.tempFiles.map((it) => { return it.tempFilePath; });\n                    const tempFiles = res.tempFiles.map((it) => { return ({ path: it.tempFilePath, size: it.size, type: it.fileType }); });\n                    const files = normalizeChooseFiles('all', tempFiles, tempFilePaths, opts.sizeLimit, opts.oversize);\n                    resolve(files);\n                }\n            });\n        }\n        else {\n            chooseAll({\n                count: opts.count,\n                mediaType: opts.mediaType,\n                sourceType: opts.sourceType,\n                sizeType: opts.sizeType,\n                success(result) {\n                    reject(\"【lime-upload】chooseAll 当前环境不支持\");\n                    // const res = result as  ChooseMediaSuccess // ChooseFileSuccess\n                    // const tempFilePaths = res.tempFiles.map((it):string => it.tempFilePath)\n                    // const tempFiles = res.tempFiles.map((it):UTSJSONObject => ({path: it.tempFilePath, size: it.size}));\n                    // const files = normalizeChooseFiles('all', tempFiles, tempFilePaths, opts.sizeLimit, opts.oversize)\n                    // resolve(files)\n                }\n            });\n        }\n    });\n}\n//# sourceMappingURL=/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-upload/components/l-upload/utils.js.map","references":["/Users/xyhc/Documents/veepai_uniappx/uni_modules/lime-upload/components/l-upload/type.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"utils.ts\"],\"names\":[],\"mappings\":\"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\"}"}
