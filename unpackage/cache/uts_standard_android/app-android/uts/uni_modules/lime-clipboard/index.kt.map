{"version":3,"sources":["uni_modules/lime-clipboard/utssdk/app-android/index.uts","uni_modules/lime-clipboard/utssdk/interface.uts","uni_modules/lime-clipboard/utssdk/unierror.uts"],"sourcesContent":["import ClipData from \"android.content.ClipData\";\r\nimport ClipboardManager from \"android.content.ClipboardManager\";\r\nimport Context from \"android.content.Context\";\r\nimport { UTSAndroid } from \"io.dcloud.uts\";\r\n\r\nimport { SetClipboardDataOption, GetClipboardDataOption, GetClipboardDataSuccessCallbackOption } from '../interface.uts';\r\nimport { GeneralCallbackResultImpl } from '../unierror.uts';\r\n\r\n\r\n\r\n\r\nexport function setClipboardData(options : SetClipboardDataOption) {\r\n\tconst handleClipboardOperationFailure = () => {\r\n\t\tconst res = new GeneralCallbackResultImpl(9010002)\r\n\t\toptions.fail?.(res)\r\n\t\toptions.complete?.(res)\r\n\t}\r\n\ttry {\r\n\t\tconst context = UTSAndroid.getAppContext();\r\n\t\tif (context != null) {\r\n\t\t\tconst clipboard = context.getSystemService(Context.CLIPBOARD_SERVICE) as ClipboardManager;\r\n\t\t\tconst clip = ClipData.newPlainText('label', options.data);\r\n\t\t\tclipboard.setPrimaryClip(clip);\r\n\t\t\tconst res = new GeneralCallbackResultImpl(9010001)\r\n\t\t\tif(options.showToast != false){\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ticon: 'success',\r\n\t\t\t\t\ttitle: '内容已复制'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\toptions.success?.(res)\r\n\t\t\toptions.complete?.(res)\r\n\t\t} else {\r\n\t\t\thandleClipboardOperationFailure()\r\n\t\t}\r\n\r\n\t} catch (e) {\r\n\t\thandleClipboardOperationFailure()\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport function getClipboardData(options : GetClipboardDataOption) {\r\n\tconst handleClipboardOperationFailure = () => {\r\n\t\tconst res = new GeneralCallbackResultImpl(9010002, 'get')\r\n\t\toptions.fail?.(res)\r\n\t\toptions.complete?.(res)\r\n\t}\r\n\ttry {\r\n\t\tconst context = UTSAndroid.getAppContext();\r\n\t\tif (context != null) {\r\n\t\t\tconst clipboard = context.getSystemService(Context.CLIPBOARD_SERVICE) as ClipboardManager;\r\n\t\t\tconst clip = clipboard.getPrimaryClip();\r\n\t\t\tif (clip != null && clip.getItemCount() > 0) {\r\n\t\t\t\tconst text = clip.getItemAt(0).getText();\r\n\t\t\t\tif (text != null) {\r\n\t\t\t\t\toptions.success?.({\r\n\t\t\t\t\t\tdata: text.toString(),\r\n\t\t\t\t\t\terrMsg: '成功'\r\n\t\t\t\t\t} as GetClipboardDataSuccessCallbackOption)\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 如果剪贴板没有文本数据，调用失败的处理函数\r\n\t\t\t\t\thandleClipboardOperationFailure();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 如果剪贴板没有内容，调用失败的处理函数\r\n\t\t\t\thandleClipboardOperationFailure();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 如果无法获取应用上下文，调用失败的处理函数\r\n\t\t\thandleClipboardOperationFailure();\r\n\t\t}\r\n\r\n\t} catch (e) {\r\n\t\thandleClipboardOperationFailure()\r\n\t}\r\n\r\n}","\r\n/**\r\n * 错误码\r\n * 根据uni错误码规范要求，建议错误码以90开头，以下是错误码示例：\r\n * - 9010001 错误信息1\r\n * - 9010002 错误信息2\r\n */\r\nexport type LimeClipboardErrorCode = 9010001 | 9010002;\r\n/**\r\n * myApi 的错误回调参数\r\n */\r\nexport interface GeneralCallbackResult extends IUniError {\r\n\terrCode : LimeClipboardErrorCode\r\n};\r\n\r\n\r\n\r\n\r\n// export interface GeneralCallbackResult {\r\n// \t/** 错误信息 */\r\n// \terrMsg : string\r\n// }\r\n\r\n/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\nexport type SetClipboardDataCompleteCallback = (res : UniError) => void\r\n/** 接口调用失败的回调函数 */\r\nexport type SetClipboardDataFailCallback = (res : UniError) => void\r\n/** 接口调用成功的回调函数 */\r\nexport type SetClipboardDataSuccessCallback = (res : UniError) => void\r\n\r\n\r\nexport type SetClipboardDataOption = {\r\n\tshowToast?: boolean\r\n\t/** 剪贴板的内容 */\r\n\tdata : string\r\n\t/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\n\tcomplete ?: SetClipboardDataCompleteCallback\r\n\t/** 接口调用失败的回调函数 */\r\n\tfail ?: SetClipboardDataFailCallback\r\n\t/** 接口调用成功的回调函数 */\r\n\tsuccess ?: SetClipboardDataSuccessCallback\r\n}\r\n\r\n\r\nexport type GetClipboardDataSuccessCallbackOption = {\r\n\t/** 剪贴板的内容 */\r\n\tdata : string\r\n\terrMsg : string\r\n}\r\n/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\nexport type GetClipboardDataCompleteCallback = (res : UniError) => void\r\n/** 接口调用失败的回调函数 */\r\nexport type GetClipboardDataFailCallback = (res : UniError) => void\r\n/** 接口调用成功的回调函数 */\r\nexport type GetClipboardDataSuccessCallback = (\r\n\toption : GetClipboardDataSuccessCallbackOption\r\n) => void\r\n\r\nexport type GetClipboardDataOption = {\r\n\t/** 接口调用结束的回调函数（调用成功、失败都会执行） */\r\n\tcomplete ?: GetClipboardDataCompleteCallback\r\n\t/** 接口调用失败的回调函数 */\r\n\tfail ?: GetClipboardDataFailCallback\r\n\t/** 接口调用成功的回调函数 */\r\n\tsuccess ?: GetClipboardDataSuccessCallback\r\n}","/* 此规范为 uni 规范，可以按照自己的需要选择是否实现 */\r\nimport { LimeClipboardErrorCode, GeneralCallbackResult } from \"./interface.uts\"\r\n/**\r\n * 错误主题\r\n * 注意：错误主题一般为插件名称，每个组件不同，需要使用时请更改。\r\n * [可选实现]\r\n */\r\nexport const UniErrorSubject = 'ClipboardData';\r\n\r\n\r\n/**\r\n * 错误信息\r\n * @UniError\r\n * [可选实现]\r\n */\r\nexport const UniErrors : Map<LimeClipboardErrorCode, string> = new Map([\r\n  /**\r\n   * 错误码及对应的错误信息\r\n   */\r\n  [9010001, 'ClipboardData:ok'],\r\n  [9010002, 'ClipboardData:failed'],\r\n]);\r\n\r\n\r\n/**\r\n * 错误对象实现\r\n */\r\nexport class GeneralCallbackResultImpl extends UniError implements GeneralCallbackResult {\r\n\r\n  /**\r\n   * 错误对象构造函数\r\n   */\r\n  constructor(errCode : LimeClipboardErrorCode, type: string = 'set') {\r\n    super();\r\n    this.errSubject =  type + UniErrorSubject;\r\n    this.errCode = errCode;\r\n    this.errMsg = type + (UniErrors[errCode] ?? \"\");\r\n  }\r\n}"],"names":[],"mappings":";;AAAA,OAAqB,wBAA0B,AAAC;AAChD,OAA6B,gCAAkC,AAAC;AAChE,OAAoB,uBAAyB,AAAC;;;;;;;;;;;;;;;AAC9C,OAA2B,aAAe,CAAjC;+BAsBD;UClBI,yBAAyB,MAAO;UAI3B,wBAA8B;iBAC9C,SAAU;;UAYC,oCAAoC,KAAM,aAAa,IAAI;UAE3D,gCAAgC,KAAM,aAAa,IAAI;UAEvD,mCAAmC,KAAM,aAAa,IAAI;AAGjC,WAAzB;IACX,oBAAY,OAAO,SAAA;IAEnB;mBAAO,MAAM,CAAA;IAEb,mBAAY,yCAAgC;IAE5C,eAAQ,qCAA4B;IAEpC,kBAAW,wCAA+B;;;;;;AAIS,WAAxC;IAEX;mBAAO,MAAM,CAAA;IACb;qBAAS,MAAM,CAAA;;;;;;UAGJ,oCAAoC,KAAM,aAAa,IAAI;UAE3D,gCAAgC,KAAM,aAAa,IAAI;UAEvD,mCACX,QAAS,0CACL,IAAI;AAE4B,WAAzB;IAEX,mBAAY,yCAAgC;IAE5C,eAAQ,qCAA4B;IAEpC,kBAAW,wCAA+B;;;;;;ACzDpC,IAAM,kBAAkB;AAQxB,IAAM,WAAY,4BAA4B,MAAM,IAAI,AAAI,IAAI;IAIrE;AAAC,eAAO;QAAE;KAAmB;IAC7B;AAAC,eAAO;QAAE;KAAuB;CAClC;AAMK,WAAO,4BAAkC;;;;IAK7C,YAAY,+BAAgC,EAAE,MAAM,MAAM,GAAG,KAAK,IAChE,KAAK,GAD2D;QAEhE,IAAI,CAAC,UAAU,GAAI,OAAO;QAC1B,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE;IAChD;;AF1BI,IAAU,iBAAiB,+BAAgC,EAAA;IAChE,IAAM,kCAAkC,KAAK;QAC5C,IAAM,MAAM,0BAA8B,OAAO;QACjD,QAAQ,IAAI,SAAG;QACf,QAAQ,QAAQ,SAAG;IACpB;IACA,IAAI;QACH,IAAM,UAAU,WAAW,aAAa;QACxC,IAAI,WAAW,IAAI,EAAE;YACpB,IAAM,YAAY,QAAQ,gBAAgB,CAAC,QAAQ,iBAAiB,EAAC,EAAA,CAAI;YACzE,IAAM,OAAO,SAAS,YAAY,CAAC,SAAS,QAAQ,IAAI;YACxD,UAAU,cAAc,CAAC;YACzB,IAAM,MAAM,0BAA8B,OAAO;YACjD,IAAG,QAAQ,SAAS,IAAI,KAAK,EAAC;gBAC7B,+BACC,OAAM,WACN,QAAO;;YAGT,QAAQ,OAAO,SAAG;YAClB,QAAQ,QAAQ,SAAG;eACb;YACN;;;KAGA,OAAO,cAAG;QACX;;AAGF;AAGM,IAAU,iBAAiB,+BAAgC,EAAA;IAChE,IAAM,kCAAkC,KAAK;QAC5C,IAAM,MAAM,0BAA8B,OAAO,EAAE;QACnD,QAAQ,IAAI,SAAG;QACf,QAAQ,QAAQ,SAAG;IACpB;IACA,IAAI;QACH,IAAM,UAAU,WAAW,aAAa;QACxC,IAAI,WAAW,IAAI,EAAE;YACpB,IAAM,YAAY,QAAQ,gBAAgB,CAAC,QAAQ,iBAAiB,EAAC,EAAA,CAAI;YACzE,IAAM,OAAO,UAAU,cAAc;YACrC,IAAI,QAAQ,IAAI,IAAI,KAAK,YAAY,KAAK,CAAC,EAAE;gBAC5C,IAAM,OAAO,KAAK,SAAS,CAAC,CAAC,EAAE,OAAO;gBACtC,IAAI,QAAQ,IAAI,EAAE;oBACjB,QAAQ,OAAO,+CACd,OAAM,KAAK,QAAQ,IACnB,SAAQ;uBAGH;oBAEN;iBACA;mBACK;gBAEN;aACA;eACK;YAEN;;;KAGA,OAAO,cAAG;QACX;;AAGF"}