import _easycom_fui_radio from '@/uni_modules/firstui-unix/components/fui-radio/fui-radio.uvue';
import _easycom_fui_list_cell from '@/uni_modules/firstui-unix/components/fui-list-cell/fui-list-cell.uvue';
import _easycom_fui_label from '@/uni_modules/firstui-unix/components/fui-label/fui-label.uvue';
import _easycom_fui_radio_group from '@/uni_modules/firstui-unix/components/fui-radio-group/fui-radio-group.uvue';
import { ref } from 'vue';
import TopNavBar from '@/components/TopNavBar.uvue';
type RadioItem = {
    name: string;
    desc: string;
    img: string;
    value: string;
    checked: boolean;
};
const __sfc__ = defineComponent({
    __name: 'deviceNight',
    setup(__props) {
        const __ins = getCurrentInstance()!;
        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;
        const _cache = __ins.renderCache;
        const val = ref('1');
        const select_img = ref('../../../static/u4062.png');
        const radioItems = ref<RadioItem[]>([{
                name: '黑白夜视',
                desc: '采用红外补光，隐蔽性高，图像为黑白夜视',
                img: '../../../static/u4062.png',
                value: '1',
                checked: true
            } as RadioItem, {
                name: '全彩夜视',
                desc: '夜晚开白光灯，可做照明使用，图像为彩色',
                img: '../../../static/u4063.png',
                value: '2',
                checked: false
            } as RadioItem, {
                name: '智能夜视',
                desc: '默认为黑白夜视，检测到画面为动态是变为全彩夜视',
                img: '../../../static/u4064.png',
                value: '3',
                checked: false
            } as RadioItem, {
                name: '星光夜视',
                desc: '当前环境光线充足，并且不想看到灯光亮起，则选择该项',
                img: '../../../static/u4062.png',
                value: '4',
                checked: false
            } as RadioItem]);
        const goBack = () => {
            uni.navigateBack({
                delta: 1,
            });
        };
        const change = (value: RadioItem) => {
            val.value = value.value;
            select_img.value = value.img;
        };
        return (): any | null => {
            const _component_fui_radio = resolveEasyComponent("fui-radio", _easycom_fui_radio);
            const _component_fui_list_cell = resolveEasyComponent("fui-list-cell", _easycom_fui_list_cell);
            const _component_fui_label = resolveEasyComponent("fui-label", _easycom_fui_label);
            const _component_fui_radio_group = resolveEasyComponent("fui-radio-group", _easycom_fui_radio_group);
            return _cE("view", _uM({ class: "container" }), [
                _cV(unref(TopNavBar), _uM({
                    title: "夜视模式",
                    "show-back": true,
                    onBack: goBack
                })),
                _cE("view", _uM({ class: "content" }), [
                    _cE("image", _uM({
                        src: select_img.value,
                        class: "night-img",
                        mode: "aspectFit"
                    }), null, 8 /* PROPS */, ["src"]),
                    _cE("view", _uM({ class: "select-mode" }), [
                        _cV(_component_fui_radio_group, _uM({
                            modelValue: val.value,
                            "onUpdate:modelValue": ($event: string) => { (val).value = $event; }
                        }), _uM({
                            default: withSlotCtx((): any[] => [
                                _cE(Fragment, null, RenderHelpers.renderList(radioItems.value, (item, index, __index, _cached): any => {
                                    return _cV(_component_fui_label, _uM({ key: index }), _uM({
                                        default: withSlotCtx((): any[] => [
                                            _cV(_component_fui_list_cell, null, _uM({
                                                default: withSlotCtx((): any[] => [
                                                    _cE("view", _uM({
                                                        class: "fui-align__center",
                                                        onClick: () => { change(item); }
                                                    }), [
                                                        _cE("view", _uM({ class: "fui-text-box" }), [
                                                            _cE("text", null, _tD(item.name), 1 /* TEXT */),
                                                            _cV(_component_fui_radio, _uM({
                                                                checked: item.checked,
                                                                value: item.value,
                                                                color: "#FFB703",
                                                                borderColor: "#B2B2B2"
                                                            }), null, 8 /* PROPS */, ["checked", "value"])
                                                        ]),
                                                        _cE("text", _uM({ class: "fui-desc" }), _tD(item.desc), 1 /* TEXT */)
                                                    ], 8 /* PROPS */, ["onClick"])
                                                ]),
                                                _: 2 /* DYNAMIC */
                                            }), 1024 /* DYNAMIC_SLOTS */)
                                        ]),
                                        _: 2 /* DYNAMIC */
                                    }), 1024 /* DYNAMIC_SLOTS */);
                                }), 128 /* KEYED_FRAGMENT */)
                            ]),
                            _: 1 /* STABLE */
                        }), 8 /* PROPS */, ["modelValue", "onUpdate:modelValue"])
                    ])
                ])
            ]);
        };
    }
});
export default __sfc__;
const GenPagesIndexDeviceSettingInfoDeviceNightStyles = [_uM([["container", _pS(_uM([["height", "100%"], ["backgroundColor", "#f5f5f5"], ["paddingTop", "20rpx"], ["paddingRight", "20rpx"], ["paddingBottom", "20rpx"], ["paddingLeft", "20rpx"]]))], ["content", _uM([[".container ", _uM([["backgroundColor", "#ffffff"], ["borderTopLeftRadius", "20rpx"], ["borderTopRightRadius", "20rpx"], ["borderBottomRightRadius", "20rpx"], ["borderBottomLeftRadius", "20rpx"]])]])], ["night-img", _uM([[".container .content ", _uM([["width", "100%"], ["height", "245rpx"]])]])], ["fui-align__center", _uM([[".container .content .select-mode ", _uM([["width", "100%"]])]])], ["fui-text-box", _uM([[".container .content .select-mode .fui-align__center ", _uM([["display", "flex"], ["flexDirection", "row"], ["justifyContent", "space-between"], ["alignItems", "center"], ["marginBottom", "10rpx"]])]])], ["fui-desc", _uM([[".container .content .select-mode .fui-align__center ", _uM([["color", "#999999"], ["fontSize", "24rpx"]])]])]])];
