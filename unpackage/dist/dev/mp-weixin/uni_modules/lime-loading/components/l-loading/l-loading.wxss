:host{display:flex;flex-direction:column}
/**
 * 这里是uni-app内置的常用样式变量
 *
 * uni-app 官方扩展插件及插件市场（https://ext.dcloud.net.cn）上很多三方插件均使用了这些样式变量
 * 如果你是插件开发者，建议你使用scss预处理，并在插件代码中直接使用这些变量（无需 import 这个文件），方便用户通过搭积木的方式开发整体风格一致的App
 *
 */
/**
 * 如果你是App开发者（插件使用者），你可以通过修改这些变量来定制自己的插件主题，实现自定义主题功能
 *
 * 如果你的项目同样使用了scss预处理，你也可以直接在你的 scss 代码中使用如下变量，同时无需 import 这个文件
 */
/* 颜色变量 */
/* 行为相关颜色 */
/* 文字基本颜色 */
/* 背景颜色 */
/* 边框颜色 */
/* 尺寸变量 */
/* 文字尺寸 */
/* 图片尺寸 */
/* Border Radius */
/* 水平间距 */
/* 垂直间距 */
/* 透明度 */
/* 文章场景相关 */
@property --l-loading-start {
  syntax: "<length-percentage>";
  initial-value: 1%;
  inherits: false;
}
@property --l-loading-end {
  syntax: "<length-percentage>";
  initial-value: 1%;
  inherits: false;
}
@property --l-left {
  syntax: "<length-percentage>";
  initial-value: 1%;
  inherits: false;
}
@property --l-loadding-ball-size {
  syntax: "<length> | <length-percentage>";
  inherits: false;
}
.l-loading {
  display: flex;
  position: relative;
  flex-direction: row;
  align-items: center;
  color: var(--l-loading-color, #3283ff);
}
.l-loading--ball {
  display: inline-flex;
  align-items: center;
}
.l-loading--ball .l-loading__ball {
  position: relative;
  perspective: calc(var(--l-loadding-ball-size) * 4);
  transform-style: preserve-3d;
}
.l-loading--ball .l-loading__ball:before {
  background-color: #3283ff;
  left: 0%;
  animation-name: l-ball-before;
}
.l-loading--ball .l-loading__ball:after {
  right: 0;
  background-color: red;
  animation-name: l-ball-after;
}
.l-loading--ball .l-loading__ball:before, .l-loading--ball .l-loading__ball:after {
  top: 0;
  content: "";
  position: absolute;
  height: 100%;
  aspect-ratio: 1/1;
  border-radius: 50%;
  animation-iteration-count: infinite;
  animation-delay: -100ms;
  animation-duration: 900ms;
  mix-blend-mode: darken;
  animation-play-state: var(--l-play-state, running);
}
.l-loading--circular .l-loading__circular {
  display: inline-block;
  position: relative;
  animation: l-rotate var(--l-loading-duration, 2s) linear infinite;
  animation-play-state: var(--l-play-state, running);
  vertical-align: middle;
}
.l-loading--circular .l-loading__circular:before {
  content: "";
  display: block;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: conic-gradient(transparent 0%, transparent var(--l-loading-start, 0%), var(--l-loading-color-1, currentColor) var(--l-loading-start, 0%), var(--l-loading-color-2, currentColor) var(--l-loading-end, 0%), transparent var(--l-loading-end, 0%), transparent 100%);
  mask: radial-gradient(closest-side, transparent calc(80% - 1px), #fff 80%);
  -webkit-mask: radial-gradient(closest-side, transparent calc(80% - 1px), #fff 80%);
  animation: l-circular 3s ease-in-out infinite;
  animation-play-state: var(--l-play-state, running);
  transform: rotate(90deg);
}
.l-loading--spinner .l-loading__spinner {
  position: relative;
  box-sizing: border-box;
  animation-timing-function: steps(12);
  animation: l-rotate 1.5s linear infinite;
  animation-play-state: var(--l-play-state, running);
}
.l-loading--spinner .l-loading__dot {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: rotate(calc(var(--l-loading-dot, 1) * 30deg));
  opacity: calc(var(--l-loading-dot, 1) / 12);
}
.l-loading--spinner .l-loading__dot::before {
  display: block;
  width: 5rpx;
  height: 25%;
  margin: 0 auto;
  background-color: currentColor;
  border-radius: 40%;
  content: " ";
}
.l-loading__text {
  margin-left: var(--l-spacer-xs, 16rpx);
  color: var(--l-loading-text-color, var(--l-text-color-3, rgba(0, 0, 0, 0.45)));
  font-size: var(--l-loading-font-size, var(--l-font-size, 14px));
}
.l-loading.is-vertical {
  flex-direction: column;
}
.l-loading.is-vertical .l-loading__text {
  margin: var(--l-spacer-tn, 8rpx) 0 0;
}
.l-loading__ball, .l-loading__circular, .l-loading__spinner {
  width: var(--l-loading-size, 40rpx);
  height: var(--l-loading-size, 40rpx);
}
@keyframes l-circular {
0% {
    --l-loading-start: 0%;
    --l-loading-end: 0%;
}
50% {
    --l-loading-start: 0%;
    --l-loading-end: 100%;
}
100% {
    --l-loading-start: 100%;
    --l-loading-end: 100%;
}
}
@keyframes l-rotate {
to {
    transform: rotate(1turn);
}
}
@keyframes l-ball-before {
0% {
    animation-timing-function: ease-in;
}
25% {
    animation-timing-function: ease-out;
    --l-left: calc((var(--l-loadding-ball-size,100%) * 2.1 - var(--l-loadding-ball-size,100%)) / 2);
    transform: translate3d(var(--l-left), 0, var(--l-loadding-ball-size));
}
50% {
    --l-left: calc((var(--l-loadding-ball-size,100%) * 2.1 - var(--l-loadding-ball-size,100%)));
    animation-timing-function: ease-in;
    transform: translate3d(var(--l-left), 0, 0);
}
75% {
    animation-timing-function: ease-out;
    --l-left: calc((var(--l-loadding-ball-size,100%) * 2.1 - var(--l-loadding-ball-size,100%)) / 2);
    transform: translate3d(var(--l-left), 0, calc(var(--l-loadding-ball-size) * -1));
}
}
@keyframes l-ball-after {
0% {
    animation-timing-function: ease-in;
}
25% {
    animation-timing-function: ease-out;
    --l-left: calc((var(--l-loadding-ball-size,100%) * 2.1 - var(--l-loadding-ball-size,100%)) / 2 * -1);
    transform: translate3d(var(--l-left), 0, calc(var(--l-loadding-ball-size) * -1));
}
50% {
    animation-timing-function: ease-in;
    --l-left: calc((var(--l-loadding-ball-size,100%) * 2.1 - var(--l-loadding-ball-size,100%)) * -1);
    transform: translate3d(var(--l-left), 0, 0);
}
75% {
    animation-timing-function: ease-out;
    --l-left: calc((var(--l-loadding-ball-size,100%) * 2.1 - var(--l-loadding-ball-size,100%)) / 2 * -1);
    transform: translate3d(var(--l-left), 0, var(--l-loadding-ball-size));
}
}