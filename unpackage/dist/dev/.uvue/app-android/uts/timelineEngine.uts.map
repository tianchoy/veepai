{"version":3,"file":"timelineEngine.uts","sourceRoot":"","sources":["uts/timelineEngine.uts"],"names":[],"mappings":"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","sourcesContent":["// 核心类型定义（使用type替代interface避免Android解析问题）\ntype TimelineParams = {\n  duration: number\n  width: number\n  density: number\n  events: EventMarker[]\n  visibleRange: { start: number; end: number }\n}\n\ntype EventMarker = {\n  timestamp: number\n  type: 'alarm' | 'motion' | 'custom'\n  level: number\n}\n\ntype TimeMark = {\n  timestamp: number\n  position: number\n  label: string\n  hasEvent: boolean\n}\n\n// 主计算函数（Android/iOS双平台兼容）\nexport function calculateTimeline(params: TimelineParams): TimeMark[] {\n  // 参数安全校验\n  if (!params || params.duration <= 0 || params.width <= 0) {\n    __f__('error','at uts/timelineEngine.uts:27',\"Invalid timeline parameters\")\n    return []\n  }\n\n  const results: TimeMark[] = []\n  const pxPerSecond = params.width / params.duration\n  const safeDensity = Math.max(1, Math.min(60, params.density))\n\n  // 生成时间标记（仅渲染可见区域）\n  for (let minute = 0; minute <= params.duration / 60; minute += safeDensity) {\n    const timestamp = minute * 60\n    if (timestamp < params.visibleRange.start || timestamp > params.visibleRange.end) continue\n\n    results.push({\n      timestamp: timestamp,\n      position: androidSafePositionCalc(timestamp * pxPerSecond), // Android特殊处理\n      label: formatTimeLabel(minute),\n      hasEvent: checkEvent(timestamp, params.events)\n    })\n  }\n\n  return results\n}\n\n// Android浮点精度处理\nfunction androidSafePositionCalc(pos: number): number {\n\n  return Math.round(pos * 100) / 100\n\n\n\n\n}\n\n// 事件检测\nfunction checkEvent(timestamp: number, events: EventMarker[]): boolean {\n  if (!events || events.length === 0) return false\n  return events.some(e => Math.abs(e.timestamp - timestamp) < 30)\n}\n\n// 时间格式化\nfunction formatTimeLabel(totalMinutes: number): string {\n  const hours = Math.floor(totalMinutes / 60)\n  const mins = totalMinutes % 60\n  return `${padZero(hours)}:${padZero(mins)}`\n}\n\nfunction padZero(num: number): string {\n  return num < 10 ? `0${num}` : num.toString()\n}"]}