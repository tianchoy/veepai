import _easycom_fui_icon from '@/uni_modules/firstui-unix/components/fui-icon/fui-icon.uvue';
import _easycom_fui_input from '@/uni_modules/firstui-unix/components/fui-input/fui-input.uvue';
import _easycom_fui_button from '@/uni_modules/firstui-unix/components/fui-button/fui-button.uvue';
import { ref } from 'vue';
const __sfc__ = defineComponent({
    __name: 'changePassword',
    setup(__props): any | null {
        const __ins = getCurrentInstance()!;
        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;
        const _cache = __ins.renderCache;
        const oldPassword = ref<string>('');
        const newPassword = ref<string>('');
        const confirmPassword = ref<string>('');
        const btnDisabled = ref<boolean>(true);
        // 创建单独的更新函数
        const updateOldPassword = (e: string) => {
            console.log(e, " at pages/mine/userInfo/changePassword/changePassword.uvue:28");
            oldPassword.value = e;
        };
        const updateNewPassword = (e: string) => {
            // console.log(e)
            // newPassword.value = e
            if (verPassword(e)) {
                newPassword.value = e;
            }
        };
        const updateConfirmPassword = (e: string) => {
            console.log(e, " at pages/mine/userInfo/changePassword/changePassword.uvue:42");
            confirmPassword.value = e;
        };
        const verPassword = (psw: string): boolean => {
            if (psw.length < 8 || psw.length > 16) {
                return false;
            }
            if (!passwordReg(psw)) {
                return false;
            }
            return true;
        };
        // 密码规则：8-16位，包含字母、数字、特殊字符中的至少两类
        const passwordReg = /^(?=.*[a-zA-Z])(?=.*\d)|(?=.*[a-zA-Z])(?=.*[^a-zA-Z\d])|(?=.*\d)(?=.*[^a-zA-Z\d]).{8,16}$/;
        const submit = () => {
            if (!passwordReg.test(newPassword.value)) {
                uni.showToast({
                    title: '密码格式错误',
                    icon: 'none'
                });
                return;
            }
            if (newPassword.value != confirmPassword.value) {
                uni.showToast({
                    title: '两次密码不一致',
                    icon: 'none'
                });
                return;
            }
            uni.showToast({
                title: '提交成功',
                icon: 'none'
            });
        };
        return (): any | null => {
            const _component_fui_icon = resolveEasyComponent("fui-icon", _easycom_fui_icon);
            const _component_fui_input = resolveEasyComponent("fui-input", _easycom_fui_input);
            const _component_fui_button = resolveEasyComponent("fui-button", _easycom_fui_button);
            return createElementVNode("view", utsMapOf({ class: "container" }), [
                createElementVNode("view", utsMapOf({ class: "content" }), [
                    createVNode(_component_fui_icon, utsMapOf({ name: "addfriends" })),
                    createVNode(_component_fui_input, utsMapOf({
                        label: "旧密码",
                        placeholder: "请输入原密码",
                        modelValue: oldPassword.value,
                        onInput: updateOldPassword
                    }), null, 8 /* PROPS */, ["modelValue"]),
                    createVNode(_component_fui_input, utsMapOf({
                        label: "新密码",
                        placeholder: "请输入新密码",
                        modelValue: newPassword.value,
                        onInput: updateNewPassword
                    }), null, 8 /* PROPS */, ["modelValue"]),
                    createVNode(_component_fui_input, utsMapOf({
                        label: "确认新密码",
                        placeholder: "再次输入新密码",
                        modelValue: confirmPassword.value,
                        onInput: updateConfirmPassword
                    }), null, 8 /* PROPS */, ["modelValue"])
                ]),
                createElementVNode("view", utsMapOf({ class: "tips" }), [
                    createElementVNode("text", utsMapOf({ class: "tips-word" }), "密码8-16位,需包含英文字母、数字、特殊字符中两类及以上")
                ]),
                createElementVNode("view", null, [
                    createVNode(_component_fui_button, utsMapOf({
                        color: "#fff",
                        disabled: btnDisabled.value,
                        text: "提交",
                        background: "#1296db",
                        height: "80rpx",
                        onOnclick: submit
                    }), null, 8 /* PROPS */, ["disabled"])
                ])
            ]);
        };
    }
});
export default __sfc__;
const GenPagesMineUserInfoChangePasswordChangePasswordStyles = [utsMapOf([["container", padStyleMapOf(utsMapOf([["height", "100%"], ["backgroundColor", "#f5f5f5"], ["paddingTop", "50rpx"], ["paddingRight", "20rpx"], ["paddingBottom", "50rpx"], ["paddingLeft", "20rpx"]]))], ["fui-input__label-size", utsMapOf([[".container ", utsMapOf([["!fontSize", "26rpx"]])]])], ["content", utsMapOf([[".container ", utsMapOf([["backgroundColor", "#ffffff"], ["borderTopLeftRadius", "20rpx"], ["borderTopRightRadius", "20rpx"], ["borderBottomRightRadius", "20rpx"], ["borderBottomLeftRadius", "20rpx"], ["paddingTop", "20rpx"], ["paddingRight", "20rpx"], ["paddingBottom", "20rpx"], ["paddingLeft", "20rpx"]])]])], ["tips", utsMapOf([[".container ", utsMapOf([["marginTop", "40rpx"], ["marginRight", 0], ["marginBottom", "40rpx"], ["marginLeft", 0]])]])], ["tips-word", utsMapOf([[".container .tips ", utsMapOf([["fontSize", "30rpx"], ["color", "#999999"]])]])]])];
//# sourceMappingURL=changePassword.uvue.map