import _easycom_l_button from '@/uni_modules/lime-button/components/l-button/l-button.uvue';
import _easycom_l_search from '@/uni_modules/lime-search/components/l-search/l-search.uvue';
import _easycom_l_icon from '@/uni_modules/lime-icon/components/l-icon/l-icon.uvue';
import _easycom_l_tab_panel from '@/uni_modules/lime-tabs/components/l-tab-panel/l-tab-panel.uvue';
import _easycom_l_tabs from '@/uni_modules/lime-tabs/components/l-tabs/l-tabs.uvue';
const __sfc__ = defineComponent({
    __name: 'helpCenter',
    setup(__props): any | null {
        const __ins = getCurrentInstance()!;
        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;
        const _cache = __ins.renderCache;
        const value = ref('');
        const tabIndex = ref(0);
        const search = () => {
            uni.showToast({
                title: value.value,
            });
        };
        const questionDetail = () => {
            uni.navigateTo({
                url: '/pages/mine/helpCenter/questionDetail/questionDetail',
            });
        };
        return (): any | null => {
            const _component_l_button = resolveEasyComponent("l-button", _easycom_l_button);
            const _component_l_search = resolveEasyComponent("l-search", _easycom_l_search);
            const _component_l_icon = resolveEasyComponent("l-icon", _easycom_l_icon);
            const _component_l_tab_panel = resolveEasyComponent("l-tab-panel", _easycom_l_tab_panel);
            const _component_l_tabs = resolveEasyComponent("l-tabs", _easycom_l_tabs);
            return createElementVNode("view", utsMapOf({ class: "container" }), [
                createElementVNode("view", utsMapOf({ class: "search-bar" }), [
                    createVNode(_component_l_search, utsMapOf({
                        class: "search",
                        padding: "10rpx 5rpx 10rpx 24rpx",
                        modelValue: unref(value),
                        "onUpdate:modelValue": $event => { trySetRefValue(value, $event); },
                        shape: "round",
                        placeholder: "请输入关键字"
                    }), utsMapOf({
                        "right-icon": withSlotCtx((): any[] => [
                            createVNode(_component_l_button, utsMapOf({
                                type: "primary",
                                size: "small",
                                shape: "round",
                                onClick: search
                            }), utsMapOf({
                                default: withSlotCtx((): any[] => ["搜索"]),
                                _: 1 /* STABLE */
                            }))
                        ]),
                        _: 1 /* STABLE */
                    }), 8 /* PROPS */, ["modelValue"])
                ]),
                createElementVNode("view", utsMapOf({ class: "question-box" }), [
                    createVNode(_component_l_tabs, utsMapOf({
                        modelValue: unref(tabIndex),
                        "onUpdate:modelValue": $event => { trySetRefValue(tabIndex, $event); },
                        "space-evenly": false,
                        animated: true
                    }), utsMapOf({
                        default: withSlotCtx((): any[] => [
                            createVNode(_component_l_tab_panel, utsMapOf({
                                value: 0,
                                label: "添加设备",
                                onClick: questionDetail
                            }), utsMapOf({
                                default: withSlotCtx((): any[] => [
                                    createElementVNode("view", utsMapOf({ class: "question-item" }), [
                                        createElementVNode("text", null, "如何添加设备？"),
                                        createVNode(_component_l_icon, utsMapOf({
                                            name: "chevron-right",
                                            size: "28"
                                        }))
                                    ])
                                ]),
                                _: 1 /* STABLE */
                            })),
                            createVNode(_component_l_tab_panel, utsMapOf({
                                value: 1,
                                label: "网络问题"
                            }), utsMapOf({
                                default: withSlotCtx((): any[] => [
                                    createElementVNode("view", utsMapOf({ class: "question-item" }), [
                                        createElementVNode("text", null, "网络连不上？"),
                                        createVNode(_component_l_icon, utsMapOf({
                                            name: "chevron-right",
                                            size: "28"
                                        }))
                                    ])
                                ]),
                                _: 1 /* STABLE */
                            })),
                            createVNode(_component_l_tab_panel, utsMapOf({
                                value: 2,
                                label: "报警问题"
                            }), utsMapOf({
                                default: withSlotCtx((): any[] => [
                                    createElementVNode("view", utsMapOf({ class: "question-item" }), [
                                        createElementVNode("text", null, "报警文件在哪查看？"),
                                        createVNode(_component_l_icon, utsMapOf({
                                            name: "chevron-right",
                                            size: "28"
                                        }))
                                    ])
                                ]),
                                _: 1 /* STABLE */
                            }))
                        ]),
                        _: 1 /* STABLE */
                    }), 8 /* PROPS */, ["modelValue"])
                ])
            ]);
        };
    }
});
export default __sfc__;
const GenPagesMineHelpCenterHelpCenterStyles = [utsMapOf([["container", padStyleMapOf(utsMapOf([["height", "100%"], ["backgroundColor", "#f5f5f5"], ["paddingTop", "20rpx"], ["paddingRight", "20rpx"], ["paddingBottom", "20rpx"], ["paddingLeft", "20rpx"]]))], ["search-bar", utsMapOf([[".container ", utsMapOf([["marginTop", "30rpx"], ["marginRight", 0], ["marginBottom", "30rpx"], ["marginLeft", 0]])]])], ["l-tabs", utsMapOf([[".container ", utsMapOf([["borderTopLeftRadius", "20rpx"], ["borderTopRightRadius", "20rpx"], ["borderBottomRightRadius", "20rpx"], ["borderBottomLeftRadius", "20rpx"], ["paddingTop", "20rpx"], ["paddingRight", "20rpx"], ["paddingBottom", "20rpx"], ["paddingLeft", "20rpx"]])]])], ["question-item", utsMapOf([[".container ", utsMapOf([["display", "flex"], ["flexDirection", "row"], ["justifyContent", "space-between"], ["alignItems", "center"], ["paddingTop", "20rpx"], ["paddingRight", 0], ["paddingBottom", "20rpx"], ["paddingLeft", 0]])]])]])];
//# sourceMappingURL=helpCenter.uvue.map