{"version":3,"file":"progress.uts","sourceRoot":"","sources":["uni_modules/lime-progress/components/l-progress/progress.uts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { measureText } from '@/uni_modules/lime-progress'\r\nimport { LProgressOptions } from './types';\r\n\r\n\r\nfunction calculateBorderRadius(width : number, height : number, radius : number[]) : number[] {\r\n\r\n\t// 验证半径是否为非负数\r\n\tif (radius.some((r) : boolean => r < 0)) {\r\n\t\tthrow new Error('Radius values must be non-negative numbers.');\r\n\t}\r\n\r\n\t// 将 radius 扩展到 4 位\r\n\twhile (radius.length < 4) {\r\n\t\tradius.push(radius[radius.length > 2 ? radius.length - 2 : 0]);\r\n\t}\r\n\r\n\r\n\tconst factors = [\r\n\t\twidth / (radius[0] + radius[1]),\r\n\t\theight / (radius[1] + radius[2]),\r\n\t\twidth / (radius[2] + radius[3]),\r\n\t\theight / (radius[0] + radius[3]),\r\n\t]\r\n\tconst minFactor = Math.min(...factors);\r\n\r\n\tif (minFactor <= 1) {\r\n\t\tfor (var i = 0; i < radius.length; i++) {\r\n\t\t\tradius[i] *= minFactor\r\n\t\t}\r\n\t}\r\n\treturn radius\r\n}\r\nfunction roundRect(ctx : DrawableContext, x : number, y : number, width : number, height : number, radius : number[]) {\r\n\tconst _radius = calculateBorderRadius(width, height, radius)\r\n\tconst x1 = x;\r\n\tconst y1 = y;\r\n\tconst x2 = width + x;\r\n\tconst y2 = height + y;\r\n\tconst leftTopCx = _radius[0] * (1 - 0.55191502449);\r\n\tconst rightTopCx = _radius[1] * (1 - 0.55191502449);\r\n\tconst rightBottomCx = _radius[2] * (1 - 0.55191502449);\r\n\tconst leftBottomCx = _radius[3] * (1 - 0.55191502449);\r\n\r\n\tctx.beginPath();\r\n\tctx.moveTo(x1 + _radius[0], y1);\r\n\tctx.lineTo(x2 - _radius[1], y1);\r\n\tctx.bezierCurveTo(x2 - rightTopCx, y1, x2, y1 + rightTopCx, x2, y1 + _radius[1]);\r\n\tctx.lineTo(x2, y2 - _radius[2]);\r\n\tctx.bezierCurveTo(x2, y2 - rightBottomCx, x2 - rightBottomCx, y2, x2 - _radius[2], y2);\r\n\tctx.lineTo(x1 + _radius[3], y2);\r\n\tctx.bezierCurveTo(x1 + leftBottomCx, y2, x1, y2 - leftBottomCx, x1, y2 - _radius[3]);\r\n\tctx.lineTo(x1, y1 + _radius[0]);\r\n\tctx.bezierCurveTo(x1, y1 + leftTopCx, x1 + leftTopCx, y1, x1 + _radius[0], y1);\r\n\tctx.closePath()\r\n}\r\n\r\n/**\r\n * 绘制圆角矩形路径\r\n * @param ctx - 绘图上下文\r\n * @param x - 起始x坐标\r\n * @param y - 起始y坐标\r\n * @param width - 宽度\r\n * @param height - 高度\r\n * @param radius - 圆角半径\r\n */\r\n\r\nfunction drawRoundedRect(ctx : DrawableContext, x : number, y : number, width : number, height : number, radius : number = 0) {\r\n\troundRect(ctx, x - radius, y - radius, width + radius, height, [radius])\r\n}\r\nfunction drawArc(ctx : DrawableContext, x : number, y : number, radius : number, color : string) {\r\n\r\n\tctx.beginPath();\r\n\tctx.fillStyle = color\r\n\t// ctx.lineWidth = lineWidth\r\n\tctx.arc(center, center, radius, beginAngle, endAngle)\r\n\tctx.fill()\r\n}\r\n\r\nexport class Progress {\r\n\tprivate el : UniElement;\r\n\tprivate ctx : DrawableContext\r\n\tprivate textWidth = 0\r\n\tprivate containerWidth = 0\r\n\tprivate containerHeight = 0\r\n\tprivate currentPercentage = 0\r\n\tprivate isInitialized = false\r\n\tprivate resizeObserver : UniResizeObserver\r\n\tprivate opt : LProgressOptions = {\r\n\t\tshowInfo: false,\r\n\t\tstrokeColor: '#1677ff',\r\n\t\tstrokeWidth: 4,\r\n\t\ttrailColor: 'rgba(0, 0, 0, 0.06)',\r\n\t\tlinecap: 'round',\r\n\t\tfontSize: 12,\r\n\t\tinfoAlign: 'end',\r\n\t\tinfoType: 'outer',\r\n\t\tinfoColor: 'black'\r\n\t}\r\n\tconstructor(el : UniElement) {\r\n\t\tthis.el = el\r\n\t\tthis.ctx = el.getDrawableContext() as DrawableContext\r\n\r\n\t\tthis.resizeObserver = new UniResizeObserver((entries : Array<UniResizeObserverEntry>) => {\r\n\t\t\tconst height = Math.max(this.opt.showInfo! ? measureText(this.opt.fontSize!, '00%')[1] : 0, this.opt.strokeWidth!)\r\n\t\t\tthis.el.style.setProperty('height', height + 'px')\r\n\t\t\tconst rect = entries[0].target.getBoundingClientRect()\r\n\t\t\tthis.containerWidth = rect.width\r\n\t\t\tthis.containerHeight = height\r\n\t\t\tthis.isInitialized = false\r\n\t\t\tthis.render(this.currentPercentage)\r\n\t\t})\r\n\t\tthis.resizeObserver.observe(el)\r\n\t}\r\n\t/**\r\n\t  * 设置进度条选项\r\n\t  * @param options - 进度条配置项\r\n\t  */\r\n\tsetOption(options : LProgressOptions) {\r\n\t\tfor (let key in options) {\r\n\t\t\tif (options[key] != null && options[key] != 0) {\r\n\t\t\t\tthis.opt[key] = options[key]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.opt.showInfo!) {\r\n\t\t\tthis.textWidth = 0\r\n\t\t}\r\n\t\t// const height = Math.max(this.opt.showInfo! ? this.opt.fontSize! : 0, this.opt.strokeWidth!)\r\n\t\t// const height = Math.max(this.opt.showInfo! ? this.opt.fontSize! : 0, this.opt.strokeWidth!)\r\n\t\tconst height = Math.max(this.opt.showInfo! ? measureText(this.opt.fontSize!, '00%')[1] : 0, this.opt.strokeWidth!)\r\n\t\tthis.el.style.setProperty('height', height + 'px')\r\n\t\tconst rect = this.el.getBoundingClientRect()\r\n\t\tthis.containerWidth = rect.width\r\n\t\tthis.containerHeight = height\r\n\t}\r\n\t/**\r\n   * 渲染进度条\r\n   * @param percentage - 当前进度百分比\r\n   */\r\n\trender(percentage : number) {\r\n\t\tconst roundedPercentage = Math.floor(percentage);\r\n\t\tif (this.isInitialized && this.currentPercentage == roundedPercentage) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (this.currentPercentage != roundedPercentage) {\r\n\t\t\tthis.currentPercentage = roundedPercentage\r\n\t\t}\r\n\t\tthis.isInitialized = true\r\n\t\tthis.ctx.reset();\r\n\r\n\t\tconst percentageText = roundedPercentage.toString().replace(/\\.0$/, '') + '%'\r\n\t\tconst strokeWidth = this.opt.strokeWidth!\r\n\t\tconst isInfoOuter = this.opt.infoType == 'outer'\r\n\t\tconst isInfoStart = this.opt.infoAlign == 'start'\r\n\t\tconst showInfo = this.opt.showInfo!\r\n\r\n\t\tlet textWidth = 0;\r\n\t\tlet startX = 0;\r\n\t\tlet startY = this.containerHeight / 2;\r\n\t\tlet offset = 0;\r\n\t\tlet gap = 5;\r\n\t\tlet lineWidth = strokeWidth\r\n\t\tlet fontSize = this.opt.fontSize!\r\n\t\tlet textY = 0\r\n\r\n\t\tif (showInfo) {\r\n\t\t\tconst [width, height] = measureText(fontSize, percentageText);\r\n\t\t\ttextWidth = width\r\n\t\t\tconst textHeight = height\r\n\t\t\toffset = isInfoOuter ? width + gap : 0;\r\n\t\t\tlineWidth = !isInfoOuter ? Math.max(strokeWidth, textHeight) : strokeWidth;\r\n\t\t\tthis.ctx.fillStyle = this.opt.infoColor!;\r\n\t\t\tthis.ctx.font = `${fontSize}px`;\r\n\t\t\tstartX += (isInfoStart && isInfoOuter ? textWidth + gap : 0)\r\n\t\t\ttextY = this.containerHeight - (this.containerHeight - textHeight * 0.64) / 2  //(lineWidth - textHeight) / 2  //fontSize + (fontSize - textHeight) / 2\r\n\t\t}\r\n\t\tif (this.opt.linecap == 'round') {\r\n\t\t\tstartX += (lineWidth / 2)\r\n\t\t\toffset += (lineWidth / 2)\r\n\t\t}\r\n\r\n\t\tif (isInfoStart && showInfo && isInfoOuter) {\r\n\t\t\toffset = (lineWidth / 2)\r\n\t\t\tthis.ctx.fillText(percentageText, 0, textY)\r\n\t\t}\r\n\t\tif (!isInfoStart && showInfo && isInfoOuter) {\r\n\t\t\tthis.ctx.fillText(percentageText, this.containerWidth - textWidth, textY)\r\n\t\t}\r\n\r\n\t\tlet percent = roundedPercentage / 100 * (this.containerWidth - offset)\r\n\r\n\t\tthis.ctx.lineWidth = lineWidth\r\n\t\tthis.ctx.fillStyle = this.opt.trailColor!;\r\n\t\tdrawRoundedRect(this.ctx, startX, startY, this.containerWidth - offset, lineWidth, lineWidth / 2);\r\n\t\tthis.ctx.fill();\r\n\t\t// this.ctx.strokeStyle = this.opt.trailColor!\r\n\t\t// this.ctx.lineCap = this.opt.linecap!\r\n\t\t// this.ctx.beginPath()\r\n\t\t// this.ctx.moveTo(startX, startY)\r\n\t\t// this.ctx.lineTo(this.containerWidth - offset, startY)\r\n\t\t// this.ctx.stroke()\r\n\r\n\t\tif (!isInfoOuter && showInfo) {\r\n\t\t\t// this.ctx.strokeStyle = this.opt.strokeColor!\r\n\t\t\t// this.ctx.beginPath()\r\n\t\t\t// this.ctx.moveTo(startX, startY)\r\n\t\t\t// this.ctx.lineTo(Math.max(percent, textWidth + lineWidth / 2), startY)\r\n\t\t\t// this.ctx.stroke()\r\n\t\t\tthis.ctx.fillStyle = this.opt.strokeColor!;\r\n\t\t\tdrawRoundedRect(this.ctx, startX, startY, Math.max(percent, textWidth + lineWidth / 2), lineWidth, lineWidth / 2)\r\n\t\t\tthis.ctx.fill();\r\n\t\t} else if (this.currentPercentage != 0) {\r\n\t\t\tthis.ctx.fillStyle = this.opt.strokeColor!;\r\n\t\t\tdrawRoundedRect(this.ctx, startX, startY, Math.max(percent, startX), lineWidth, lineWidth / 2)\r\n\t\t\tthis.ctx.fill();\r\n\t\t\t// this.ctx.strokeStyle = this.opt.strokeColor!\r\n\t\t\t// this.ctx.beginPath()\r\n\t\t\t// this.ctx.moveTo(startX, startY)\r\n\t\t\t// this.ctx.lineTo(Math.max(percent, startX), startY)\r\n\t\t\t// this.ctx.stroke()\r\n\t\t}\r\n\r\n\t\tif (isInfoStart && this.opt.showInfo! && !isInfoOuter) {\r\n\t\t\tthis.ctx.fillStyle = this.opt.infoColor!;\r\n\t\t\tthis.ctx.fillText(percentageText, 5, textY)\r\n\t\t}\r\n\t\tif (!isInfoStart && this.opt.showInfo! && !isInfoOuter) {\r\n\t\t\tthis.ctx.fillStyle = this.opt.infoColor!;\r\n\t\t\tthis.ctx.textAlign = 'right'\r\n\t\t\tthis.ctx.fillText(percentageText, Math.max(textWidth + lineWidth / 2, percent), textY)\r\n\t\t}\r\n\r\n\t\tthis.ctx.update()\r\n\t}\r\n\tdisconnect() {\r\n\t\tthis.resizeObserver.disconnect()\r\n\t}\r\n}"]}