{"version":3,"sources":["uni_modules/lime-progress/components/l-progress/l-progress.uvue"],"names":[],"mappings":"AAmCC,OAAO,EAAE,WAAW,EAAE,MAAM,uCAAuC,CAAA;AACnE,OAAO,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAKxC,OAAO,EAAE,aAAa,EAAE,oBAAoB,EAAE,MAAM,mDAAmD,CAAA;AACvG,OAAO,EAAE,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAC3C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAA;;;;;;;;;;;;;;;;;;;;;;QA7BrC;;;;;;;;;;;;;;;;;;;;WAoBG;QAYH,MAAM,KAAK,GAAG,OAaZ,CAAA;QACF,MAAM,OAAO,GAAG,QAAA,CAAA,MAAA,EAAA,KAAA,CAAA,KAAA,EAAA,SAAA,CAAkD,CAAA;QAElE,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAG,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE;YAClD,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,OAAO,GAAG,CAAA;YAUzC,OAAO,MAAM,CAAA;QACd,CAAC,CAAC,CAAA;QAuFF,MAAM,WAAW,GAAG,GAAG,CAAC,UAAU,GAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,QAAQ,EAAC,QAAQ,GAAC,IAAI,GAAG,IAAI,CAAA;QACjC,MAAM,OAAO,GAAG,aAAa,CAAC,IAAG,MAAM,CAAA,EAAE,CAAA,OAAO,CAAC,KAAK,EAAE;YACvD,QAAQ,EAAE,GAAG;YACb,SAAS,EAAE,IAAI;SACf,IAAI,oBAAoB,CAAC,CAAA;QAC1B,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,EAAC,MAAM,EAAE,EAAE;YAC7C,IAAG,QAAQ,IAAI,IAAI,EAAE;gBACpB,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;aACnB;QACF,CAAC,CAAC,CAAA;QAEF,SAAS,CAAC,GAAG,EAAE;YACd,QAAQ,CAAC,GAAE,EAAE;gBACZ,IAAG,WAAW,CAAC,KAAK,IAAI,IAAI;oBAAE,OAAO;gBACrC,QAAQ,GAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,KAAK,CAAC,WAAU,EAAA,yEAAC,CAAC,CAAA;gBACnD,MAAM,GAAG,EAAE,gBAAgB,GAAG;oBAC7B,QAAQ,EAAE,KAAK,CAAC,QAAQ;oBACxB,WAAW,EAAE,KAAK,CAAC,WAAW;oBAC9B,WAAW,EAAE,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC;oBAC3C,UAAU,EAAE,KAAK,CAAC,UAAU;oBAC5B,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,QAAQ,EAAE,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC;oBACrC,SAAS,EAAE,KAAK,CAAC,SAAS;oBAC1B,QAAQ,EAAE,KAAK,CAAC,QAAQ;oBACxB,SAAS,EAAE,KAAK,CAAC,SAAS;iBAC1B,CAAA;gBACD,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;gBACxB,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YAChC,CAAC,CAAC,CAAA;QACH,CAAC,CAAC,CAAA;QAEF,WAAW,CAAC,GAAG,EAAE;YAChB,SAAS,EAAE,CAAA;YACX,QAAQ,EAAE,UAAU,EAAE,CAAA;QACvB,CAAC,CAAC,CAAA;;mBApMS,kBAAC,CAAA,MAAA,EAAA,QAAqB,CAAA;qCAAa,CAAa,CAAA,YAAA,EAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA;gBAAjB,OAAI,EAAA,aAAa","sourcesContent":["<template>\n\t<view class=\"l-progress\" :class=\"classes\" ref=\"progressRef\">\n\n\n\n\n\n\n\n\n\n\t</view>\n</template>\n<script lang=\"uts\" setup>\n\t/**\n\t * Progress 进度条组件\n\t * @description 用于展示操作或任务的进度，支持线性进度显示和多种样式配置\n\t * <br>插件类型：LProgressComponentPublicInstance \n\t * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-progress\n\t * \n\t * @property {boolean} showInfo 是否显示进度文本（默认：false）\n\t * @property {string} infoType 进度信息显示方式\n\t * @value outer 在进度条外部显示\n\t * @property {string} infoAlign 文本对齐方式（默认：end）\n\t * @value start\n\t * @value end\n\t * @property {string | string[]} strokeColor 进度条颜色（支持渐变色数组）\n\t * @property {string} trailColor 轨道背景色（默认：rgba(0, 0, 0, 0.06)）\n\t * @property {string} linecap 进度条端点形状（'round' | 'square'）\n\t * @value round \n\t * @value square \n\t * @property {string} infoColor 进度文本颜色\n\t * @property {string | number} fontSize 文本字号（支持CSS单位）\n\t * @property {string | number} strokeWidth 进度条粗细（支持CSS单位，默认：4px）\n\t */\n\timport { unitConvert } from '@/uni_modules/lime-shared/unitConvert'\n\timport { ProgressProps } from './types';\n\n\n\n\n\timport { useTransition, UseTransitionOptions } from '@/uni_modules/lime-shared/animation/useTransition'\n\timport { LProgressOptions } from './types';\n\timport { Progress } from './progress'\n\n\t\n\tconst props = withDefaults(defineProps<ProgressProps>(), {\n\t\t// percent: 0,\n\t\tshowInfo: false,\n\t\tinfoAlign: 'end',\n\t\tinfoType: 'outer',\n\n\t\tstrokeColor: '#1677ff',\n\t\tstrokeWidth: 4,\n\t\ttrailColor: 'rgba(0, 0, 0, 0.06)',\n\t\tlinecap: 'round',\n\t\tfontSize: 12,\n\t\tinfoColor: 'black',\n\n\t})\n\tconst percent = defineModel('percent', {type: Number, default: 0})\n\t\n\tconst classes = computed(():Map<string, boolean> => {\n\t\tconst _class = new Map<string, boolean>()\n\n\n\n\n\n\n\n\n\n\t\treturn _class\n\t})\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tconst progressRef = ref<UniElement|null>(null);\n\tlet progress:Progress|null = null\n\tconst current = useTransition(():number=>percent.value, {\n\t\tduration: 300,\n\t\timmediate: true\n\t} as UseTransitionOptions)\n\tconst stopWatch = watch(current, (v:number) => {\n\t\tif(progress != null) {\n\t\t\tprogress!.render(v)\n\t\t}\n\t})\n\t\n\tonMounted(() => {\n\t\tnextTick(()=>{\n\t\t\tif(progressRef.value == null) return;\n\t\t\tprogress =  new Progress(progressRef.value!);\n\t\t\tconsole.log('props.strokeColor', props.strokeColor)\n\t\t\tconst opt: LProgressOptions = {\n\t\t\t\tshowInfo: props.showInfo,\n\t\t\t\tstrokeColor: props.strokeColor,\n\t\t\t\tstrokeWidth: unitConvert(props.strokeWidth),\n\t\t\t\ttrailColor: props.trailColor,\n\t\t\t\tlinecap: props.linecap,\n\t\t\t\tfontSize: unitConvert(props.fontSize),\n\t\t\t\tinfoAlign: props.infoAlign,\n\t\t\t\tinfoType: props.infoType,\n\t\t\t\tinfoColor: props.infoColor,\n\t\t\t}\n\t\t\tprogress!.setOption(opt)\n\t\t\tprogress!.render(current.value)\n\t\t})\n\t})\n\t\n\tonUnmounted(() => {\n\t\tstopWatch()\n\t\tprogress?.disconnect()\n\t})\n\n</script>\n<style lang=\"scss\">\n\t@import './index';\n</style>\n"]}