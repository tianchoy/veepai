// @ts-nocheck
export interface InputProps {
    /** 键盘弹起时，是否自动上推页面 */
    adjustPosition: boolean;
    /** 文本内容位置，居左/居中/居右 */
    align: 'left' | 'center' | 'right';
    /** 强制 input 处于同层状态，默认 focus 时 input 会切到非同层状态 (仅在 iOS 下生效) */
    alwaysEmbed: boolean;
    /** (即将废弃，请直接使用 focus )自动聚焦，拉起键盘 */
    autoFocus: boolean;
    /** 是否开启无边框模式 */
    bordered: boolean;
    /** 清空图标触发方式，仅在输入框有值时有效 */
    clearTrigger: 'always' | 'focus';
    /** 是否可清空，默认不启动 */
    clearable: boolean;
    /** 点击键盘右下角按钮时是否保持键盘不收起 */
    confirmHold: boolean;
    /** 设置键盘右下角按钮的文字 */
    confirmType: 'send' | 'search' | 'next' | 'go' | 'done';
    /** 指定 focus 时的光标位置 */
    cursor: number;
    /** 光标颜色 */
    cursorColor: string;
    /** 指定光标与键盘的距离，取 input 距离底部的距离和 cursor-spacing 指定的距离的最小值作为光标与键盘的距离 */
    cursorSpacing: number;
    /** 是否禁用输入框 */
    disabled: boolean;
    /** 获取焦点 */
    focus: boolean;
    /** 指定输入框展示值的格式 */
    // format: Function
    /** focus时，点击页面的时候不收起键盘 */
    holdKeyboard: boolean;
    /** 左侧文本 */
    label?: string;
    /** 标题输入框布局方式 */
    layout: 'horizontal' | 'vertical';
    /** 用户最多可以输入的字符个数，一个中文汉字表示两个字符长度。`maxcharacter` 和 `maxlength` 二选一使用 */
    maxcharacter?: number;
    /** 用户最多可以输入的文本长度，一个中文等于一个计数长度。默认为 -1，不限制输入长度。`maxcharacter` 和 `maxlength` 二选一使用 */
    maxlength: number;
    /** 占位符 */
    placeholder: string;
    /** 指定 placeholder 的样式 */
    placeholderStyle: string;
    /** 指定 placeholder 的样式类 */
    placeholderClass?: string;
    /** 只读状态 */
    readonly: boolean;
    /** 安全键盘加密公钥的路径，只支持包内路径 */
    safePasswordCertPath: string;
    /** 安全键盘计算 hash 的算法表达式，如 `md5(sha1('foo' + sha256(sm3(password + 'bar'))))` */
    safePasswordCustomHash: string;
    /** 安全键盘输入密码长度 */
    safePasswordLength?: number;
    /** 安全键盘加密盐值 */
    safePasswordNonce: string;
    /** 安全键盘计算 hash 盐值，若指定custom-hash 则无效 */
    safePasswordSalt: string;
    /** 安全键盘加密时间戳 */
    safePasswordTimeStamp?: number;
    /** 光标结束位置，自动聚集时有效，需与 selection-start 搭配使用 */
    selectionEnd: number;
    /** 光标起始位置，自动聚集时有效，需与 selection-end 搭配使用 */
    selectionStart: number;
    status: 'default' | 'success' | 'warning' | 'error';
    /** 组件前置图标。值为字符串表示图标名称 */
    prefixIcon?: string;
    prefixIconColor?: string;
    /** 后置图标前的后置内容 */
    suffix?: string;
    /** 后置文本内容。值为字符串则表示图标名称 */
    suffixIcon?: string;
    suffixIconColor?: string;
    /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */
    tips?: string;
    type: 'text' | 'number' | 'idcard' | 'digit' | 'safe-password' | 'password' | 'nickname';
    value?: string | number;
    modelValue?: string | number;
    lStyle?: string;
    lableStyle?: string;
    tipsStyle?: string;
    inputStyle?: string;
    borderColor?: string;
    /**
     * 是否使用经典边框样式
     */
    classic: boolean;
    focused: boolean;
    focusedBorderColor?: string;
    prefixIconSize?: string;
    suffixIconSize?: string;
    clearIconSize?: string;
}
//# sourceMappingURL=type.uts.map