{"version":3,"file":"utils.uts","sourceRoot":"","sources":["uni_modules/lime-date-strip/components/l-date-strip/utils.uts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { WeekRange, DateType } from './type';\r\n\r\n\r\n/**\r\n * 获取指定日期所在周的日期范围。\r\n * @param {Date} date - 指定日期。\r\n * @param {number} firstDayOfWeek - 一周的第一天，0 表示周日，1 表示周一，以此类推。\r\n * @returns {WeekRange} 返回一个包含周起始和结束日期的对象。\r\n */\r\n\r\nexport function getWeekRange(date : Date, firstDayOfWeek : number) : WeekRange {\r\n\tconst start = new Date(date.getTime());\r\n\tconst dayOffset = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n\tstart.setDate(start.getDate() - dayOffset);\r\n\r\n\tconst end = new Date(start.getTime());\r\n\tend.setDate(end.getDate() + 6);\r\n\treturn { start, end } as WeekRange\r\n};\r\n\r\n/**\r\n * 向指定日期添加天数。\r\n * @param {Date} date - 基础日期。\r\n * @param {number} days - 要添加的天数，可以是正数或负数。\r\n * @returns {Date} 返回一个新的日期对象，该对象是基础日期加上指定天数后的结果。\r\n */\r\nexport function addDays(date : Date, days : number) : Date {\r\n\tconst result = new Date(date.getTime());\r\n\tresult.setDate(result.getDate() + days);\r\n\treturn result;\r\n};\r\n\r\n\r\nexport function addWeeks(date : Date, weeks : number) : Date {\r\n\tconst result = new Date(date.getTime());\r\n\tresult.setDate(result.getDate() + weeks * 7);\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 判断两个日期是否表示同一天（忽略时间部分）。\r\n *\r\n * @param date1 - 第一个日期。\r\n * @param date2 - 第二个日期。\r\n * @returns 如果两个日期是同一天，返回 true；否则返回 false。\r\n */\r\nfunction isSameDay(date1 : Date, date2 : Date) : boolean {\r\n\treturn (\r\n\t\tdate1.getFullYear() == date2.getFullYear() &&\r\n\t\tdate1.getMonth() == date2.getMonth() &&\r\n\t\tdate1.getDate() == date2.getDate()\r\n\t);\r\n}\r\nexport function calcType(date : Date, minDate : Date, maxDate : Date, selectedDate : Date | null) : DateType {\r\n\t// 检查日期是否早于 minDate 或晚于 maxDate\r\n\tif (date.getTime() < minDate.getTime() || date.getTime() > maxDate.getTime()) {\r\n\t    return 'disabled';\r\n\t}\r\n\t// 如果 selectedDate 不为 null，检查日期是否等于 selectedDate\r\n\tif (selectedDate != null && isSameDay(date, selectedDate)) {\r\n\t\treturn 'selected';\r\n\t}\r\n\treturn ''\r\n}\r\n\r\n\r\nexport function daysBetween(date1: Date, date2: Date): number {\n  // 将两个日期转换为毫秒\n  const diffInMilliseconds = Math.abs(date2.getTime() - date1.getTime());\n  return Math.floor(diffInMilliseconds / (1000 * 3600 * 24));\n}"]}