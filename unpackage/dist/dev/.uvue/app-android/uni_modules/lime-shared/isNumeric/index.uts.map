{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/lime-shared/isNumeric/index.ts"],"names":[],"mappings":"AAAA,cAAc;AAEd;;;;GAIG;AAUH,OAAO,EAAC,QAAQ,EAAC,MAAM,aAAa,CAAC;AACrC,OAAO,EAAC,QAAQ,EAAC,MAAM,aAAa,CAAC;AACrC,MAAM,UAAU,SAAS,CAAC,KAAK,EAAG,GAAG,GAAC,IAAI,GAAI,OAAO;IACpD,IAAG,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,KAAK,CAAA;KACZ;IACD,IAAG,QAAQ,CAAC,KAAK,CAAC,EAAE;QACnB,OAAO,IAAI,CAAA;KACX;SAAM,IAAG,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC1B,6CAA6C;QAC7C,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,sBAAsB,CAAC,CAAA;QAChD,OAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,CAAA,CAAC,iCAAiC;KACrE;IACD,OAAO,KAAK,CAAA;IACZ,0CAA0C;AAC3C,CAAC","sourcesContent":["// @ts-nocheck\r\n\r\n/**\r\n * 检查一个值是否为数字类型或表示数字的字符串\r\n * @param value 要检查的值，可以是 string 类型或 number 类型\r\n * @returns 如果值是数字类型或表示数字的字符串，则返回 true；否则返回 false\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {isNumber} from '../isNumber';\r\nimport {isString} from '../isString';\r\nexport function isNumeric(value : any|null) : boolean {\r\n\tif(value == null) {\r\n\t\treturn false\r\n\t}\r\n\tif(isNumber(value)) {\r\n\t\treturn true\r\n\t} else if(isString(value)) {\r\n\t\t// const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\r\n\t\tconst regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\")\r\n\t\treturn  regex.test(value as string) //regex.matches(value as string) \r\n\t}\r\n\treturn false\r\n\t// return /^(-)?\\d+(\\.\\d+)?$/.test(value);\r\n}\r\n\r\n"]}