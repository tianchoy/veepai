{"version":3,"file":"bezier.uts","sourceRoot":"","sources":["uni_modules/lime-shared/animation/bezier.ts"],"names":[],"mappings":"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","sourcesContent":["export function cubicBezier(p1x : number, p1y : number, p2x : number, p2y : number):(x: number)=> number {\r\n\tconst ZERO_LIMIT = 1e-6;\r\n\t// Calculate the polynomial coefficients,\r\n\t// implicit first and last control points are (0,0) and (1,1).\r\n\tconst ax = 3 * p1x - 3 * p2x + 1;\r\n\tconst bx = 3 * p2x - 6 * p1x;\r\n\tconst cx = 3 * p1x;\r\n\r\n\tconst ay = 3 * p1y - 3 * p2y + 1;\r\n\tconst by = 3 * p2y - 6 * p1y;\r\n\tconst cy = 3 * p1y;\r\n\r\n\tfunction sampleCurveDerivativeX(t : number) : number {\r\n\t\t// `ax t^3 + bx t^2 + cx t` expanded using Horner's rule\r\n\t\treturn (3 * ax * t + 2 * bx) * t + cx;\r\n\t}\r\n\r\n\tfunction sampleCurveX(t : number) : number {\r\n\t\treturn ((ax * t + bx) * t + cx) * t;\r\n\t}\r\n\r\n\tfunction sampleCurveY(t : number) : number {\r\n\t\treturn ((ay * t + by) * t + cy) * t;\r\n\t}\r\n\r\n\t// Given an x value, find a parametric value it came from.\r\n\tfunction solveCurveX(x : number) : number {\r\n\t\tlet t2 = x;\r\n\t\tlet derivative : number;\r\n\t\tlet x2 : number;\r\n\r\n\t\t// https://trac.webkit.org/browser/trunk/Source/WebCore/platform/animation\r\n\t\t// first try a few iterations of Newton's method -- normally very fast.\r\n\t\t// http://en.wikipedia.org/wikiNewton's_method\r\n\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t// f(t) - x = 0\r\n\t\t\tx2 = sampleCurveX(t2) - x;\r\n\t\t\tif (Math.abs(x2) < ZERO_LIMIT) {\r\n\t\t\t\treturn t2;\r\n\t\t\t}\r\n\t\t\tderivative = sampleCurveDerivativeX(t2);\r\n\t\t\t// == 0, failure\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (Math.abs(derivative) < ZERO_LIMIT) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tt2 -= x2 / derivative;\r\n\t\t}\r\n\r\n\t\t// Fall back to the bisection method for reliability.\r\n\t\t// bisection\r\n\t\t// http://en.wikipedia.org/wiki/Bisection_method\r\n\t\tlet t1 = 1;\r\n\t\t/* istanbul ignore next */\r\n\t\tlet t0 = 0;\r\n\r\n\t\t/* istanbul ignore next */\r\n\t\tt2 = x;\r\n\t\t/* istanbul ignore next */\r\n\t\twhile (t1 > t0) {\r\n\t\t\tx2 = sampleCurveX(t2) - x;\r\n\t\t\tif (Math.abs(x2) < ZERO_LIMIT) {\r\n\t\t\t\treturn t2;\r\n\t\t\t}\r\n\t\t\tif (x2 > 0) {\r\n\t\t\t\tt1 = t2;\r\n\t\t\t} else {\r\n\t\t\t\tt0 = t2;\r\n\t\t\t}\r\n\t\t\tt2 = (t1 + t0) / 2;\r\n\t\t}\r\n\r\n\t\t// Failure\r\n\t\treturn t2;\r\n\t}\r\n\r\n\treturn function (x : number) : number {\r\n\t\treturn sampleCurveY(solveCurveX(x));\r\n\t}\r\n\r\n\t// return solve;\r\n}"]}