{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/lime-shared/clamp/index.ts"],"names":[],"mappings":"AAAA,cAAc;AACd;;;;;;GAMG;AACH,MAAM,UAAU,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,GAAG,MAAM;IAClE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3C,CAAC;AAGD,mGAAmG;AACnG,wGAAwG;AACxG,yGAAyG","sourcesContent":["// @ts-nocheck\r\n/**\r\n * 将一个值限制在指定的范围内\r\n * @param val 要限制的值\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @returns 限制后的值\r\n */\r\nexport function clamp(val: number, min: number, max: number): number {\r\n  return Math.max(min, Math.min(max, val));\r\n}\r\n\r\n\r\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:14',clamp(5 ,0, 10)); // 输出: 5（在范围内，不做更改）\r\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:15',clamp(-5 ,0, 10)); // 输出: 0（小于最小值，被限制为最小值）\r\n// __f__('log','at uni_modules/lime-shared/clamp/index.ts:16',clamp(15 ,0, 10)); // 输出: 10（大于最大值，被限制为最大值）"]}