{"version":3,"file":"utils.uts","sourceRoot":"","sources":["uni_modules/lime-dayuts/common/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { Dayuts } from './index'\r\nimport { M, Y, W, D, DATE, H, MIN, S, MS, Q } from './constant'\r\nimport {DayutsUnit} from '../utssdk/interface'\r\n/**\r\n * 用指定字符串填充目标字符串的开头，以达到指定的总长度。\r\n *\r\n * @param {string} string - 需要填充的目标字符串。\r\n * @param {number} length - 填充后的总长度。\r\n * @param {string} pad - 用于填充的字符串。\r\n * @returns {string} 填充后的字符串。\r\n */\r\nfunction padStart(string : string, length : number, pad : string) : string {\r\n\tconst str = string//`${string}`\r\n\tif (str.length >= length) return str\r\n\treturn str.padStart(length, pad) //`${Array((length + 1) - string.length).join(pad)}${string}`\r\n}\r\nexport {\r\n\tpadStart\r\n}\r\nfunction padZoneStr(instance : Dayuts) : string {\r\n\tconst negMinutes = -instance.utcOffset()\r\n\tconst minutes = Math.abs(negMinutes)\r\n\tconst hourOffset = Math.floor(minutes / 60)\r\n\tconst minuteOffset = minutes % 60\r\n\treturn `${negMinutes <= 0 ? '+' : '-'}${padStart(hourOffset.toString(), 2, '0')}:${padStart(minuteOffset.toString(), 2, '0')}`\r\n}\r\nexport {\r\n\tpadZoneStr\r\n}\r\n\r\n// export function isNull(s): boolean{\r\n// \treturn s == null\r\n// }\r\n\r\nexport function isNumber(value : any | null) : boolean {\r\n\r\n\treturn ['Byte', 'UByte', 'Short', 'UShort', 'Int', 'UInt', 'Long', 'ULong', 'Float', 'Double', 'number'].includes(typeof value)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * 将给定的时间单位转换为标准格式。\r\n *\r\n * @param {string} u - 要转换的时间单位。\r\n * @returns {string} 返回转换后的时间单位。\r\n */\r\nexport function prettyUnit(u : string) : DayutsUnit {\r\n\tconst special = new Map<string, string>([\r\n\t\t['M', M],\r\n\t\t['y', Y],\r\n\t\t['w', W],\r\n\t\t['d', D],\r\n\t\t['D', DATE],\r\n\t\t['h', H],\r\n\t\t['m', MIN],\r\n\t\t['s', S],\r\n\t\t['ms', MS],\r\n\t\t['Q', Q]\r\n\t])\r\n\treturn (special.get(u) ?? `${u}`.toLowerCase().replace(/s$/, '')) as DayutsUnit\r\n}\r\n\r\n\r\n/**\r\n * 计算两个日期之间的月份差值\r\n * @param {Dayjs} a - 第一个日期\r\n * @param {Dayjs} b - 第二个日期\r\n * @returns {number} 返回两个日期之间的月份差值\r\n */\r\nexport function monthDiff(a : Dayuts, b : Dayuts) : number {\r\n\t// 该函数来自 moment.js，以保持相同的结果\r\n\tif (a.date() < b.date()) return -monthDiff(b, a)\r\n\tconst wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month())\r\n\tconst anchor = a.clone().add(wholeMonthDiff, M).valueOf()\r\n\tconst c = b.valueOf() - anchor < 0\r\n\tconst anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), M).valueOf()\r\n\t// return +(-(wholeMonthDiff + ((b.valueOf() - anchor) / (c ? (anchor - anchor2) :\r\n\t// \t(anchor2 - anchor)))) || 0)\r\n\t\r\n\tconst decimalMonthDiff = (b.valueOf() - anchor) / (c ? (anchor - anchor2) : (anchor2 - anchor));\r\n\tconst result = wholeMonthDiff + decimalMonthDiff;\r\n\tconst negatedResult = -result;\r\n\tconst absResult = +negatedResult;\r\n\tconst finalResult = !isNaN(absResult) ? absResult : 0;\r\n\treturn finalResult;\r\n}\r\n\r\n\r\n/**\r\n * 返回向下取整的绝对值\r\n * @param {number} n - 输入的数字\r\n * @returns {number} 返回向下取整的绝对值\r\n */\r\nexport function absFloor(n : number):number {\r\n\t// return (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\r\n\treturn (n < 0 ? Math.max(Math.ceil(n), 0) : Math.floor(n))\r\n}"]}