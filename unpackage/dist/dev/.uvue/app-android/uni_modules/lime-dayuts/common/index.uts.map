{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/lime-dayuts/common/index.ts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { DayutsConfig, type DayutsLocale, DayutsUnit, DayutsObject } from '../utssdk/interface'\r\nimport { REGEX_FORMAT, REGEX_PARSE, INVALID_DATE_STRING, M, Y, W, D, DATE, H, MIN, S, MS, Q, MILLISECONDS_A_MINUTE, MILLISECONDS_A_HOUR, MILLISECONDS_A_SECOND, MILLISECONDS_A_WEEK, MILLISECONDS_A_DAY, FORMAT_DEFAULT } from './constant'\r\nimport { isNumber, prettyUnit, padStart, padZoneStr, monthDiff, absFloor } from './utils'\r\nimport { dayutsIntl, localeState } from './use'\r\n\r\ntype Threshold = {\r\n\tl : string;\r\n\tr ?: number;\r\n\td ?: DayutsUnit;\r\n}\r\n\r\nfunction parseLocale(preset : string | null) : string | null;\r\nfunction parseLocale(preset : DayutsLocale | null) : string | null;\r\nfunction parseLocale(preset : string, object : DayutsLocale | null, isLocal : boolean) : string | null;\r\nfunction parseLocale(preset : DayutsLocale, object : DayutsLocale, isLocal : boolean) : string | null;\r\nfunction parseLocale(preset : any | null, object : DayutsLocale | null = null, isLocal : boolean = false) : string | null {\r\n\tlet l : string | null = null\r\n\tif (preset == null) return dayutsIntl.locale\r\n\tif (typeof preset == 'string') {\r\n\t\tconst presetLower = (preset as string).toLowerCase()\r\n\t\tif (dayutsIntl.has(presetLower)) {\r\n\t\t\tl = presetLower\r\n\t\t}\r\n\t\tif (object != null) {\r\n\t\t\tdayutsIntl.set(presetLower, object)\r\n\t\t\tl = presetLower\r\n\t\t}\r\n\t\tconst presetSplit = preset.split('-')\r\n\t\tif (l == null && presetSplit.length > 1) {\r\n\t\t\treturn parseLocale(presetSplit[0])\r\n\t\t}\r\n\t} else if (preset instanceof DayutsLocale) {\r\n\t\t// const { name } = preset as DayutsLocale\r\n\t\tdayutsIntl.set(preset.name, preset)\r\n\t\tl = preset.name\r\n\t}\r\n\tif (!isLocal && l != null) {\r\n\t\t// L = l\r\n\t\tdayutsIntl.locale = l\r\n\t}\r\n\t// return l ?? L //(!isLocal && L != null)\r\n\treturn l ?? dayutsIntl.locale //(!isLocal && L != null)\r\n}\r\n\r\nfunction tryParseNumberAtIndex(digits : (any|null)[], index : number) : number | null {\r\n\t// 检查索引是否在数组范围内\r\n\tif (index >= 0 && index < digits.length) {\r\n\t\tif(digits[index] == null) return null\r\n\t\t// 尝试解析索引位置的字符串为数字\r\n\t\tconst parsedNumber = isNumber(digits[index]) ? digits[index] as number : parseInt(`${digits[index]}`, 10);\r\n\r\n\t\t// 检查解析结果是否为有效数字\r\n\t\tif (!isNaN(parsedNumber)) {\r\n\t\t\treturn parsedNumber;\r\n\t\t}\r\n\t}\r\n\treturn null\r\n}\r\n// function createDateFromArray(d: number[]):Date\r\n// function createDateFromArray(d: string[]):Date\r\nfunction createDateFromArray(d : (any|null)[], offset : number = 0) : Date {\r\n\tconst year = tryParseNumberAtIndex(d, 1 - offset) ?? new Date().getFullYear()\r\n\tconst month = (tryParseNumberAtIndex(d, 2 - offset) ?? 1) - 1\r\n\tconst day = tryParseNumberAtIndex(d, 3 - offset) ?? 1\r\n\tconst hour = tryParseNumberAtIndex(d, 4 - offset) ?? 0\r\n\tconst minute = tryParseNumberAtIndex(d, 5 - offset) ?? 0\r\n\tconst second = tryParseNumberAtIndex(d, 6 - offset) ?? 0\r\n\tconst millisecond = (tryParseNumberAtIndex(d, 7 - offset) ?? 0).toString().substring(0, 3) //d.length > 7 ? parseInt((d[7] ?? '0').substring(0, 3)) : 0\r\n\r\n\treturn new Date(\r\n\t\tyear,\r\n\t\tmonth,\r\n\t\tday,\r\n\t\thour,\r\n\t\tminute,\r\n\t\tsecond,\r\n\t\tparseInt(millisecond))\r\n}\r\nfunction parseDate(cfg : DayutsConfig) : Date|null {\r\n\tconst { date } = cfg\r\n\tif (date == null) return new Date()\r\n\tif (date instanceof Date) return date as Date\r\n\t\r\n\ttry {\r\n\t\tif (typeof date == 'string' && /^\\d+$/.test(date as string)) {\r\n\t\t\treturn new Date(parseInt(`${date}`.padEnd(13, '0')))\r\n\t\t}\r\n\t\tif (typeof date == 'string' && !/Z$/i.test(date as string)) {\r\n\t\t\tconst d = date.match(REGEX_PARSE)\r\n\r\n\r\n\r\n\r\n\t\t\tconst isNull = d == null|| Array.isArray(d) && d.length == 0\r\n\r\n\t\t\tif (!isNull) {\r\n\t\t\t\treturn createDateFromArray(d as (any|null)[])\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof date == 'string') return new Date(date as string)\r\n\t\tif (Array.isArray(date)) {\r\n\t\t\treturn createDateFromArray(date as (any|null)[], 1)\r\n\t\t}\r\n\t\tif (isNumber(date)) return new Date(date as number)\r\n\t\treturn null//new Date()\r\n\t} catch(err) {\r\n\t\treturn null//new Date()\r\n\t}\r\n}\r\n\r\nfunction wrapper(date : any, instance : Dayuts) : Dayuts {\r\n\treturn dayuts(date, instance.$L)\r\n}\r\n\r\nexport class Dayuts {\r\n\t$L : string\r\n\tprivate valid: boolean = true; \r\n\tprivate $d : Date = new Date()\r\n\tprivate $y : number = 0\r\n\tprivate $M : number = 0\r\n\tprivate $D : number = 0\r\n\tprivate $W : number = 0\r\n\tprivate $H : number = 0\r\n\tprivate $m : number = 0\r\n\tprivate $s : number = 0\r\n\tprivate $ms : number = 0\r\n\tprivate $u : boolean = false\r\n\tconstructor(cfg : DayutsConfig) {\r\n\t\tthis.$L = parseLocale(cfg.locale) ?? dayutsIntl.locale //'en'\r\n\t\tthis.parse(cfg)\r\n\t}\r\n\tparse(cfg : DayutsConfig) {\r\n\t\tconst _d = parseDate(cfg)\r\n\t\tif(_d != null) {\r\n\t\t\tthis.$d = parseDate(cfg)!\r\n\t\t\tthis.init()\r\n\t\t} else {\r\n\t\t\tthis.valid = false\r\n\t\t}\r\n\t}\r\n\tinit() {\r\n\t\tconst { $d } = this\r\n\t\tthis.$y = $d.getFullYear()\r\n\t\tthis.$M = $d.getMonth()\r\n\t\tthis.$D = $d.getDate()\r\n\t\tthis.$W = $d.getDay()\r\n\t\tthis.$H = $d.getHours()\r\n\t\tthis.$m = $d.getMinutes()\r\n\t\tthis.$s = $d.getSeconds()\r\n\t\tthis.$ms = $d.getMilliseconds()\r\n\t}\r\n\t/**\r\n\t * 检查日期对象是否有效。\r\n\t *\r\n\t * @returns {boolean} 如果日期对象有效，则返回true；否则返回false。\r\n\t */\r\n\tisValid() : boolean {\r\n\t\treturn this.valid\r\n\t\t// return !(this.$d.toString() == INVALID_DATE_STRING)\r\n\t}\r\n\t/**\r\n\t * 检查当前日期是否与给定的日期在指定的时间单位内相同。\r\n\t *\r\n\t * @param {string|number|Date} input - 要比较的日期。\r\n\t * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @returns {boolean} 如果当前日期与给定的日期在指定的时间单位内相同，则返回true；否则返回false。\r\n\t */\r\n\tisSame(input : string) : boolean\r\n\tisSame(input : number) : boolean\r\n\tisSame(input : Date) : boolean\r\n\tisSame(input : Dayuts) : boolean\r\n\tisSame(input : UTSJSONObject) : boolean\r\n\r\n\tisSame(input : string, units : DayutsUnit) : boolean\r\n\tisSame(input : number, units : DayutsUnit) : boolean\r\n\tisSame(input : Date, units : DayutsUnit) : boolean\r\n\tisSame(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSame(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSame(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input)\r\n\t\tconst date1 = this.startOf(units).valueOf()\r\n\t\tconst date2 = other.valueOf()\r\n\t\tconst date3 = this.endOf(units).valueOf()\r\n\t\treturn date1 <= date2 && date2 <= date3\r\n\t}\r\n\t/**\r\n\t * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之后。\r\n\t *\r\n\t * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\r\n\t * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之后，则返回 `true`，否则返回 `false`。\r\n\t */\r\n\tisAfter(input : string) : boolean\r\n\tisAfter(input : number) : boolean\r\n\tisAfter(input : Date) : boolean\r\n\tisAfter(input : Dayuts) : boolean\r\n\tisAfter(input : UTSJSONObject) : boolean\r\n\r\n\tisAfter(input : string, units : DayutsUnit) : boolean\r\n\tisAfter(input : number, units : DayutsUnit) : boolean\r\n\tisAfter(input : Date, units : DayutsUnit) : boolean\r\n\tisAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisAfter(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input)\r\n\t\tconst date1 = other.valueOf()\r\n\t\tconst date2 = this.startOf(units).valueOf()\r\n\t\treturn date1 < date2;\r\n\t}\r\n\t/**\r\n\t * 检查给定的日期或时间是否在当前 dayuts 对象的指定时间单位之前。\r\n\t *\r\n\t * @param {string | number | Date | Dayuts} input - 要与当前 dayuts 对象进行比较的日期或时间。\r\n\t * @param {string} units - 要比较的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {boolean} 如果给定的日期或时间在当前 dayuts 对象的指定时间单位之前，则返回 `true`，否则返回 `false`。\r\n\t */\r\n\tisBefore(input : string) : boolean\r\n\tisBefore(input : number) : boolean\r\n\tisBefore(input : Date) : boolean\r\n\tisBefore(input : Dayuts) : boolean\r\n\tisBefore(input : UTSJSONObject) : boolean\r\n\r\n\tisBefore(input : string, units : DayutsUnit) : boolean\r\n\tisBefore(input : number, units : DayutsUnit) : boolean\r\n\tisBefore(input : Date, units : DayutsUnit) : boolean\r\n\tisBefore(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisBefore(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisBefore(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\tconst other = input instanceof Dayuts ? input : dayuts(input);\r\n\t\tconst date1 = other.valueOf()\r\n\t\tconst date2 = this.endOf(units).valueOf()\r\n\t\treturn date2 < date1;\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否与给定的输入在同一时间或之前，根据指定的时间单位\r\n\t * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之前，则返回true，否则返回false\r\n\t */\r\n\tisSameOrBefore(input : string) : boolean\r\n\tisSameOrBefore(input : number) : boolean\r\n\tisSameOrBefore(input : Date) : boolean\r\n\tisSameOrBefore(input : Dayuts) : boolean\r\n\tisSameOrBefore(input : UTSJSONObject) : boolean\r\n\r\n\tisSameOrBefore(input : string, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : number, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : Date, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSameOrBefore(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\treturn this.isSame(input, units) || this.isBefore(input, units)\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否与给定的输入在同一时间或之后，根据指定的时间单位\r\n\t * @param {(string | number | Date | Dayuts | UTSJSONObject)} input - 输入的时间\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @returns {boolean} - 如果当前Dayuts对象与给定的输入在同一时间或之后，则返回true，否则返回false\r\n\t */\r\n\tisSameOrAfter(input : string) : boolean\r\n\tisSameOrAfter(input : number) : boolean\r\n\tisSameOrAfter(input : Date) : boolean\r\n\tisSameOrAfter(input : Dayuts) : boolean\r\n\tisSameOrAfter(input : UTSJSONObject) : boolean\r\n\r\n\tisSameOrAfter(input : string, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : number, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : Date, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : Dayuts, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : UTSJSONObject, units : DayutsUnit) : boolean\r\n\tisSameOrAfter(input : any, units : DayutsUnit = 'millisecond') : boolean {\r\n\t\treturn this.isSame(input, units) || this.isAfter(input, units)\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象是否在给定的两个时间之间\r\n\t * @param {any} input - 第一个时间输入\r\n\t * @param {any} input2 - 第二个时间输入\r\n\t * @param {DayutsUnit} units - 指定的时间单位\r\n\t * @param {string} interval - 区间符号，表示区间的开闭性，默认为'()'，表示开区间\r\n\t * @returns {boolean} - 如果当前Dayuts对象在给定的两个时间之间，则返回true，否则返回false\r\n\t */\r\n\tisBetween(input : any, input2 : any, units : DayutsUnit = 'millisecond', interval : string = '()') : boolean {\r\n\t\tconst dA = dayuts(input)\r\n\t\tconst dB = dayuts(input2)\r\n\t\tconst dAi = interval.startsWith('(')\r\n\t\tconst dBi = interval.endsWith(')')\r\n\r\n\t\treturn ((dAi ? this.isAfter(dA, units) : !this.isBefore(dA, units)) &&\r\n\t\t\t(dBi ? this.isBefore(dB, units) : !this.isAfter(dB, units)))\r\n\t\t\t|| ((dAi ? this.isBefore(dA, units) : !this.isAfter(dA, units)) &&\r\n\t\t\t\t(dBi ? this.isAfter(dB, units) : !this.isBefore(dB, units)))\r\n\t}\r\n\t/**\r\n\t * 判断当前Dayuts对象所在的年份是否为闰年\r\n\t * @returns {boolean} - 如果当前Dayuts对象所在的年份是闰年，则返回true，否则返回false\r\n\t */\r\n\tisLeapYear():boolean{\r\n\t\t return ((this.$y % 4 == 0) && (this.$y % 100 != 0)) || (this.$y % 400 == 0)\r\n\t}\r\n\tisToday():boolean{\r\n\t\tconst comparisonTemplate = 'YYYY-MM-DD'\r\n\t\tconst now = dayuts()\r\n\t\t\r\n\t\treturn this.format(comparisonTemplate) == now.format(comparisonTemplate)\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\r\n\t *\r\n\t * @returns {number} 返回当前 `dayuts` 对象的 Unix 时间戳（以秒为单位）。\r\n\t */\r\n\tunix() : number {\r\n\t\treturn Math.floor(this.valueOf() / 1000);\r\n\t}\r\n\t/**\r\n\t * 将当前日期设置为指定时间单位的开始或结束。\r\n\t *\r\n\t * @param {string} units - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @param {boolean} startOf - 如果为true，则设置为开始；如果为false，则设置为结束。\r\n\t * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\r\n\t */\r\n\tstartOf(units : DayutsUnit, startOf : boolean = true) : Dayuts {\r\n\t\tconst isStartOf = startOf;\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// instanceFactory 函数用于创建一个新的 Dayuts 对象，表示给定日期的开始或结束。\r\n\t\t// 参数 d 和 m 分别表示日期和月份。\r\n\t\tconst instanceFactory = (d : number, m : number) : Dayuts => {\r\n\t\t\tconst ins = dayuts(new Date(this.$y, m, d))\r\n\t\t\treturn isStartOf ? ins : ins.endOf(D)\r\n\t\t}\r\n\r\n\t\t// instanceFactorySet 函数用于创建一个新的 Dayuts 对象，表示调整后的时间。\r\n\t\t// 参数 method 表示要调用的 Date 对象的方法（如 'setHours'），slice 表示要调整的时间部分的索引。\r\n\t\tconst instanceFactorySet = (method : string, slice : number) : Dayuts => {\r\n\t\t\t// 定义表示开始和结束时间的参数数组。\r\n\t\t\tconst argumentStart = [0, 0, 0, 0]\r\n\t\t\tconst argumentEnd = [23, 59, 59, 999]\r\n\t\t\t// 根据 isStartOf 的值，选择开始或结束时间的参数数组，并调用 Date 对象的方法。\r\n\t\t\tconst args = (isStartOf ? argumentStart : argumentEnd).slice(slice)\r\n\t\t\tconst date = this.toDate()\r\n\t\t\tif (method == 'setHours') {\r\n\t\t\t\tdate.setHours(args[0]);\r\n\t\t\t\tdate.setMinutes(args[1])\r\n\t\t\t\tdate.setSeconds(args[2])\r\n\t\t\t\tdate.setMilliseconds(args[3])\r\n\t\t\t} else if (method == 'setMinutes') {\r\n\t\t\t\tdate.setMinutes(args[0]);\r\n\t\t\t\tdate.setSeconds(args[1])\r\n\t\t\t\tdate.setMilliseconds(args[2])\r\n\t\t\t} else if (method == 'setSeconds') {\r\n\t\t\t\tdate.setSeconds(args[0])\r\n\t\t\t\tdate.setMilliseconds(args[1])\r\n\t\t\t} else if (method == 'setMilliseconds') {\r\n\t\t\t\tdate.setMilliseconds(args[0])\r\n\t\t\t}\r\n\t\t\treturn dayuts(date)\r\n\t\t}\r\n\t\tconst { $W, $M, $D } = this\r\n\t\tconst utcPad = `set${this.$u ? 'UTC' : ''}`\r\n\t\tif (unit == Y) {\r\n\t\t\treturn isStartOf ? instanceFactory(1, 0) : instanceFactory(31, 11);\r\n\t\t} else if (unit == M) {\r\n\t\t\treturn isStartOf ? instanceFactory(1, $M) : instanceFactory(0, $M + 1);\r\n\t\t} else if (unit == W) {\r\n\t\t\tconst weekStart = this.$locale().weekStart ?? 0;\r\n\t\t\tconst gap = ($W < weekStart ? $W + 7 : $W) - weekStart;\r\n\t\t\treturn instanceFactory(isStartOf ? $D - gap : $D + (6 - gap), $M);\r\n\t\t} else if (unit == D || unit == DATE) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Hours`, 0);\r\n\t\t} else if (unit == H) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Minutes`, 1);\r\n\t\t} else if (unit == MIN) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Seconds`, 2);\r\n\t\t} else if (unit == S) {\r\n\t\t\treturn instanceFactorySet(`${utcPad}Milliseconds`, 3);\r\n\t\t} else {\r\n\t\t\treturn this.clone();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * 将当前日期设置为指定时间单位的结束。\r\n\t *\r\n\t * @param {string} arg - 时间单位，例如'year'、'month'、'day'等。\r\n\t * @returns {Dayuts} 返回一个新的Dayuts对象，表示调整后的日期。\r\n\t */\r\n\tendOf(units : DayutsUnit) : Dayuts {\r\n\t\treturn this.startOf(units, false)\r\n\t}\r\n\t/**\r\n\t * 设置指定的时间单位的值。\r\n\t *\r\n\t * @param {string} units - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @param {number} int - 要设置的值。\r\n\t * @returns {Dayuts} 返回当前对象。\r\n\t */\r\n\tprivate $set(units : DayutsUnit, int : number) : Dayuts { // private set\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// const utcPad = `set${this.$u ? 'UTC' : ''}`\r\n\t\tconst arg = unit == D ? this.$D + (int - this.$W) : int\r\n\t\tconst setDateUnit = (date : Dayuts, unit : DayutsUnit, arg : number) => {\r\n\t\t\tif (unit == D || unit == DATE) {\r\n\t\t\t\tdate.$d.setDate(arg);\r\n\t\t\t} else if (unit == M) {\r\n\t\t\t\tdate.$d.setMonth(arg);\r\n\t\t\t} else if (unit == Y) {\r\n\t\t\t\tdate.$d.setFullYear(arg);\r\n\t\t\t} else if (unit == H) {\r\n\t\t\t\tdate.$d.setHours(arg);\r\n\t\t\t} else if (unit == MIN) {\r\n\t\t\t\tdate.$d.setMinutes(arg);\r\n\t\t\t} else if (unit == S) {\r\n\t\t\t\tdate.$d.setSeconds(arg);\r\n\t\t\t} else if (unit == MS) {\r\n\t\t\t\tdate.$d.setMilliseconds(arg);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (unit == M || unit == Y) {\r\n\t\t\t// clone is for badMutable plugin\r\n\t\t\tconst date = this.clone().set(DATE, 1)\r\n\t\t\t// date.$d[name](arg)\r\n\t\t\tsetDateUnit(date, unit, arg)\r\n\t\t\tdate.init()\r\n\t\t\tthis.$d = date.set(DATE, Math.min(this.$D, date.daysInMonth())).$d\r\n\t\t} else {\r\n\t\t\tsetDateUnit(this, unit, arg)\r\n\t\t\t// this.$d[name](arg)\r\n\t\t}\r\n\r\n\t\tthis.init()\r\n\t\treturn this\r\n\t}\r\n\t/**\r\n\t * 创建一个当前对象的副本，并设置指定的时间单位的值。\r\n\t *\r\n\t * @param {string} string - 要设置的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @param {number} int - 要设置的值。\r\n\t * @returns {Dayuts} 返回一个新的 `dayuts` 对象，其值为当前对象的副本，并设置了指定的时间单位的值。\r\n\t */\r\n\tset(string : DayutsUnit, int : number) : Dayuts {\r\n\t\treturn this.clone().$set(string, int);\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象的指定时间单位的值。\r\n\t *\r\n\t * @param {string} units - 要获取的时间单位（如 \"year\"、\"month\"、\"day\" 等）。\r\n\t * @returns {number} 返回当前 `dayuts` 对象的指定时间单位的值。\r\n\t */\r\n\tget(units : DayutsUnit) : number {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\tif (unit == D) {\r\n\t\t\treturn this.day()\r\n\t\t} else if (unit == DATE) {\r\n\t\t\treturn this.date()\r\n\t\t} else if (unit == M) {\r\n\t\t\treturn this.month()\r\n\t\t} else if (unit == Y) {\r\n\t\t\treturn this.year()\r\n\t\t} else if (unit == H) {\r\n\t\t\treturn this.hour()\r\n\t\t} else if (unit == MIN) {\r\n\t\t\treturn this.minute()\r\n\t\t} else if (unit == S) {\r\n\t\t\treturn this.second()\r\n\t\t} else if (unit == MS) {\r\n\t\t\treturn this.millisecond()\r\n\t\t}\r\n\t\treturn 0\r\n\t}\r\n\t/**\r\n\t * 获取或设置年份。\r\n\t * @param {number | null} [input] - 要设置的年份。\r\n\t * @returns {number | Dayuts} 年份或 Dayuts 实例。\r\n\t */\r\n\tyear() : number\r\n\tyear(input : number) : Dayuts\r\n\tyear(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$y\r\n\t\treturn this.set(Y, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置月份。\r\n\t * @param {number | null} [input] - 要设置的月份（0-11）。\r\n\t * @returns {number | Dayuts} 月份或 Dayuts 实例。\r\n\t */\r\n\tmonth() : number\r\n\tmonth(input : number) : Dayuts\r\n\tmonth(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$M\r\n\t\treturn this.set(M, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置星期几。\r\n\t * @param {number | null} [input] - 要设置的星期几（0-6）。\r\n\t * @returns {number | Dayuts} 星期几或 Dayuts 实例。\r\n\t */\r\n\tday() : number\r\n\tday(input : number) : Dayuts\r\n\tday(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$W\r\n\t\treturn this.set(D, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置月份中的某一天。\r\n\t * @param {number | null} [input] - 要设置的月份中的某一天（1-31）。\r\n\t * @returns {number | Dayuts} 月份中的某一天或 Dayuts 实例。\r\n\t */\r\n\tdate() : number\r\n\tdate(input : number) : Dayuts\r\n\tdate(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$D\r\n\t\treturn this.set(DATE, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置小时。\r\n\t * @param {number | null} [input] - 要设置的小时（0-23）。\r\n\t * @returns {number | Dayuts} 小时或 Dayuts 实例。\r\n\t */\r\n\thour() : number\r\n\thour(input : number) : Dayuts\r\n\thour(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$H\r\n\t\treturn this.set(H, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置分钟。\r\n\t * @param {number | null} [input] - 要设置的分钟（0-59）。\r\n\t * @returns {number | Dayuts} 分钟或 Dayuts 实例。\r\n\t */\r\n\tminute() : number\r\n\tminute(input : number) : Dayuts\r\n\tminute(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$m\r\n\t\treturn this.set(MIN, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置秒。\r\n\t * @param {number | null} [input] - 要设置的秒（0-59）。\r\n\t * @returns {number | Dayuts} 秒或 Dayuts 实例。\r\n\t */\r\n\tsecond() : number\r\n\tsecond(input : number) : Dayuts\r\n\tsecond(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$s\r\n\t\treturn this.set(S, input)\r\n\t}\r\n\t/**\r\n\t * 获取或设置毫秒。\r\n\t * @param {number | null} [input] - 要设置的毫秒（0-999）。\r\n\t * @returns {number | Dayuts} 毫秒或 Dayuts 实例。\r\n\t */\r\n\tmillisecond() : number\r\n\tmillisecond(input : number) : Dayuts\r\n\tmillisecond(input : number | null = null) : any {\r\n\t\tif (input == null) return this.$ms\r\n\t\treturn this.set(MS, input)\r\n\t}\r\n\r\n\t/**\r\n\t * 在当前 Dayuts 实例上添加指定的时间长度。\r\n\t * @param {number} number - 要添加的时间长度。\r\n\t * @param {string} units - 要添加的时间单位（例如，“years”，“months”，“days”等）。\r\n\t * @returns {Dayuts} 更新的 Dayuts 实例。\r\n\t */\r\n\tadd(number : number, units : DayutsUnit) : Dayuts {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\t// 创建一个新的 Dayuts 实例，并根据给定的 n 值设置日期。\r\n\t\t// n 值乘以 number 参数，然后加到当前日期上，以设置新的日期。\r\n\t\tconst instanceFactorySet = (n : number) : Dayuts => {\r\n\t\t\t// 创建一个新的 Dayuts 实例，它是当前实例的副本\r\n\t\t\tconst d = dayuts(this)\r\n\t\t\t// 设置新的日期并返回更新后的 Dayuts 实例\r\n\t\t\treturn d.date(d.date() + Math.round(n * number)) //Utils.w(d.date(d.date() + Math.round(n * number)), this)\r\n\t\t}\r\n\t\tif (unit == M) {\r\n\t\t\treturn this.set(M, this.$M + number)\r\n\t\t}\r\n\t\tif (unit == Y) {\r\n\t\t\treturn this.set(Y, this.$y + number)\r\n\t\t}\r\n\t\tif (unit == D) {\r\n\t\t\treturn instanceFactorySet(1)\r\n\t\t}\r\n\t\tif (unit == W) {\r\n\t\t\treturn instanceFactorySet(7)\r\n\t\t}\r\n\r\n\t\tconst steps = new Map<string, number>([\r\n\t\t\t[MIN, MILLISECONDS_A_MINUTE],\r\n\t\t\t[H, MILLISECONDS_A_HOUR],\r\n\t\t\t[S, MILLISECONDS_A_SECOND],\r\n\t\t])\r\n\t\tconst step = steps.get(unit) ?? 1;\r\n\t\tconst nextTimeStamp = this.$d.getTime() + (number * step)\r\n\t\treturn wrapper(nextTimeStamp, this)\r\n\t}\r\n\t/**\r\n\t * 从当前 Dayuts 实例中减去指定的时间。\r\n\t * @param {number} number - 要减去的时间。\r\n\t * @param {string} units - 要减去的时间单位（例如，“years”，“months”，“days”等）。\r\n\t * @returns {Dayuts} 更新的 Dayuts 实例。\r\n\t */\r\n\tsubtract(number : number, units : DayutsUnit) : Dayuts {\r\n\t\t// 通过将 number 乘以 -1，然后调用 add 方法来实现减法操作\r\n\t\treturn this.add(number * -1, units);\r\n\t}\r\n\t/**\r\n\t * 日期格式化\r\n\t * @param {string} formatStr - 格式化字符串，包含各种格式化占位符（例如，“YYYY-MM-DD”，“HH:mm:ss”等）。\r\n\t * @returns {string} 格式化后的日期字符串。\r\n\t */\r\n\tformat(formatStr : string | null = null) : string {\r\n\t\tconst locale = this.$locale();\r\n\t\tif (!this.isValid()) return INVALID_DATE_STRING // locale.invalidDate || INVALID_DATE_STRING;\r\n\r\n\t\tconst str = formatStr ?? FORMAT_DEFAULT;\r\n\t\t// @ts-ignore\r\n\t\tconst zoneStr = padZoneStr(this);\r\n\t\tconst { $H, $m, $M } = this;\r\n\t\tconst { weekdays, months, meridiem } = locale;\r\n\t\t/**\r\n\t\t * 从给定的数组中获取缩写或完整的字符串。\r\n\t\t * @param {Array} arr - 包含缩写字符串的数组。\r\n\t\t * @param {number} index - 数组中要获取的元素的索引。\r\n\t\t * @param {Array} full - 包含完整字符串的数组。\r\n\t\t * @param {number} length - 要返回的字符串的长度。\r\n\t\t * @returns {string} 缩写或完整的字符串。\r\n\t\t */\r\n\t\tfunction getShort(arr : string[] | null, index : number, full : string[] = [], length : number = 0) : string {\r\n\t\t\tif (arr != null && arr.length >= index) {\r\n\t\t\t\treturn arr[index]\r\n\t\t\t} else if (full.length >= index) {\r\n\t\t\t\treturn full[index].slice(0, length)\r\n\t\t\t}\r\n\t\t\treturn ''\r\n\t\t};\r\n\t\t/**\r\n\t\t * 获取12小时制的小时数。\r\n\t\t * @param {number} num - 小时数的位数。\r\n\t\t * @returns {string} 12小时制的小时数字符串。\r\n\t\t */\r\n\t\tconst get$H = (num : number) : string => padStart(($H % 12 == 0 ? 12 : $H % 12).toString(), num, '0')\r\n\t\t/**\r\n\t\t * 获取上午或下午的字符串表示。\r\n\t\t * @param {number} hour - 小时数。\r\n\t\t * @param {number} minute - 分钟数。\r\n\t\t * @param {boolean} isLowercase - 是否返回小写字符串。\r\n\t\t * @returns {string} 上午或下午的字符串表示。\r\n\t\t */\r\n\t\tconst meridiemFunc = meridiem ?? ((hour : number, _ : number, isLowercase : boolean) : string => {\r\n\t\t\tconst m = (hour < 12 ? 'AM' : 'PM');\r\n\t\t\treturn isLowercase ? m.toLowerCase() : m;\r\n\t\t});\r\n\r\n\t\treturn str.replace('YYYY', padStart(this.$y.toString(), 4, '0'))\r\n\t\t\t.replace('YY', (this.$y).toString().slice(-2))\r\n\t\t\t.replace('MMMM', getShort(months, $M))\r\n\t\t\t.replace('MM', padStart(($M + 1).toString(), 2, '0'))\r\n\t\t\t.replace('M', ($M + 1).toString())\r\n\t\t\t.replace('DD', padStart(this.$D.toString(), 2, '0'))\r\n\t\t\t.replace('D', this.$D.toString())\r\n\t\t\t.replace('dddd', weekdays[this.$W])\r\n\t\t\t.replace('ddd', getShort(locale.weekdaysShort, this.$W, weekdays, 3))\r\n\t\t\t.replace('dd', getShort(locale.weekdaysMin, this.$W, weekdays, 2))\r\n\t\t\t.replace('d', this.$W.toString())\r\n\t\t\t.replace('HH', padStart($H.toString(), 2, '0'))\r\n\t\t\t.replace('H', $H.toString())\r\n\t\t\t.replace('hh', get$H(2))\r\n\t\t\t.replace('h', get$H(1))\r\n\t\t\t.replace('mm', padStart($m.toString(), 2, '0'))\r\n\t\t\t.replace('m', $m.toString())\r\n\t\t\t.replace('ss', padStart(this.$s.toString(), 2, '0'))\r\n\t\t\t.replace('s', this.$s.toString())\r\n\t\t\t.replace('SSS', padStart(this.$ms.toString(), 3, '0'))\r\n\t\t\t.replace('A', meridiemFunc($H, $m, false))\r\n\t\t\t.replace('a', meridiemFunc($H, $m, true))\r\n\t\t\t.replace('Z', zoneStr)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t}\r\n\t/**\r\n\t * 获取 Dayuts 实例的 UTC 偏移量（以分钟为单位）。\r\n\t * @returns {number} UTC 偏移量（以分钟为单位）。\r\n\t */\r\n\tutcOffset() : number {\r\n\t\t// Because a bug at FF24, we're rounding the timezone offset around 15 minutes\r\n\t\t// https://github.com/moment/moment/pull/1871\r\n\r\n\r\n\r\n\r\n\t\treturn 0\r\n\r\n\t}\r\n\t/**\r\n\t * 计算两个日期之间的差值\r\n\t * @param {string|number|Date|Dayuts} input - 要比较的日期\r\n\t * @param {string} units - 要计算的时间单位，如 'years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'\r\n\t * @param {boolean} float - 是否返回浮点数结果\r\n\t * @returns {number} 返回两个日期之间的差值\r\n\t */\r\n\tdiff(input : string) : number\r\n\tdiff(input : number) : number\r\n\tdiff(input : Date) : number\r\n\tdiff(input : Dayuts) : number\r\n\tdiff(input : UTSJSONObject) : number\r\n\r\n\tdiff(input : string, units : DayutsUnit) : number\r\n\tdiff(input : number, units : DayutsUnit) : number\r\n\tdiff(input : Date, units : DayutsUnit) : number\r\n\tdiff(input : Dayuts, units : DayutsUnit) : number\r\n\tdiff(input : UTSJSONObject, units : DayutsUnit) : number\r\n\r\n\tdiff(input : string, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : number, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : Date, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : Dayuts, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : UTSJSONObject, units : DayutsUnit, float : boolean) : number\r\n\tdiff(input : any, units : DayutsUnit = 'millisecond', float : boolean = false) : number {\r\n\t\tconst unit = prettyUnit(units)\r\n\t\tconst that = dayuts(input)\r\n\t\tconst zoneDelta = (that.utcOffset() - this.utcOffset()) * MILLISECONDS_A_MINUTE\r\n\t\tconst diff = this.valueOf() - that.valueOf()\r\n\t\t// @ts-ignore\r\n\t\tconst getMonth = () : number => monthDiff(this, that)\r\n\t\tlet result : number;\r\n\t\tswitch (unit) {\r\n\t\t\tcase Y:\r\n\t\t\t\tresult = getMonth() / 12\r\n\t\t\t\tbreak\r\n\t\t\tcase M:\r\n\t\t\t\tresult = getMonth()\r\n\t\t\t\tbreak\r\n\t\t\tcase Q:\r\n\t\t\t\tresult = getMonth() / 3\r\n\t\t\t\tbreak\r\n\t\t\tcase W:\r\n\t\t\t\tresult = (diff - zoneDelta) / MILLISECONDS_A_WEEK\r\n\t\t\t\tbreak\r\n\t\t\tcase D:\r\n\t\t\t\tresult = (diff - zoneDelta) / MILLISECONDS_A_DAY\r\n\t\t\t\tbreak\r\n\t\t\tcase H:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_HOUR\r\n\t\t\t\tbreak\r\n\t\t\tcase MIN:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_MINUTE\r\n\t\t\t\tbreak\r\n\t\t\tcase S:\r\n\t\t\t\tresult = diff / MILLISECONDS_A_SECOND\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tresult = diff // milliseconds\r\n\t\t\t\tbreak\r\n\t\t}\r\n\r\n\t\treturn float ? result : absFloor(result)\r\n\t}\r\n\t/**\r\n\t * 将当前 Dayuts 对象转换为原生 Date 对象。\r\n\t *\r\n\t * @returns {Date} 返回一个表示当前日期的原生 Date 对象。\r\n\t */\r\n\ttoDate() : Date {\r\n\t\treturn new Date(this.valueOf())\r\n\t}\r\n\t/**\r\n\t * 将 Moment 对象转换为 JSON 字符串\r\n\t * @returns {string | null} 如果 Moment 对象有效，则返回 ISO 8601 格式的字符串，否则返回 null\r\n\t */\r\n\ttoJSON() : string | null {\r\n\t\treturn this.isValid() ? this.toISOString() : null;\r\n\t}\r\n\t/**\r\n\t * 将 Moment 对象转换为 ISO 8601 格式的字符串\r\n\t * @returns {string} 返回 ISO 8601 格式的字符串\r\n\t */\r\n\ttoISOString() : string {\r\n\r\n\r\n\r\n\r\n\t\treturn this.$d.toString();\r\n\r\n\t}\r\n\ttoObject() : DayutsObject {\r\n\t\treturn {\r\n\t\t\tyears: this.$y,\r\n\t\t\tmonths: this.$M,\r\n\t\t\tdate: this.$D,\r\n\t\t\thours: this.$H,\r\n\t\t\tminutes: this.$m,\r\n\t\t\tseconds: this.$s,\r\n\t\t\tmilliseconds: this.$ms\r\n\t\t} as DayutsObject\r\n\t}\r\n\ttoArray() : number[] {\r\n\t\treturn [\r\n\t\t\tthis.$y,\r\n\t\t\tthis.$M,\r\n\t\t\tthis.$D,\r\n\t\t\tthis.$H,\r\n\t\t\tthis.$m,\r\n\t\t\tthis.$s,\r\n\t\t\tthis.$ms\r\n\t\t]\r\n\t}\r\n\t/**\r\n\t * 获取当前日期的毫秒数。\r\n\t *\r\n\t * @returns {number} 返回一个表示当前日期的毫秒数。\r\n\t */\r\n\tvalueOf() : number {\r\n\t\t// 使用 Date 对象的 getTime 方法获取当前日期的毫秒数。\r\n\t\treturn this.$d.getTime()\r\n\t}\r\n\t/**\r\n\t * 获取当前 `dayuts` 对象所在月份的天数。\r\n\t *\r\n\t * @returns {number} 返回当前 `dayuts` 对象所在月份的天数。\r\n\t */\r\n\tdaysInMonth() : number {\r\n\t\treturn this.endOf(M).$D;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前日期的区域设置对象。\r\n\t *\r\n\t * @returns {Object} 区域设置对象。\r\n\t */\r\n\tprivate $locale() : DayutsLocale { // get locale object\r\n\t\t// return Ls.get(this.$L)!\r\n\t\treturn localeState.locales.get(this.$L)!\r\n\t}\r\n\t/**\r\n\t * 设置或获取 Dayuts 实例的本地化配置\r\n\t * @param {string|Object} preset - 本地化预设名称或自定义本地化配置对象\r\n\t * @param {Object} [DayutsLocale] - 可选的自定义本地化配置对象\r\n\t * @returns {Dayuts|string} 如果设置了本地化配置，则返回一个新的 Dayuts 实例；否则返回当前实例的本地化配置名称\r\n\t */\r\n\tlocale(preset : string, object : DayutsLocale) : Dayuts\r\n\tlocale(preset : DayutsLocale, object : DayutsLocale) : Dayuts\r\n\tlocale(preset : any, object : DayutsLocale | null = null) : Dayuts {\r\n\t\t// if (!preset) return this.$L\r\n\t\tconst that = this.clone()\r\n\t\tconst nextLocaleName = parseLocale(preset, object, true)\r\n\t\tif (nextLocaleName != null) that.$L = nextLocaleName\r\n\t\treturn that\r\n\t}\r\n\tclone() : Dayuts {\r\n\t\treturn wrapper(this.$d.getTime(), this)\r\n\t}\r\n\t/**\r\n\t * 返回当前 dayuts 对象的 UTC 字符串表示。\r\n\t *\r\n\t * @returns {string} 当前 dayuts 对象的 UTC 字符串表示。\r\n\t */\r\n\r\n\toverride toString() : string {\r\n\t\t// return this.$d.toUTCString();\r\n\t\t// const locale = localeState.locales.get('en')!\r\n\t\t// const weekday = locale.weekdays[this.$d.getDay()].substring(0,3);\r\n\t\t// const month = locale.months[this.$d.getMonth()].substring(0,3)\r\n\t\t// const day = `${this.$D}`.padStart(2, '0');\r\n\t\t// const hours = `${this.$H}`.padStart(2, '0');\r\n\t\t// const minutes = `${this.$m}`.padStart(2, '0');\r\n\t\t// const seconds = `${this.$s}`.padStart(2, '0');\r\n\t\t// return `${weekday}, ${day} ${month} ${this.$y} ${hours}:${minutes}:${seconds} GMT`;\r\n\t\treturn this.$d.toString();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * 计算给定日期在当年的第几天，或者设置给定日期为当年的第几天。\r\n\t * @param {number} [input] - 如果提供了输入值，则将日期设置为当年的第几天。如果没有提供输入值，则返回当前日期在当年的第几天。\r\n\t * @returns {number} 如果提供了输入值，则返回调整后的日期。如果没有提供输入值，则返回当前日期在当年的第几天。\r\n\t */\r\n\tdayOfYear() : number\r\n\tdayOfYear(input : number) : Dayuts\r\n\tdayOfYear(input : number | null = null) : any {\r\n\t\tconst dayOfYear = Math.round((this.startOf('day').valueOf() - this.startOf('year').valueOf()) / 864e5) + 1\r\n\t\treturn input == null ? dayOfYear : this.add(input - dayOfYear, 'day')\r\n\t}\r\n\t/**\r\n\t * 根据输入的时间计算与当前时间的相对时间差，并以指定的格式返回。\r\n\t * @param {Date|number|string} input - 输入的时间，可以是Date对象、时间戳或符合Date.parse()方法的字符串\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀\r\n\t * @param {Object} instance - 当前时间的实例\r\n\t * @param {boolean} isFrom - 是否从输入时间计算到当前时间\r\n\t * @param {Function} postFormat - 格式化绝对值后的结果的函数\r\n\t * @returns {string} 相对时间差的格式化字符串\r\n\t */\r\n\t// postFormat\r\n\tfromToBase(input : string, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : number, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : Date, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : Dayuts, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : UTSJSONObject, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string\r\n\tfromToBase(input : any, withoutSuffix : boolean, instance : Dayuts, isFrom : boolean) : string {\r\n\t\tconst relObj = localeState.locales.get('en')?.relativeTime\r\n\t\tconst loc = instance.$locale().relativeTime ?? relObj\r\n\t\tif (loc == null) return '';\r\n\t\tconst T : Threshold[] = [\r\n\t\t\t{ l: 's', r: 44, d: S },\r\n\t\t\t{ l: 'm', r: 89 },\r\n\t\t\t{ l: 'mm', r: 44, d: MIN },\r\n\t\t\t{ l: 'h', r: 89 },\r\n\t\t\t{ l: 'hh', r: 21, d: H },\r\n\t\t\t{ l: 'd', r: 35 },\r\n\t\t\t{ l: 'dd', r: 25, d: D },\r\n\t\t\t{ l: 'M', r: 45 },\r\n\t\t\t{ l: 'MM', r: 10, d: M },\r\n\t\t\t{ l: 'y', r: 17 },\r\n\t\t\t{ l: 'yy', d: Y }\r\n\t\t]\r\n\t\tconst Tl = T.length\r\n\t\tlet result : number = 0;\r\n\t\tlet out : string = '';\r\n\t\tlet isFuture : boolean = false\r\n\t\tfor (let i = 0; i < Tl; i += 1) {\r\n\t\t\tlet t = T[i]\r\n\t\t\tif (t.d != null) {\r\n\t\t\t\tresult = isFrom\r\n\t\t\t\t\t? dayuts(input).diff(instance, t.d!, true)\r\n\t\t\t\t\t: instance.diff(input, t.d!, true)\r\n\t\t\t}\r\n\t\t\tlet abs = Math.round(Math.abs(result))\r\n\t\t\tisFuture = result > 0\r\n\t\t\tif (t.r == null || t.r != null && abs <= t.r!) {\r\n\t\t\t\tif (abs <= 1 && i > 0) t = T[i - 1] // 1 minutes -> a minute, 0 seconds -> 0 second\r\n\t\t\t\tconst format = loc[t.l]\r\n\t\t\t\t// if (postFormat) {\r\n\t\t\t\t// \tabs = postFormat(`${abs}`)\r\n\t\t\t\t// }\r\n\t\t\t\tif (typeof format == 'string') {\r\n\t\t\t\t\tout = (format as string).replace('%d', abs.toString())\r\n\t\t\t\t}\r\n\t\t\t\t// else {\r\n\t\t\t\t// \tout = format(abs, withoutSuffix, t.l!, isFuture)\r\n\t\t\t\t// }\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (withoutSuffix) return out\r\n\t\tconst pastOrFuture = isFuture ? loc.future : loc.past\r\n\t\t// if (typeof pastOrFuture == 'function') {\r\n\t\t// \treturn pastOrFuture(out)\r\n\t\t// }\r\n\t\treturn pastOrFuture.replace('%s', out)\r\n\t}\r\n\t/**\r\n\t * 相对指定时间(后)。\r\n\t * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tto(input : string) : string\r\n\tto(input : number) : string\r\n\tto(input : Date) : string\r\n\tto(input : Dayuts) : string\r\n\tto(input : UTSJSONObject) : string\r\n\r\n\tto(input : string, withoutSuffix : boolean) : string\r\n\tto(input : number, withoutSuffix : boolean) : string\r\n\tto(input : Date, withoutSuffix : boolean) : string\r\n\tto(input : Dayuts, withoutSuffix : boolean) : string\r\n\tto(input : UTSJSONObject, withoutSuffix : boolean) : string\r\n\tto(input : any, withoutSuffix : boolean = false) : string {\r\n\t\treturn this.fromToBase(input, withoutSuffix, this, true)\r\n\t}\r\n\t/**\r\n\t * 将当前时间转换为与输入时间的相对时间差，并以指定的格式返回。\r\n\t * @param {string|number|Date|Dayuts|UTSJSONObject} input - 输入的时间，可以是字符串、数字（时间戳）、Date对象、Dayuts对象或UTSJSONObject。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tfrom(input : string) : string\r\n\tfrom(input : number) : string\r\n\tfrom(input : Date) : string\r\n\tfrom(input : Dayuts) : string\r\n\tfrom(input : UTSJSONObject) : string\r\n\r\n\tfrom(input : string, withoutSuffix : boolean) : string\r\n\tfrom(input : number, withoutSuffix : boolean) : string\r\n\tfrom(input : Date, withoutSuffix : boolean) : string\r\n\tfrom(input : Dayuts, withoutSuffix : boolean) : string\r\n\tfrom(input : UTSJSONObject, withoutSuffix : boolean) : string\r\n\tfrom(input : any, withoutSuffix : boolean = false) : string {\r\n\t\treturn this.fromToBase(input, withoutSuffix, this, false)\r\n\t}\r\n\t/**\r\n\t * 获取当前时间与实例时间的相对时间差，并以指定的格式返回。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\ttoNow() : string\r\n\ttoNow(withoutSuffix : boolean = false) : string {\r\n\t\treturn this.to(dayuts(), withoutSuffix)\r\n\t}\r\n\t/**\r\n\t * 获取实例时间与当前时间的相对时间差，并以指定的格式返回。\r\n\t * @param {boolean} withoutSuffix - 是否省略“未来”或“过去”的后缀。\r\n\t * @returns {string} 相对时间差的格式化字符串。\r\n\t */\r\n\tfromNow() : string\r\n\tfromNow(withoutSuffix : boolean = false) : string {\r\n\t\treturn this.from(dayuts(), withoutSuffix)\r\n\t}\r\n}\r\n\r\nfunction dayuts() : Dayuts;\r\nfunction dayuts(date : string) : Dayuts;\r\nfunction dayuts(date : any[]) : Dayuts;\r\nfunction dayuts(date : number) : Dayuts;\r\nfunction dayuts(date : UTSJSONObject) : Dayuts;\r\nfunction dayuts(date : Date) : Dayuts;\r\nfunction dayuts(date : Dayuts) : Dayuts;\r\n\r\n\r\n\r\n\r\nfunction dayuts(date : any | null = null, format : string | null = null, locale : string | null = null) : Dayuts {\r\n\tif (date != null && date instanceof Dayuts) return date.clone()\r\n\treturn new Dayuts({\r\n\t\tdate,\r\n\t\tformat,\r\n\t\tlocale\r\n\t} as DayutsConfig)\r\n}\r\n\r\n/**\r\n * 判断给定的对象是否为Dayuts实例\r\n * @param {(any | null)} date - 输入的对象\r\n * @returns {boolean} - 如果给定的对象是Dayuts实例，则返回true，否则返回false\r\n */\r\nfunction isDayuts(date : any | null = null) : boolean {\r\n\treturn date instanceof Dayuts\r\n}\r\n\r\nexport {\r\n\tdayuts,\r\n\tisDayuts\r\n}"]}