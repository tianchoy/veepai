import icons from './fui-icon.uts';
/**
 * Icon 图标
 * @description Icon 图标，First UI字体图标库。
 * @tutorial https://unix.firstui.cn/
 * @property {String} name {String} 图标名称
 * @property {Number} size {Number} 图标大小
 * @property {String} unit {String} 图标大小单位，可选值：rpx、px
 * @property {String} color {String} 图标颜色
 * @property {String} fontWeight {String} 图标字重，注意：仅支持normal、bold、‘400‘，’700‘
 * @property {Boolean} disabled {Boolean} 是否禁用点击，设置为true则点击事件及效果失效
 * @property {String} param	{String} 自定义参数，点击事件中回传
 * @property {Boolean} primary	{Boolean} 是否显示为主色调，color为空时有效。【内部保留属性】
 * @event {Function} onclick 点击图标时触发，(event: string) => void
 */
const __sfc__ = defineComponent({
    name: "fui-icon",
    emits: ['onclick'],
    props: {
        name: {
            type: String,
            default: ''
        },
        size: {
            type: [Object, String, Number],
            default: 0
        },
        unit: {
            type: String,
            default: 'rpx'
        },
        color: {
            type: String,
            default: ''
        },
        fontWeight: {
            type: String,
            default: 'normal'
        },
        disabled: {
            type: Boolean,
            default: false
        },
        param: {
            type: String,
            default: '0'
        },
        //是否显示为主色调，color为空时有效。【内部保留属性】
        primary: {
            type: Boolean,
            default: false
        }
    },
    computed: {
        getSize(): string {
            let size: string;
            if (typeof this.size == 'number') {
                size = (this.size as number).toString(10) + this.unit;
            }
            else if (typeof this.size == 'string') {
                size = (this.size as string) + this.unit;
            }
            else {
                size = this.size.toString() + this.unit;
            }
            return size;
        },
        isBind(): boolean {
            const size = this.getSize;
            let bind = false;
            if (size == '' || size == 'px' || size == 'rpx' || size == '0rpx' || size == '0px') {
                bind = true;
            }
            return bind;
        },
        getIcon(): string {
            const icon = this.icons.getString(this.name);
            return icon == null ? '' : icon;
        },
        getIconStyl(): object {
            const mp: Map<string, string> = new Map();
            mp.set('fontWeight', this.fontWeight);
            mp.set('fontSize', this.getSize);
            mp.set('lineHeight', this.getSize);
            if (this.color != '')
                mp.set('color', this.color);
            return mp;
        }
    },
    data() {
        return {
            icons: icons as UTSJSONObject
        };
    },
    methods: {
        handleClick() {
            if (this.disabled)
                return;
            this.$emit('onclick', this.param);
        }
    }
});
export default __sfc__;
function GenUniModulesFirstuiUnixComponentsFuiIconFuiIconRender(this: InstanceType<typeof __sfc__>): any | null {
    const _ctx = this;
    const _cache = this.$.renderCache;
    return _cE("text", _uM({
        style: _nS(_ctx.getIconStyl),
        class: _nC(["fui-icon", _uM({ 'fui-icon__fontsize': _ctx.isBind, 'fui-icon__active-color': _ctx.primary && _ctx.color == '', 'fui-icon__color': _ctx.color == '' && !_ctx.primary })]),
        onClick: _ctx.handleClick
    }), _tD(_ctx.getIcon), 15 /* TEXT, CLASS, STYLE, PROPS */, ["onClick"]);
}
export type FuiIconComponentPublicInstance = InstanceType<typeof __sfc__>;
const GenUniModulesFirstuiUnixComponentsFuiIconFuiIconStyles = [_uM([["fui-icon", _pS(_uM([["fontFamily", "fuiFont"]]))], ["fui-icon__color", _pS(_uM([["!color", "#333333"]]))], ["fui-icon__active-color", _pS(_uM([["!color", "#465CFF"]]))], ["fui-icon__fontsize", _pS(_uM([["!fontSize", "64rpx"], ["!lineHeight", "64rpx"]]))], ["@FONT-FACE", _uM([["0", _uM([["fontFamily", "fuiFont"], ["src", "url(\"/assets/fui-icon.9165208c.ttf\")"]])]])]])];
//# sourceMappingURL=fui-icon.uvue.map