{"version":3,"file":"hairline.uts","sourceRoot":"","sources":["uni_modules/lime-style/hairline.uts"],"names":[],"mappings":"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","sourcesContent":["import { unitConvert } from '@/uni_modules/lime-shared/unitConvert';\r\n\r\nexport type DrawBorderOptions = {\r\n\tdirection : 'top' | 'bottom' | 'left' | 'right';\r\n\tcolor ?: string;\r\n\tcolorKey ?: string; // 在dom中获取颜色\r\n\tstartOffsetKey?: string; // 在dom哪个属性获取\r\n\tstartOffset ?: number | string; // 支持数字或 CSS 字符串（如 '10px'）\r\n\tendOffset ?: number | string;\r\n\tlineWidth ?: number;\r\n\twatchSize ?: boolean; // 是否监听尺寸变化自动重绘\r\n\timmediate ?: boolean; // 是否立即绘制\r\n\tbordered?: boolean;\r\n\t\r\n}\r\n\r\nexport type UseDrawBorderReturn = {\r\n\tcolor: Ref<string>,\r\n\trenderBorder: () => void,\r\n\tclearBorder: () => void;\r\n\tdispose: () => void,\r\n}\r\n/**\r\n * 在元素上绘制边框，并支持动态监听尺寸变化\r\n * @param elementRef 目标元素的 Ref\r\n * @param options 边框配置\r\n * @returns 清理函数（用于卸载时取消监听）\r\n */\r\nexport function useDrawBorder(\r\n\telementRef : Ref<UniElement | null>,\r\n\toptions : DrawBorderOptions\r\n):UseDrawBorderReturn {\r\n\tlet resizeObserver : UniResizeObserver | null = null;\r\n\tconst { watchSize = true, immediate = true } = options;\r\n\tconst defalutColor = '#e7e7e7'\r\n\tconst color = ref(options.color ?? defalutColor)\r\n\tconst bordered = ref(options.bordered ?? true)\r\n\tlet computedStartOffset = 0\r\n\tlet computedEndOffset = 0\r\n\t\r\n\t// 绘制边框\r\n\tconst renderBorder = () => {\r\n\t\tif (elementRef.value == null) return;\r\n\t\tconst ctx = elementRef.value!.getDrawableContext();\r\n\t\tif (ctx == null) return;\r\n\r\n\t\tconst rect = elementRef.value!.getBoundingClientRect();\r\n\t\tctx.reset();\r\n\r\n\t\tconst {\r\n\t\t\tdirection,\r\n\t\t\tstartOffset = 0,\r\n\t\t\tendOffset = 0,\r\n\t\t\tlineWidth = 0.5,\r\n\t\t\tcolorKey,\r\n\t\t\tstartOffsetKey,\r\n\t\t} = options;\r\n\t\t \r\n\t\t\r\n\t\t// 转换单位（如果是字符串，如 '10px'）\r\n\t\tif(computedStartOffset == 0) {\r\n\t\t\tcomputedStartOffset = unitConvert((startOffsetKey != null ? elementRef.value?.style.getPropertyValue(startOffsetKey!) ?? startOffset : startOffset))\r\n\t\t}\r\n\t\tif(computedEndOffset == 0) {\r\n\t\t\tcomputedEndOffset = unitConvert(endOffset)\r\n\t\t}\r\n\t\t\r\n\t\tif(color.value == defalutColor && colorKey != null) {\r\n\t\t\tcolor.value = elementRef.value?.style.getPropertyValue(colorKey!) ?? defalutColor\r\n\t\t\t// if(color.value.length == 0) {\r\n\t\t\t// \tcolor.value = defalutColor\r\n\t\t\t// }\r\n\t\t}\r\n\t\tctx.strokeStyle = color.value;\r\n\t\tctx.lineWidth = lineWidth;\r\n\r\n\t\t// 根据方向计算坐标\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'top':\r\n\t\t\t\tctx.moveTo(computedStartOffset, 0);\r\n\t\t\t\tctx.lineTo(rect.width - computedEndOffset, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bottom':\r\n\t\t\t\tctx.moveTo(computedStartOffset, rect.height - 0.25);\r\n\t\t\t\tctx.lineTo(rect.width - computedEndOffset, rect.height - 0.25);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\t\tctx.moveTo(0, computedStartOffset);\r\n\t\t\t\tctx.lineTo(0, rect.height - computedEndOffset);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tctx.moveTo(rect.width, computedStartOffset);\r\n\t\t\t\tctx.lineTo(rect.width, rect.height - computedEndOffset);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tctx.stroke();\r\n\t\tctx.update();\r\n\t};\r\n\t\r\n\tconst setupResizeObserver = () => {\r\n\t\t// 监听尺寸变化（如果启用）\r\n\t\tif (watchSize) {\r\n\t\t\tif (resizeObserver == null) {\r\n\t\t\t\tresizeObserver = new UniResizeObserver((entries : Array<UniResizeObserverEntry>) => {\r\n\t\t\t\t\tif(!bordered.value) return\r\n\t\t\t\t\trenderBorder();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\twatchEffect(()=>{\r\n\t\t\t\tif (elementRef.value != null) {\r\n\t\t\t\t\tresizeObserver!.observe(elementRef.value!);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t// 清理函数（卸载时取消监听）\r\n\tconst dispose = () => {\r\n\t\tif (resizeObserver != null && elementRef.value != null) {\r\n\t\t\t// resizeObserver.unobserve(elementRef.value!);\r\n\t\t\tresizeObserver!.disconnect();\r\n\t\t\tresizeObserver = null;\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst clearBorder = ()=> {\r\n\t\tif (elementRef.value == null) return;\r\n\t\tconst ctx = elementRef.value!.getDrawableContext();\r\n\t\tif (ctx == null) return;\r\n\t\tbordered.value = false\r\n\t\tctx.reset()\r\n\t\tctx.update()\r\n\t}\r\n\t\r\n\tsetupResizeObserver()\r\n\t// 初始绘制\r\n\tif(immediate) {\r\n\t\trenderBorder();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn {\r\n\t\trenderBorder, // 手动触发绘制\r\n\t\tdispose,    // 清理监听\r\n\t\tclearBorder,\r\n\t\tcolor\r\n\t} as UseDrawBorderReturn\r\n\t\r\n}"]}