{"version":3,"sources":["uni_modules/lime-grid/components/l-grid/l-grid.uvue"],"names":[],"mappings":"AAyBC,OAAO,EAAE,SAAS,EAAG,WAAW,EAAC,MAAM,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;QAnBhD;;;;;;;;;;;;;;;;;;WAkBG;QAGH,MAAM,KAAK,GAAG,OASZ,CAAA;QAEF,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAG,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA,EAAE;YAC5C,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YAEnC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,CAAC,CAAA;YACnC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;YACrC,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA;YAE9D,OAAO,GAAG,CAAA;QACX,CAAC,CAAC,CAAA;QACF,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,GAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QAC5C,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAC5B,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAA;QAElC,MAAM,cAAc,GAAG,IAAI,iBAAiB,CAAC,CAAC,OAAO,EAAG,KAAK,CAAC,sBAAsB,CAAC,EAAE,EAAE;YACxF,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;YACvD,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAA;QAEF,MAAM,SAAS,GAAG,KAAK,CAAC,IAAG,UAAU,GAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,EAAC,UAAU,GAAC,IAAI,EAAE,EAAE;YACrF,IAAG,EAAE,IAAG,IAAI;gBAAE,OAAM;YACpB,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;QAO3B,CAAC,CAAC,CAAA;QAEF,WAAW,CAAC,GAAE,EAAE;YACf,SAAS,EAAE,CAAA;YACX,cAAc,CAAC,UAAU,EAAE,CAAA;QAC5B,CAAC,CAAC,CAAA;QAEF,OAAO,CAAC,UAAU,EAAE;YACnB,QAAQ;YACR,KAAK;YACL,KAAK;SACL,IAAI,WAAW,CAAC,CAAA;;mBA3EjB,GAAA,CAEO,MAAA,EAAA,GAAA,CAAA;gBAFD,KAAK,EAAA,GAAA,CAAA,CAAC,QAAQ,EAAyB,KAAA,CAAA,MAAA,CAAM,CAAA,CAAA;yBAA1B,WAAW;gBAAf,GAAG,EAAC,SAAW;;gBACnC,UAAA,CAAa,IAAA,CAAA,MAAA,EAAA,SAAA,CAAA","sourcesContent":["<template>\n\t<view class=\"l-grid\" ref=\"resizeRef\" :class=\"clsses\">\n\t\t<slot></slot>\n\t</view>\n</template>\n<script lang=\"uts\" setup>\n\t/**\n\t * Grid 栅格布局组件\n\t * @description 用于实现瀑布流、等分等网格布局场景\n\t * <br> 插件类型：LGridComponentPublicInstance \n\t * @tutorial https://ext.dcloud.net.cn/plugin?name=lime-grid\n\t * \n\t * @property {'left'|'center'} align 内容对齐方式\n\t * @value left 左对齐\n\t * @value center 居中对齐\n\t * @property {boolean} border 是否显示边框\n\t * @property {number} column 列数（0表示使用固定尺寸布局）\n\t * @property {number} gutter 网格间隔（单位px/rpx）\n\t * @property {boolean} hover 是否启用点击反馈效果\n\t * @property {boolean} inset 卡片式圆角风格\n\t * @property {string} [gridWidth] 固定尺寸布局时的网格宽度（支持CSS单位）\n\t * @property {string} [padding] 内边距（支持CSS简写格式）\n\t * @property {string} [bgColor] 背景颜色（卡片式布局生效）\n\t * @property {boolean} wrap 超出是否换行\n\t */\n\timport { GridProps , GridProvide} from './type';\n\t\n\tconst props = withDefaults(defineProps<GridProps>(), {\n\t\talign: 'center',\n\t\tborder: false,\n\t\tcolumn: 4,\n\t\tgutter: 0,\n\t\thover: false,\n\t\tinset: false,\n\t\twrap: true,\n\t\t// gridWidth: null\n\t})\n\t\n\tconst clsses = computed(():Map<string, any>=>{\n\t\tconst cls = new Map<string, any>();\n\t\t\n\t\tcls.set(`l-grid--wrap`, props.wrap)\n\t\tcls.set(`l-grid--inset`, props.inset)\n\t\tcls.set(`l-grid--bordered`, props.border && props.gutter == 0)\n\t\t\n\t\treturn cls\n\t})\n\tconst resizeRef = ref<UniElement|null>(null)\n\tconst width = ref<number>(0)\n\tconst children = ref<number[]>([])\n\n\tconst resizeObserver = new UniResizeObserver((entries : Array<UniResizeObserverEntry>) => {\n\t\tconst rect = entries[0].target.getBoundingClientRect();\n\t\twidth.value = rect.width;\n\t}) \n\t\n\tconst stopWatch = watch(():UniElement|null => resizeRef.value, (el:UniElement|null) => {\n\t\tif(el== null) return\n\t\tresizeObserver.observe(el)\n\n\n\n\n\n\n\t})\n\t\n\tonUnmounted(()=>{\n\t\tstopWatch()\n\t\tresizeObserver.disconnect()\n\t})\n\n\tprovide('limeGrid', {\n\t\tchildren,\n\t\tprops,\n\t\twidth\n\t} as GridProvide)\n</script>\n<style lang=\"scss\">\n\t@import './index';\n</style>\n"]}