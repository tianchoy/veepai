{"version":3,"file":"util.uts","sourceRoot":"","sources":["uni_modules/lime-color/common/util.uts"],"names":[],"mappings":"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","sourcesContent":["// import {isNumber} from '@/uni_modules/lime-shared/isNumber'\r\n// import {isString} from '@/uni_modules/lime-shared/isString'\r\n// import {isNumeric} from '@/uni_modules/lime-shared/isNumeric'\r\n\r\nimport BigDecimal from 'java.math.BigDecimal'\r\n\r\nexport function isNumber(value: any|null):boolean{\r\n\r\n\treturn ['Byte', 'UByte','Short','UShort','Int','UInt','Long','ULong','Float','Double','number'].includes(typeof value)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport function isString(value: any|null):boolean{\r\n\treturn typeof value == 'string';\r\n}\r\nexport function isNumeric(value: any|null):boolean{\r\n\tif(isNumber(value)) {\r\n\t\treturn true\r\n\t} else if(isString(value)) {\r\n\t\t// const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\r\n\t\tconst regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\")\r\n\t\treturn  regex.test(value as string) //regex.matches(value as string) \r\n\t}\r\n\treturn false\r\n}\r\n\r\n\r\nexport function toBoolean(value: any|null):boolean{\r\n\r\n\t// 根据输入值的类型，返回相应的布尔值\r\n\tif(isNumber(value)){\r\n\t\treturn (value as number) != 0;\r\n\t}\r\n\tif(isString(value)){\r\n\t\treturn `${value}`.length > 0;\r\n\t}\r\n\tif(typeof value == 'boolean'){\r\n\t\treturn value as boolean;\r\n\t}\r\n\t\r\n\treturn value != null\r\n\r\n\r\n\r\n\r\n}\r\n\r\n/**\r\n * Check to see if string passed in is a percentage\r\n * 检查传入的字符串是否为百分比\r\n * @hidden\r\n */\r\nexport function isPercentage(n : any) : boolean {\r\n\treturn isString(n) && (n as string).indexOf('%') != -1;\r\n}\r\n\r\n/**\r\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n * 需要处理 1.0 为 100%，因为一旦它是数字，它与 1 没有区别\r\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n * @hidden\r\n */\r\nexport function isOnePointZero(n : any) : boolean {\r\n\treturn isString(n) && (n as string).indexOf('.') != -1 && parseFloat(n as string) == 1;\r\n}\r\n\r\n\r\n/**\r\n * Take input from [0, n] and return it as [0, 1]\r\n * 将输入值从 [0, n] 转换为 [0, 1]\r\n * @hidden\r\n */\r\nfunction bound01(n: string, max: number): number \r\nfunction bound01(n: number, max: number): number \r\n\r\n\r\n\r\nfunction bound01(n : any, max : number) : number {\r\n\tif(!(isNumber(n) || isString(n))){\r\n\t\treturn 1\r\n\t}\r\n\tif (isOnePointZero(n)) {\r\n\t\tn = '100%';\r\n\t}\r\n\r\n\tconst isPercent = isPercentage(n);\r\n\tn = (isNumber(n) ? n : parseFloat(n as string)) as number\r\n\tn = max == 360 ? n : Math.min(max, Math.max(0, n));\r\n\r\n\t// Automatically convert percentage into number\r\n\t// 自动将百分比转换为数字\r\n\tif (isPercent) {\r\n\t\tn = parseInt(`${Math.min(n, 100) * max}`, 10) / 100;\r\n\t}\r\n\r\n\t// Handle floating point rounding errors\r\n\t//  处理浮点数舍入误差\r\n\t\r\n\tif ( Math.abs(n - max) < 0.000001) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t// Convert into [0, 1] range if it isn't already\r\n\t// 如果它还不是，将其转换为 [0, 1] 范围\r\n\tif (max == 360) {\r\n\t\t// If n is a hue given in degrees,\r\n\t\t// wrap around out-of-range values into [0, 360] range\r\n\t\t// then convert into [0, 1].\r\n\t\t// 如果 n 是以度为单位的色调，\r\n\t\t// 将超出范围的值环绕到 [0, 360] 范围内\r\n\t\t// 然后将其转换为 [0, 1]。\r\n\t\tn = (n < 0 ? (n % max) + max : n % max) / max // parseFloat(`${max}`);\r\n\t} else {\r\n\t\t// If n not a hue given in degrees\r\n\t\t// Convert into [0, 1] range if it isn't already.\r\n\t\t// 如果 n 不是以度为单位的色调\r\n\t\t// 如果它还不是，将其转换为 [0, 1] 范围。\r\n\t\tn = (n % max) / max //parseFloat(`${max}`);\r\n\t}\r\n\r\n\treturn n;\r\n}\r\nexport {bound01}\r\n\r\n\r\n/**\r\n * Force a number between 0 and 1\r\n * 在 0 和 1 之间强制一个数字\r\n * @hidden\r\n */\r\nexport function clamp01(val : number) : number {\r\n\treturn Math.min(1, Math.max(0, val));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Return a valid alpha value [0,1] with all invalid values being set to 1\r\n * 返回一个有效的 alpha 值 [0,1]，将所有无效值设置为 1\r\n * @hidden\r\n */\r\nfunction boundAlpha(a: number):number\r\nfunction boundAlpha(a: string):number\r\n\r\n\r\n\r\nfunction boundAlpha(a: any|null) : number {\r\n\tlet n = a == null ? 1 : (isString(a) ? parseFloat(a as string) : a as number)\r\n\r\n\tif (isNaN(n) || n < 0 || n > 1) {\r\n\t\tn = 1;\r\n\t}\r\n\r\n\treturn n;\r\n}\r\nexport {\r\n\tboundAlpha\r\n}\r\n/**\r\n * Replace a decimal with it's percentage value\r\n * 用百分比值替换小数\r\n * number | string\r\n * @hidden\r\n */\r\nfunction convertToPercentage(n:number):number\r\nfunction convertToPercentage(n:string):string\r\n\r\n\r\n\r\nfunction convertToPercentage(n:any): any{\r\n\r\n\tn = isNumeric(n) ? parseFloat(typeof n == 'string' ? n as string : BigDecimal.valueOf((n as number).toDouble()).toPlainString()) : n// as number\r\n\r\n\r\n\r\n\r\n\tif(isNumber(n) &&  (n as number) <= 1){\r\n\t\treturn `${n * 100}%`.replace('.0%','%');\r\n\t}\r\n\treturn n;\r\n}\r\n\r\nexport {convertToPercentage}\r\n\r\n/**\r\n * Force a hex value to have 2 characters\r\n * 强制使十六进制值具有 2 个字符\r\n * @hidden\r\n */\r\nexport function pad2(c : string) : string {\r\n\t//c.padStart(2, '0');//\r\n\treturn c.length == 1 ? '0' + c : `${c}`;\r\n}"]}