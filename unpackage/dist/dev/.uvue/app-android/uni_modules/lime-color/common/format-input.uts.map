{"version":3,"file":"format-input.uts","sourceRoot":"","sources":["uni_modules/lime-color/common/format-input.uts"],"names":[],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { HSL, HSLA, HSV, HSVA, HSB, HSBA,RGB, RGBA, LColorInfo, LColorFormats } from '../utssdk/interface.uts';\r\nimport { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\r\nimport { names } from './css-color-names';\r\nimport { boundAlpha, convertToPercentage, toBoolean } from './util';\r\ntype ColorMatchers = {\r\n\tCSS_UNIT : RegExp,\r\n\trgb : RegExp,\r\n\trgba : RegExp,\r\n\thsl : RegExp,\r\n\thsla : RegExp,\r\n\thsv : RegExp,\r\n\thsva : RegExp,\r\n\thsb : RegExp,\r\n\thsba : RegExp,\r\n\thex3 : RegExp,\r\n\thex6 : RegExp,\r\n\thex4 : RegExp,\r\n\thex8 : RegExp,\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// <http://www.w3.org/TR/css3-values/#integers>\r\nconst CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\r\n\r\n// <http://www.w3.org/TR/css3-values/#number-value>\r\nconst CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\r\n\r\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n// 允许正负整数/数字。不要捕获要么/或者，只需捕获整个结果。\r\nconst CSS_UNIT = `(?:${CSS_NUMBER})|(?:${CSS_INTEGER})`;\r\n\r\n// Actual matching.\r\n// Parentheses and commas are optional, but not required.\r\n// Whitespace can take the place of commas or opening paren\r\n// 实际匹配。\r\n// 圆括号和逗号是可选的，但不是必需的。\r\n// 空格可以代替逗号或左括号\r\nconst PERMISSIVE_MATCH3 = '[\\\\s|\\\\(]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')\\\\s*\\\\)?';;\r\n// const PERMISSIVE_MATCH3 = `[\\\\s|\\\\(]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})\\\\s*\\\\)?`;\r\nconst PERMISSIVE_MATCH4 = '[\\\\s|\\\\(]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')[,|\\\\s]+(' +\r\n\tCSS_UNIT +\r\n\t')\\\\s*\\\\)?';\r\n// const PERMISSIVE_MATCH4 = `[\\\\s|\\\\(]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})[,|\\\\s]+(${CSS_UNIT})\\\\s*\\\\)?`;\r\n\r\nexport const matchers = {\r\n\tCSS_UNIT: new RegExp(CSS_UNIT),\r\n\trgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\r\n\trgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\r\n\thsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\r\n\thsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\r\n\thsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\r\n\thsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\r\n\thsb: new RegExp('hsb' + PERMISSIVE_MATCH3),\r\n\thsba: new RegExp('hsba' + PERMISSIVE_MATCH4),\r\n\thex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n\thex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n\thex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n\thex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n} as ColorMatchers;\r\n\r\n/**\r\n * Check to see if it looks like a CSS unit\r\n * 检查它是否看起来像一个 CSS 单位\r\n * (see `matchers` above for definition).\r\n */\r\nfunction isValidCSSUnit(color : string) : boolean\r\nfunction isValidCSSUnit(color : number) : boolean\r\n\r\n\r\n\r\nfunction isValidCSSUnit(color : any|null) : boolean {\r\n\treturn toBoolean(matchers.CSS_UNIT.exec(`${color}`));\r\n}\r\nexport { isValidCSSUnit }\r\n\r\nfunction inputToRGB(color : string) : LColorInfo\r\nfunction inputToRGB(color : RGB) : LColorInfo\r\nfunction inputToRGB(color : RGBA) : LColorInfo\r\nfunction inputToRGB(color : HSL) : LColorInfo\r\nfunction inputToRGB(color : HSLA) : LColorInfo\r\nfunction inputToRGB(color : HSV) : LColorInfo\r\nfunction inputToRGB(color : HSVA) : LColorInfo\r\nfunction inputToRGB(color : HSB) : LColorInfo\r\nfunction inputToRGB(color : HSBA) : LColorInfo\r\nfunction inputToRGB(color : any) : LColorInfo {\r\n\tlet _color: UTSJSONObject|null = null\r\n\tlet rgb = { r: 0, g: 0, b: 0 } as RGB;\r\n\tlet a:any = 1;\r\n\tlet s: any | null;\r\n\tlet v: any | null;\r\n\tlet l: any | null;\r\n\tlet ok = false;\r\n\tlet format: LColorFormats | null = null;\r\n\t\r\n\tif (typeof color == 'string') {\r\n\t\t_color = stringInputToObject(color as string);\r\n\t} else if(typeof color == 'object'){\r\n\t\t_color = JSON.parse(JSON.stringify(color)) as UTSJSONObject\r\n\t} else {\r\n\t\t// _color = {} as UTSJSONObject\r\n\t}\r\n\tif(_color != null){\r\n\t\tif (isValidCSSUnit(_color['r']) && isValidCSSUnit(_color['g']) && isValidCSSUnit(_color['b'])){\r\n\t\t\trgb = rgbToRgb(_color['r']!, _color['g']!, _color['b']!);\r\n\t\t\tok = true;\r\n\t\t\tformat = `${_color['r']}`.endsWith('%') ? 'prgb' : 'rgb';\r\n\t\t} else if(isValidCSSUnit(_color['h']) && isValidCSSUnit(_color['s']) && (isValidCSSUnit(_color['v']) || isValidCSSUnit(_color['b'])) ){\r\n\t\t\tconst isHSV = _color['v'] != null\r\n\t\t\ts = convertToPercentage(_color['s']!);\r\n\t\t\tv = isHSV ? convertToPercentage(_color['v']!) : convertToPercentage(_color['b']!);\r\n\t\t\trgb = hsvToRgb(_color['h']!, s, v);\r\n\t\t\tok = true;\r\n\t\t\tformat = isHSV ? 'hsv' : 'hsb';\r\n\t\t} else if(isValidCSSUnit(_color['h']) && isValidCSSUnit(_color['s']) && isValidCSSUnit(_color['l'])){\r\n\t\t\ts = convertToPercentage(_color['s']!);\r\n\t\t\tl = convertToPercentage(_color['l']!);\r\n\r\n\t\t\trgb = hslToRgb(_color['h']!, s, l);\r\n\t\t\tok = true;\r\n\t\t\tformat = 'hsl';\r\n\t\t}\r\n\t\tif(_color['a']!=null){\r\n\t\t\ta = _color['a']!;\r\n\t\t}\r\n\t}\r\n\ta = boundAlpha(a);\r\n\treturn {\r\n\t\tok,\r\n\t\tformat: _color?.['format'] as (string | null) ?? format,\r\n\t\tr: Math.min(255, Math.max(rgb.r, 0)),\r\n\t\tg: Math.min(255, Math.max(rgb.g, 0)),\r\n\t\tb: Math.min(255, Math.max(rgb.b, 0)),\r\n\t\ta,\r\n\t} as LColorInfo\r\n}\r\n\r\nexport {\r\n\tinputToRGB\r\n}\r\n\r\n/**\r\n * Permissive string parsing.  Take in a number of formats, and output an object\r\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n */\r\n\r\nexport function stringInputToObject(color : string) : UTSJSONObject | null {\r\n\tlet _color = color.trim().toLowerCase();\r\n\tif (_color.length == 0) {\r\n\t\treturn null;\r\n\t}\r\n\tlet named = false;\r\n\tif (names.get(_color) != null) {\r\n\t\t_color = names.get(_color)!;\r\n\t\tnamed = true;\r\n\t} else if (_color == 'transparent') {\r\n\t\treturn { r: 0, g: 0, b: 0, a: 0, format: 'name' } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', 0],\r\n\t\t// \t['g', 0],\r\n\t\t// \t['b', 0],\r\n\t\t// \t['a', 0],\r\n\t\t// \t['format', 'name'],\r\n\t\t// ])\r\n\t}\r\n\t// Try to match string input using regular expressions.\r\n\t// Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n\t// Just return an object and let the conversion functions handle that.\r\n\t// This way the result will be the same whether the tinycolor is initialized with string or object.\r\n\r\n\tlet match = matchers.rgb.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = match[1]\r\n\t\tconst g = match[2]\r\n\t\tconst b = match[3]\r\n                                     \r\n\t\treturn { r, g, b } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', match[1]],\r\n\t\t// \t['g', match[2]],\r\n\t\t// \t['b', match[3]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.rgba.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = match[1]\r\n\t\tconst g = match[2]\r\n\t\tconst b = match[3]\r\n\t\tconst a = match[4]\r\n\t\treturn { r, g, b, a } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', match[1]],\r\n\t\t// \t['g', match[2]],\r\n\t\t// \t['b', match[3]],\r\n\t\t// \t['a', match[4]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsl.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst l = match[3]\r\n\t\treturn { h, s, l } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['l', match[3]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsla.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst l = match[3]\r\n\t\tconst a = match[4]\r\n\t\treturn { h, s, l, a } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['l', match[3]],\r\n\t\t// \t['a', match[4]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsv.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst v = match[3]\r\n\t\treturn { h, s, v } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['v', match[3]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hsva.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst h = match[1]\r\n\t\tconst s = match[2]\r\n\t\tconst v = match[3]\r\n\t\tconst a = match[4]\r\n\t\treturn { h, s, v, a } as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['h', match[1]],\r\n\t\t// \t['s', match[2]],\r\n\t\t// \t['v', match[3]],\r\n\t\t// \t['a', match[4]],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex8.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex(match[1]!)\r\n\t\tconst g = parseIntFromHex(match[2]!)\r\n\t\tconst b = parseIntFromHex(match[3]!)\r\n\t\tconst a = convertHexToDecimal(match[4]!)\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  a,\r\n\t\t  format: named ? 'name' : 'hex8',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3])],\r\n\t\t// \t['a', convertHexToDecimal(match[4])],\r\n\t\t// \t['format', named ? 'name' : 'hex8'],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex6.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex(match[1]!)\r\n\t\tconst g = parseIntFromHex(match[2]!)\r\n\t\tconst b = parseIntFromHex(match[3]!)\r\n\t\t// const a = parseIntFromHex(match[4])\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  format: named ? 'name' : 'hex',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3])],\r\n\t\t// \t['format', named ? 'name' : 'hex'],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex4.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex((match[1] + match[1]))\r\n\t\tconst g = parseIntFromHex((match[2] + match[2]))\r\n\t\tconst b = parseIntFromHex((match[3] + match[3]))\r\n\t\tconst a = convertHexToDecimal((match[4] + match[4]))\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  a,\r\n\t\t  format: named ? 'name' : 'hex8',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1] + match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2] + match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3] + match[3])],\r\n\t\t// \t['a', convertHexToDecimal(match[4] + match[4])],\r\n\t\t// \t['format', named ? 'name' : 'hex8'],\r\n\t\t// ])\r\n\t}\r\n\r\n\tmatch = matchers.hex3.exec(_color);\r\n\tif (match != null) {\r\n\t\tconst r = parseIntFromHex((match[1] + match[1]))\r\n\t\tconst g = parseIntFromHex((match[2] + match[2]))\r\n\t\tconst b = parseIntFromHex((match[3] + match[3]))\r\n\t\treturn {\r\n\t\t  r,\r\n\t\t  g,\r\n\t\t  b,\r\n\t\t  format: named ? 'name' : 'hex',\r\n\t\t} as UTSJSONObject;\r\n\t\t// return new Map([\r\n\t\t// \t['r', parseIntFromHex(match[1] + match[1])],\r\n\t\t// \t['g', parseIntFromHex(match[2] + match[2])],\r\n\t\t// \t['b', parseIntFromHex(match[3] + match[3])],\r\n\t\t// \t['format', named ? 'name' : 'hex'],\r\n\t\t// ])\r\n\t}\r\n\treturn null\r\n}\r\n\r\n\r\n"]}