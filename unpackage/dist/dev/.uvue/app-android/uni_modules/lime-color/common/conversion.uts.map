{"version":3,"file":"conversion.uts","sourceRoot":"","sources":["uni_modules/lime-color/common/conversion.uts"],"names":[],"mappings":"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","sourcesContent":["import { RGB,HSL,HSV } from '../utssdk/interface.uts';\r\nimport { bound01, pad2 } from './util';\r\n\r\n\r\n/**\r\n * Handle bounds / percentage checking to conform to CSS color spec\r\n * 处理边界/百分比检查以符合 CSS 颜色规范\r\n * <http://www.w3.org/TR/css3-color/>\r\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n * *Returns:* { r, g, b } in [0, 255]\r\n */\r\nfunction rgbToRgb(r: string, g: string, b: string):RGB;\r\nfunction rgbToRgb(r: number, g: string, b: string):RGB;\r\nfunction rgbToRgb(r: number, g: number, b: string):RGB;\r\nfunction rgbToRgb(r: number, g: number, b: number):RGB;\r\nfunction rgbToRgb(r: any,    g: any,    b: any) : RGB {\r\n\treturn {\r\n\t\tr: bound01(r, 255) * 255,\r\n\t\tg: bound01(g, 255) * 255,\r\n\t\tb: bound01(b, 255) * 255,\r\n\t} as RGB;\r\n}\r\nexport {\r\n\trgbToRgb\r\n}\r\n/**\r\n * Converts an RGB color value to HSL.\r\n * 将 RGB 颜色值转换为 HSL。\r\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n * *Returns:* { h, s, l } in [0,1]\r\n */\r\nfunction rgbToHsl(r: string, g: string, b: string):HSL;\r\nfunction rgbToHsl(r: number, g: string, b: string):HSL;\r\nfunction rgbToHsl(r: number, g: number, b: string):HSL;\r\nfunction rgbToHsl(r: number, g: number, b: number):HSL;\r\nfunction rgbToHsl(r : any, g : any, b : any) : HSL {\r\n\tr = bound01(r, 255);\r\n\tg = bound01(g, 255);\r\n\tb = bound01(b, 255);\r\n\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tlet s:number// = 0;\r\n\tconst l = (max + min) / 2;\r\n\r\n\tif (max == min) {\r\n\t\ts = 0;\r\n\t\th = 0; // achromatic\r\n\t} else {\r\n\t\tconst d = max - min;\r\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\t\tswitch (max) {\r\n\t\t\tcase r:\r\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase g:\r\n\t\t\t\th = (b - r) / d + 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase b:\r\n\t\t\t\th = (r - g) / d + 4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t__f__('log','at uni_modules/lime-color/common/conversion.uts:64','h')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn { h, s, l } as HSL;\r\n}\r\n\r\nexport {\r\n\trgbToHsl\r\n}\r\n\r\nexport function hue2rgb(p : number, q : number, t : number) : number {\r\n\tlet _t = t\r\n\tif (_t < 0) {\r\n\t\t_t += 1;\r\n\t}\r\n\r\n\tif (_t > 1) {\r\n\t\t_t -= 1;\r\n\t}\r\n\r\n\tif (_t < 1 / 6) {\r\n\t\treturn p + (q - p) * (6 * _t);\r\n\t}\r\n\r\n\tif (_t < 1 / 2) {\r\n\t\treturn q;\r\n\t}\r\n\r\n\tif (_t < 2 / 3) {\r\n\t\treturn p + (q - p) * (2 / 3 - _t) * 6;\r\n\t}\r\n\r\n\treturn p;\r\n}\r\n\r\n/**\r\n * Converts an HSL color value to RGB.\r\n * 将 HSL 颜色值转换为 RGB。\r\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n * *Returns:* { r, g, b } in the set [0, 255]\r\n */ \r\nfunction hslToRgb(h : string,s : string,l : string) : RGB \r\nfunction hslToRgb(h : number,s : string,l : string) : RGB \r\nfunction hslToRgb(h : number,s : number,l : string) : RGB \r\nfunction hslToRgb(h : number,s : number,l : number) : RGB \r\nfunction hslToRgb(h : any,s : any,l : any) : RGB {\r\n\tlet r : number;\r\n\tlet g : number;\r\n\tlet b : number;\r\n\th = bound01(h, 360);\r\n\ts = bound01(s, 100);\r\n\tl = bound01(l, 100);\r\n\t\r\n\tif (s == 0) {\r\n\t\t// achromatic\r\n\t\tg = l;\r\n\t\tb = l;\r\n\t\tr = l;\r\n\t} else {\r\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tconst p = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1 / 3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1 / 3);\r\n\t}\r\n\r\n\treturn { r: r * 255, g: g * 255, b: b * 255 } as RGB;\r\n}\r\nexport {\r\n\thslToRgb\r\n}\r\n/**\r\n * Converts an RGB color value to HSV\r\n * 将RGB颜色值转换为HSV颜色值\r\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n * *Returns:* { h, s, v } in [0,1]\r\n */\r\nexport function rgbToHsv(r : number, g : number, b : number) : HSV {\r\n\tr = bound01(r, 255);\r\n\tg = bound01(g, 255);\r\n\tb = bound01(b, 255);\r\n\r\n\tconst max = Math.max(r, g, b);\r\n\tconst min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tconst v = max;\r\n\tconst d = max - min;\r\n\tconst s = max == 0 ? 0 : d / max;\r\n\r\n\tif (max == min) {\r\n\t\th = 0; // achromatic\r\n\t} else {\r\n\t\tswitch (max) {\r\n\t\t\tcase r:\r\n\t\t\t\th = (g - b) / d + (g < b ? 6 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase g:\r\n\t\t\t\th = (b - r) / d + 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase b:\r\n\t\t\t\th = (r - g) / d + 4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t__f__('log','at uni_modules/lime-color/common/conversion.uts:171','1')\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn { h, s, v } as HSV;\r\n}\r\n\r\n/**\r\n * Converts an HSV color value to RGB.\r\n * 将HSV颜色值转换为RGB。\r\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n * *Returns:* { r, g, b } in the set [0, 255]\r\n */\r\nfunction hsvToRgb( h : string, s : string, v : string) : RGB \r\nfunction hsvToRgb( h : number, s : string, v : string) : RGB \r\nfunction hsvToRgb( h : number, s : number, v : string) : RGB \r\nfunction hsvToRgb( h : number, s : number, v : number) : RGB \r\nfunction hsvToRgb( h : any, s : any, v : any) : RGB {\r\n\th = bound01(h, 360) * 6;\r\n\ts = bound01(s, 100);\r\n\tv = bound01(v, 100);\r\n\r\n\tconst i = Math.floor(h);\r\n\tconst f = h - i;\r\n\tconst p = v * (1 - s);\r\n\tconst q = v * (1 - f * s);\r\n\tconst t = v * (1 - (1 - f) * s);\r\n\tconst mod = i % 6;\r\n\tconst r = [v, q, p, p, t, v][mod];\r\n\tconst g = [t, v, v, q, p, p][mod];\r\n\tconst b = [p, p, t, v, v, q][mod];\r\n\r\n\treturn { r: r * 255, g: g * 255, b: b * 255 } as RGB;\r\n}\r\nexport {\r\n\thsvToRgb\r\n}\r\n/**\r\n * Converts an RGB color to hex\r\n * 将RGB颜色转换为十六进制。\r\n * Assumes r, g, and b are contained in the set [0, 255]\r\n * Returns a 3 or 6 character hex\r\n */\r\nexport function rgbToHex(r : number, g : number, b : number, allow3Char : boolean = false) : string {\r\n\tconst hex = [\r\n\t\tpad2(Math.round(r).toString(16)),\r\n\t\tpad2(Math.round(g).toString(16)),\r\n\t\tpad2(Math.round(b).toString(16)),\r\n\t];\r\n\r\n\t// Return a 3 character hex if possible\r\n\tif (\r\n\t\tallow3Char &&\r\n\t\thex[0].startsWith(hex[0].charAt(1)) &&\r\n\t\thex[1].startsWith(hex[1].charAt(1)) &&\r\n\t\thex[2].startsWith(hex[2].charAt(1))\r\n\t) {\r\n\t\treturn hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n\t}\r\n\r\n\treturn hex.join('');\r\n}\r\n\r\n/**\r\n * Converts an RGBA color plus alpha transparency to hex\r\n * 将带有透明度的RGBA颜色转换为十六进制。\r\n * Assumes r, g, b are contained in the set [0, 255] and\r\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\r\n */\r\n// eslint-disable-next-line max-params\r\nexport function rgbaToHex(r : number, g : number, b : number, a : number, allow4Char : boolean = false) : string {\r\n\tconst hex = [\r\n\t\tpad2(Math.round(r).toString(16)),\r\n\t\tpad2(Math.round(g).toString(16)),\r\n\t\tpad2(Math.round(b).toString(16)),\r\n\t\tpad2(convertDecimalToHex(a)),\r\n\t];\r\n\r\n\t// Return a 4 character hex if possible\r\n\tif (\r\n\t\tallow4Char &&\r\n\t\thex[0].startsWith(hex[0].charAt(1)) &&\r\n\t\thex[1].startsWith(hex[1].charAt(1)) &&\r\n\t\thex[2].startsWith(hex[2].charAt(1)) &&\r\n\t\thex[3].startsWith(hex[3].charAt(1))\r\n\t) {\r\n\t\treturn hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\r\n\t}\r\n\r\n\treturn hex.join('');\r\n}\r\n\r\n/**\r\n * Converts an RGBA color to an ARGB Hex8 string\r\n * 将RGBA颜色转换为ARGB十六进制字符串。\r\n * Rarely used, but required for \"toFilter()\"\r\n */\r\nexport function rgbaToArgbHex(r : number, g : number, b : number, a : number) : string {\r\n\tconst hex = [\r\n\t\tpad2(convertDecimalToHex(a)),\r\n\t\tpad2(Math.round(r).toString(16)),\r\n\t\tpad2(Math.round(g).toString(16)),\r\n\t\tpad2(Math.round(b).toString(16)),\r\n\t];\r\n\r\n\treturn hex.join('');\r\n}\r\n\r\n/** Converts a decimal to a hex value */\r\n/** 将十进制转换为十六进制值。 */\r\nfunction convertDecimalToHex(d : number) : string\r\nfunction convertDecimalToHex(d : string) : string\r\nfunction convertDecimalToHex(d : any) : string {\r\n\treturn Math.round(parseFloat(`${d}`) * 255).toString(16);\r\n}\r\nexport {convertDecimalToHex}\r\n/** Converts a hex value to a decimal */\r\nexport function convertHexToDecimal(h : string) : number {\r\n\treturn parseIntFromHex(h) / 255;\r\n}\r\n\r\n/** Parse a base-16 hex value into a base-10 integer */\r\nexport function parseIntFromHex(val : string) : number {\r\n\treturn parseInt(val, 16);\r\n}\r\n\r\nexport function numberInputToObject(color : number) : RGB {\r\n\treturn {\r\n\t\tr: color >> 16,\r\n\t\tg: (color & 0xff00) >> 8,\r\n\t\tb: color & 0xff,\r\n\t} as RGB;\r\n}"]}