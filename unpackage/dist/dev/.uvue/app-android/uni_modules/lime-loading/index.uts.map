{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/lime-loading/index.uts"],"names":[],"mappings":"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","sourcesContent":["// 引入颜色处理库\r\nimport { tinyColor } from '@/uni_modules/lime-color';\r\n\r\n\r\n/**\r\n * 操作类型\r\n * play: 开始动画\r\n * failed: 显示失败状态\r\n * clear: 清除动画\r\n * destroy: 销毁实例\r\n */\r\nexport type TickType = 'play' | 'failed' | 'clear' | 'destroy' | 'pause'\r\n/**\r\n * 加载动画类型\r\n * circular: 环形加载动画\r\n * spinner: 旋转器加载动画\r\n * failed: 失败状态动画\r\n */\r\nexport type LoadingType = 'circular' | 'spinner' | 'failed';\r\n/**\r\n * 加载组件返回接口\r\n */\r\nexport type UseLoadingReturn = {\r\n\tratio : 1;\r\n\ttype : LoadingType;\r\n\tmode : 'raf' | 'animate'; // \r\n\tcolor : string;//Ref<string>;\r\n\tplay : () => void;\r\n\tfailed : () => void;\r\n\tclear : () => void;\r\n\tdestroy : () => void;\r\n\tpause : () => void;\r\n}\r\n\r\n\r\n/**\r\n * 计算圆周上指定角度的点的坐标\r\n * @param centerX 圆心的 X 坐标\r\n * @param centerY 圆心的 Y 坐标\r\n * @param radius 圆的半径\r\n * @param angleDegrees 角度（以度为单位）\r\n * @returns 包含 X 和 Y 坐标的对象\r\n */\r\nfunction getPointOnCircle(\r\n\tcenterX : number,\r\n\tcenterY : number,\r\n\tradius : number,\r\n\tangleDegrees : number\r\n) : number[] {\r\n\t// 将角度转换为弧度\r\n\tconst angleRadians = (angleDegrees * Math.PI) / 180;\r\n\r\n\t// 计算点的 X 和 Y 坐标\r\n\tconst x = centerX + radius * Math.cos(angleRadians);\r\n\tconst y = centerY + radius * Math.sin(angleRadians);\r\n\r\n\treturn [x, y]\r\n}\r\n\r\nexport function useLoading(element : Ref<UniElement | null>) : UseLoadingReturn {\r\n\r\n\tconst tick = ref<TickType>('pause')\r\n\r\n\tconst state = reactive<UseLoadingReturn>({\r\n\t\tcolor: '#000',\r\n\t\ttype: 'circular',\r\n\t\tratio: 1,\r\n\t\tmode: 'raf',\r\n\t\tplay: () => {\r\n\t\t\ttick.value = 'play'\r\n\t\t},\r\n\t\tfailed: () => {\r\n\t\t\ttick.value = 'failed'\r\n\t\t},\r\n\t\tclear: () => {\r\n\t\t\ttick.value = 'clear'\r\n\t\t},\r\n\t\tdestroy: () => {\r\n\t\t\ttick.value = 'destroy'\r\n\t\t},\r\n\t\tpause: () => {\r\n\t\t\ttick.value = 'pause'\r\n\t\t}\r\n\t})\r\n\r\n\tconst context = shallowRef<DrawableContext | null>(null);\r\n\t// let ctx:DrawableContext|null = null\r\n\r\n\t// let rotation = 0\r\n\tlet isPlaying = false\r\n\tlet canvasWidth = ref(0)\r\n\tlet canvasHeight = ref(0)\r\n\tlet canvasSize = ref(0)\r\n\r\n\tlet animationFrameId = -1\r\n\tlet animation : UniAnimation | null = null\r\n\r\n\tlet drawFrame : (() => void) | null = null\r\n\tconst size = computed(() : number => state.ratio > 1 ? state.ratio : canvasSize.value * state.ratio)\r\n\t// 绘制圆形加载\r\n\tconst drawCircular = () => {\r\n\t\tlet startAngle = 0;   // 起始角度\r\n\t\tlet endAngle = 0;     // 结束角度\r\n\t\tlet rotate = 0;       // 旋转角度\r\n\r\n\t\t// const ctx = context.value!\r\n\t\t// 动画参数配置\r\n\t\tconst MIN_ANGLE = 5;          // 最小保持角度\r\n\t\tconst ARC_LENGTH = 359.5      // 最大弧长（避免闭合）\r\n\t\tconst PI = Math.PI / 180      // 角度转弧度系数\r\n\t\tconst SPEED = 0.018 / 4           // 动画速度\r\n\t\tconst ROTATE_INTERVAL = 0.09 / 4  // 旋转增量\r\n\r\n\t\tconst lineWidth = size.value / 10;  // 线宽计算\r\n\t\tconst x = canvasWidth.value / 2           // 中心点X\r\n\t\tconst y = canvasHeight.value / 2          // 中心点Y\r\n\t\tconst radius = size.value / 2 - lineWidth // 实际绘制半径\r\n\r\n\t\tdrawFrame = () => {\r\n\t\t\tif (context.value == null || !isPlaying) return\r\n\t\t\tlet ctx = context.value!\r\n\r\n\r\n\t\t\t// __f__('log','at uni_modules/lime-loading/index.uts:124','radius', radius, size.value)\r\n\t\t\tctx.reset();\r\n\r\n\t\t\t// 绘制圆弧\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(\r\n\t\t\t\tx,\r\n\t\t\t\ty,\r\n\t\t\t\tradius,\r\n\t\t\t\tstartAngle * PI + rotate,\r\n\t\t\t\tendAngle * PI + rotate\r\n\t\t\t);\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeStyle = state.color;\r\n\t\t\tctx.stroke();\r\n\r\n\t\t\t// 角度更新逻辑\r\n\t\t\tif (endAngle < ARC_LENGTH) {\r\n\t\t\t\tendAngle = Math.min(ARC_LENGTH, endAngle + (ARC_LENGTH - MIN_ANGLE) * SPEED);\r\n\t\t\t} else if (startAngle < ARC_LENGTH) {\r\n\t\t\t\tstartAngle = Math.min(ARC_LENGTH, startAngle + (ARC_LENGTH - MIN_ANGLE) * SPEED);\r\n\t\t\t} else {\r\n\t\t\t\t// 重置时保留最小可见角度\r\n\t\t\t\tstartAngle = 0;\r\n\t\t\t\tendAngle = MIN_ANGLE;\r\n\t\t\t}\r\n\r\n\t\t\tctx.update()\r\n\r\n\r\n\r\n\t\t\tif (state.mode == 'raf') {\r\n\t\t\t\trotate = (rotate + ROTATE_INTERVAL) % 360; // 持续旋转并限制范围\r\n\t\t\t\tif (isPlaying && drawFrame != null) {\r\n\t\t\t\t\tanimationFrameId = requestAnimationFrame(drawFrame!)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet lastTime = Date.now();\r\n\tconst drawSpinner = () => {\r\n\t\tconst steps = 12;     // 旋转线条数量\r\n\t\t// const size = state.ratio > 1 ? state.ratio : canvasSize.value\r\n\t\tconst lineWidth = size.value / 10;  // 线宽\r\n\t\tconst x = canvasWidth.value / 2  // 中心坐标\r\n\t\tconst y = canvasHeight.value / 2\r\n\r\n\t\tlet step = 0;         // 当前步数\r\n\r\n\r\n\r\n\r\n\t\tconst length = size.value / 3.6 - lineWidth;  // 线长\r\n\r\n\t\tconst offset = size.value / 4;      // 距中心偏移\r\n\r\n\t\t/** 生成颜色渐变数组 */\r\n\t\tfunction generateColorGradient(hex : string, steps : number) : string[] {\r\n\t\t\tconst colors : string[] = []\r\n\t\t\tconst _color = tinyColor(hex)\r\n\r\n\t\t\tfor (let i = 1; i <= steps; i++) {\r\n\t\t\t\t_color.setAlpha(i / steps);\r\n\t\t\t\tcolors.push(_color.toRgbString());\r\n\t\t\t}\r\n\t\t\treturn colors\r\n\t\t}\r\n\r\n\t\t// 计算颜色渐变\r\n\t\tlet colors = computed(() : string[] => generateColorGradient(state.color, steps))\r\n\r\n\t\t/** 帧绘制函数 */\r\n\t\tdrawFrame = () => {\r\n\t\t\tif (context.value == null || !isPlaying) return\r\n\t\t\tconst delta = Date.now() - lastTime;\r\n\r\n\r\n\t\t\tif (delta >= 1000 / 10) {\r\n\t\t\t\tlastTime = Date.now();\r\n\t\t\t\tlet ctx = context.value!\r\n\t\t\t\tctx.reset();\r\n\t\t\t\tfor (let i = 0; i < steps; i++) {\r\n\t\t\t\t\tconst stepAngle = 360 / steps;    // 单步角度\r\n\t\t\t\t\tconst angle = stepAngle * i;      // 当前角度\r\n\t\t\t\t\tconst index = (steps + i - step) % steps // 颜色索引\r\n\t\t\t\t\t// 计算线段坐标\r\n\t\t\t\t\tconst radian = angle * Math.PI / 180;\r\n\t\t\t\t\tconst cos = Math.cos(radian);\r\n\t\t\t\t\tconst sin = Math.sin(radian);\r\n\r\n\t\t\t\t\t// 绘制线段\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.moveTo(x + offset * cos, y + offset * sin);\r\n\t\t\t\t\tctx.lineTo(x + (offset + length) * cos, y + (offset + length) * sin);\r\n\t\t\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t\t\tctx.lineCap = 'round';\r\n\t\t\t\t\tctx.strokeStyle = colors.value[index];\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tctx.update()\r\n\t\t\t\tif(state.mode == 'raf') {\r\n\t\t\t\t\t// step += 1\r\n\t\t\t\t\tstep = (step + 1) % steps; // 限制step范围\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (state.mode == 'raf') {\r\n\t\t\t\tif (isPlaying && drawFrame != null) {\r\n\t\t\t\t\tanimationFrameId = requestAnimationFrame(drawFrame!)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst drwaFailed = () => {\r\n\t\tif (context.value == null) return\r\n\t\tlet ctx = context.value!\r\n\r\n\t\t// const size = state.ratio > 1 ? state.ratio : canvasSize.value\r\n\t\tconst innerSize = size.value * 0.8 // 内圈尺寸\r\n\t\tconst lineWidth = innerSize / 10; // 线宽\r\n\t\tconst lineLength = (size.value - lineWidth) / 2 // X长度\r\n\t\tconst centerX = canvasWidth.value / 2;\r\n\t\tconst centerY = canvasHeight.value / 2;\r\n\t\tconst radius = (size.value - lineWidth) / 2\r\n\r\n\r\n\r\n\t\tconst angleRadians1 = 45 * Math.PI / 180\r\n\t\tconst angleRadians2 = (45 - 90) * Math.PI / 180\r\n\r\n\t\tctx.reset()\r\n\t\tctx.lineWidth = lineWidth;\r\n\t\tctx.strokeStyle = state.color;\r\n\r\n\t\t// 绘制逐渐显示的圆\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\r\n\t\tctx.lineWidth = lineWidth;\r\n\t\tctx.strokeStyle = state.color;\r\n\t\tctx.stroke();\r\n\r\n\t\tconst [startX1, startY] = getPointOnCircle(centerX, centerY, lineLength / 2, 180 + 45)\r\n\t\tconst [startX2] = getPointOnCircle(centerX, centerY, lineLength / 2, 180 + 90 + 45)\r\n\r\n\t\tconst x2 = Math.sin(angleRadians1) * lineLength + startX1\r\n\t\tconst y2 = Math.cos(angleRadians1) * lineLength + startY\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(startX1, startY)\r\n\t\tctx.lineTo(x2, y2)\r\n\t\tctx.stroke();\r\n\r\n\t\tconst x3 = Math.sin(angleRadians2) * lineLength + startX2\r\n\t\tconst y3 = Math.cos(angleRadians2) * lineLength + startY\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.moveTo(startX2, startY)\r\n\t\tctx.lineTo(x3, y3)\r\n\t\tctx.stroke();\r\n\r\n\r\n\t\tctx.update()\r\n\t}\r\n\r\n\tlet currentType : LoadingType | null = null\r\n\tconst useMode = () => {\r\n\t\tif (state.mode != 'raf') {\r\n\t\t\tconst keyframes = [{ transform: 'rotate(0)' }, { transform: 'rotate(360)' }]\r\n\t\t\tanimation = element.value!.animate(keyframes, {\r\n\t\t\t\tduration: 80000,\r\n\t\t\t\teasing: 'linear',\r\n\t\t\t\t// fill: 'forwards',\r\n\t\t\t\titerations: Infinity\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tconst startAnimation = (type : string) => {\r\n\t\tif (context.value == null || element.value == null) return\r\n\t\tanimation?.pause()\r\n\r\n\t\tif (currentType == type) {\r\n\t\t\tisPlaying = true\r\n\t\t\tanimation?.play()\r\n\t\t\tdrawFrame?.()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (type == 'circular') {\r\n\t\t\tcurrentType = 'circular'\r\n\t\t\tdrawCircular()\r\n\t\t\tuseMode()\r\n\r\n\t\t}\r\n\r\n\t\tif (type == 'spinner') {\r\n\t\t\tcurrentType = 'spinner'\r\n\t\t\tdrawSpinner()\r\n\t\t\tuseMode()\r\n\t\t}\r\n\r\n\t\tisPlaying = true\r\n\t\tdrawFrame?.()\r\n\t}\r\n\r\n\t// 监听元素尺寸\r\n\tconst resizeObserver : UniResizeObserver = new UniResizeObserver((_entries : UniResizeObserverEntry[]) => {\r\n\t\trequestAnimationFrame(()=> {\r\n\t\t\telement.value?.getBoundingClientRectAsync()?.then(rect => {\r\n\t\t\t\tif (rect.width == 0 || rect.height == 0) return\r\n\t\t\t\tcontext.value = element.value!.getDrawableContext() as DrawableContext;\r\n\t\t\t\tcanvasWidth.value = rect.width;\r\n\t\t\t\tcanvasHeight.value = rect.height;\r\n\t\t\t\tcanvasSize.value = Math.min(rect.width, rect.height);\r\n\t\t\t\t// startAnimation(state.type)\r\n\t\t\t})\r\n\t\t})\r\n\t});\r\n\r\n\twatchEffect(() => {\r\n\t\tif (element.value == null) return\r\n\t\tresizeObserver.observe(element.value!);\r\n\t})\r\n\r\n\twatchEffect(() => {\r\n\t\tif (context.value == null) return\r\n\t\tif (tick.value == 'play') {\r\n\t\t\tstartAnimation(state.type)\r\n\t\t}\r\n\t\tif (tick.value == 'failed') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tanimation?.pause()\r\n\t\t\tanimation?.cancel()\r\n\t\t\tdrwaFailed()\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (tick.value == 'clear') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tanimation?.pause()\r\n\t\t\tanimation?.cancel()\r\n\t\t\tcontext.value?.reset();\r\n\t\t\tcontext.value?.update();\r\n\t\t\tisPlaying = false\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (tick.value == 'destroy') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tanimation?.pause()\r\n\t\t\tanimation?.cancel()\r\n\t\t\tcontext.value?.reset();\r\n\t\t\tcontext.value?.update();\r\n\t\t\tcontext.value = null\r\n\t\t\tanimation = null\r\n\t\t\tisPlaying = false\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (tick.value == 'pause') {\r\n\t\t\tclearTimeout(animationFrameId)\r\n\t\t\tisPlaying = false\r\n\t\t\tanimation?.pause()\r\n\t\t\treturn\r\n\t\t}\r\n\t})\r\n\r\n\treturn state\r\n}"]}