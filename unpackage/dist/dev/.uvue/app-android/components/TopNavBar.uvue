import { NavTitleItem } from '../types/NavTitleItem.uts';
// 接收父组件传递的参数
const __sfc__ = defineComponent({
    __name: 'TopNavBar',
    props: {
        title: {
            type: Array as PropType<NavTitleItem[]>,
            default: (): never[] => []
        },
        showBack: {
            type: Boolean,
            default: false
        },
        messageCount: {
            type: Number,
            default: 0
        }
    },
    emits: ['back', 'message', 'add', 'changeNav'],
    setup(__props): any | null {
        const __ins = getCurrentInstance()!;
        const _ctx = __ins.proxy as InstanceType<typeof __sfc__>;
        const _cache = __ins.renderCache;
        const props = __props;
        // 定义触发给父组件的事件 
        function emits(event: string, ...do_not_transform_spread: Array<any | null>) {
            __ins.emit(event, ...do_not_transform_spread);
        }
        // 导航事件处理
        const goBack = () => emits('back');
        const onMessage = () => emits('message');
        const onAdd = () => emits('add');
        // 使用类型别名
        const changeNav = (item: NavTitleItem) => {
            console.log(item.isCurrent, " at components/TopNavBar.uvue:47");
            uni.redirectTo({
                url: item.url
            });
        };
        return (): any | null => {
            return createElementVNode("view", utsMapOf({ class: "custom-nav" }), [
                isTrue(props.showBack)
                    ? createElementVNode("view", utsMapOf({
                        key: 0,
                        class: "nav-back",
                        onClick: goBack
                    }), [
                        createElementVNode("image", utsMapOf({
                            class: "nav-icon",
                            onClick: goBack,
                            src: "/static/tabbar/back.png"
                        }))
                    ])
                    : createCommentVNode("v-if", true),
                createElementVNode("view", utsMapOf({ class: "nav-item" }), [
                    createElementVNode(Fragment, null, RenderHelpers.renderList(props.title, (item, index, __index, _cached): any => {
                        return createElementVNode("text", utsMapOf({
                            class: "nav-title",
                            style: normalizeStyle(item.isCurrent ? 'font-size:40rpx; font-weight:900' : ''),
                            key: index,
                            onClick: () => { changeNav(item); }
                        }), toDisplayString(item.name), 13 /* TEXT, STYLE, PROPS */, ["onClick"]);
                    }), 128 /* KEYED_FRAGMENT */)
                ]),
                createElementVNode("view", utsMapOf({ class: "nav-actions" }), [
                    createElementVNode("image", utsMapOf({
                        class: "nav-icon",
                        onClick: onAdd,
                        src: "/static/tabbar/add.png"
                    }))
                ])
            ]);
        };
    }
});
export default __sfc__;
const GenComponentsTopNavBarStyles = [utsMapOf([["custom-nav", padStyleMapOf(utsMapOf([["display", "flex"], ["flexDirection", "row"], ["alignItems", "center"], ["justifyContent", "space-between"], ["paddingTop", "30rpx"], ["paddingRight", "25rpx"], ["paddingBottom", "30rpx"], ["paddingLeft", "25rpx"], ["backgroundColor", "#ffffff"], ["marginTop", "60rpx"]]))], ["nav-back", padStyleMapOf(utsMapOf([["width", "32rpx"], ["height", "32rpx"], ["display", "flex"], ["alignItems", "center"], ["justifyContent", "center"]]))], ["nav-item", padStyleMapOf(utsMapOf([["display", "flex"], ["flexDirection", "row"], ["alignItems", "flex-end"], ["justifyContent", "space-around"]]))], ["nav-title", padStyleMapOf(utsMapOf([["color", "#333333"], ["marginTop", 0], ["marginRight", "20rpx"], ["marginBottom", 0], ["marginLeft", "20rpx"], ["maxWidth", "400rpx"], ["textAlign", "center"], ["overflow", "hidden"], ["textOverflow", "ellipsis"], ["whiteSpace", "nowrap"]]))], ["nav-actions", padStyleMapOf(utsMapOf([["display", "flex"], ["flexDirection", "row"], ["alignItems", "center"]]))], ["nav-icon", padStyleMapOf(utsMapOf([["width", "60rpx"], ["height", "60rpx"], ["display", "flex"], ["alignItems", "center"], ["justifyContent", "center"], ["position", "relative"], ["marginLeft", "16rpx"]]))]])];
//# sourceMappingURL=TopNavBar.uvue.map