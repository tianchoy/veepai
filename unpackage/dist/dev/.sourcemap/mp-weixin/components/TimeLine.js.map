{"version":3,"file":"TimeLine.js","sources":["components/TimeLine.uvue","/Users/xyhc/Documents/veepai_uniappx/components/TimeLine.uvue?type=component"],"sourcesContent":["<template>\n  <view class=\"xf-timeline-uts\">\n    <!-- 控制栏 -->\n    <view class=\"xf-control-bar\">\n      <button @tap=\"zoomIn\" class=\"xf-control-btn\">放大</button>\n      <button @tap=\"zoomOut\" class=\"xf-control-btn\">缩小</button>\n      <button @tap=\"goToToday\" class=\"xf-control-btn\">今天</button>\n      <view class=\"xf-time-range\">{{ visibleStart }} - {{ visibleEnd }}</view>\n    </view>\n    \n    <!-- 时间刻度 -->\n    <scroll-view scroll-x class=\"xf-time-scale\" :scroll-left=\"scrollLeft\" @scroll=\"handleScaleScroll\">\n      <view class=\"xf-scale-container\" :style=\"{width: totalWidth + 'px'}\">\n        <view \n          v-for=\"(scale, index) in visibleScales\" \n          :key=\"index\"\n          class=\"xf-scale-mark\"\n          :style=\"{left: scale.position + 'px'}\"\n        >\n          <text class=\"xf-scale-label\">{{ scale.label }}</text>\n          <view class=\"xf-scale-line\"></view>\n        </view>\n      </view>\n    </scroll-view>\n    \n    <!-- 时间线内容 -->\n    <scroll-view \n      scroll-y \n      scroll-x\n      class=\"xf-timeline-content\"\n      :scroll-left=\"scrollLeft\"\n      @scroll=\"handleContentScroll\"\n    >\n      <view class=\"xf-timeline-inner\" :style=\"{width: totalWidth + 'px', height: contentHeight + 'px'}\">\n        <!-- 事件项 -->\n        <view \n          v-for=\"(event, index) in visibleEvents\" \n          :key=\"event.id || index\"\n          class=\"xf-timeline-event\"\n          :style=\"getEventStyle(event)\"\n          @tap=\"handleEventClick(event)\"\n        >\n          <view class=\"xf-event-marker\" :style=\"{backgroundColor: event.color || defaultColor}\"></view>\n          <view class=\"xf-event-card\">\n            <text class=\"xf-event-title\">{{ event.title }}</text>\n            <text class=\"xf-event-time\">{{ formatTime(event.time) }}</text>\n            <text class=\"xf-event-desc\" v-if=\"event.desc\">{{ event.desc }}</text>\n          </view>\n        </view>\n        \n        <!-- 当前时间线 -->\n        <view \n          class=\"xf-current-line\" \n          v-if=\"showCurrentTime\"\n          :style=\"{left: currentTimePos + 'px'}\"\n        ></view>\n      </view>\n    </scroll-view>\n  </view>\n</template>\n\n<script setup lang=\"uts\">\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\n\n// 定义类型\ninterface TimelineEvent {\n  id?: string | number\n  title: string\n  time: string | Date\n  desc?: string\n  color?: string\n  top?: number\n}\n\ninterface TimeScale {\n  position: number\n  label: string\n  time: Date\n}\n\n// 常量\nconst DAY_MS: number = 24 * 60 * 60 * 1000\n\n// Props\nconst props = defineProps<{\n  events: TimelineEvent[]\n  startDate?: string | Date\n  endDate?: string | Date\n  zoomLevel?: number\n  showCurrentTime?: boolean\n  defaultColor?: string\n}>()\n\n// 默认Props值\nconst {\n  startDate = new Date(Date.now() - 30 * DAY_MS),\n  endDate = new Date(Date.now() + 30 * DAY_MS),\n  zoomLevel = 2,\n  showCurrentTime = true,\n  defaultColor = '#4285f4'\n} = props\n\n// Emits\nconst emit = defineEmits<{\n  (e: 'event-click', event: TimelineEvent): void\n}>()\n\n// 响应式状态\nconst currentZoom = ref<number>(zoomLevel)\nconst scrollLeft = ref<number>(0)\nconst viewportWidth = ref<number>(375)\nconst pxPerDay = ref<number>(30)\nconst now = ref<number>(Date.now())\nconst contentHeight = ref<number>(800)\nconst scaleContainer = ref<HTMLElement | null>(null)\nconst contentContainer = ref<HTMLElement | null>(null)\n\n// 计算属性\nconst totalWidth = computed<number>(() => {\n  const days = (new Date(endDate).getTime() - new Date(startDate).getTime()) / DAY_MS\n  return Math.ceil(days * pxPerDay.value)\n})\n\nconst visibleStart = computed<string>(() => {\n  const daysFromStart = scrollLeft.value / pxPerDay.value\n  const date = new Date(new Date(startDate).getTime() + daysFromStart * DAY_MS)\n  return formatDate(date, 'M月D日')\n})\n\nconst visibleEnd = computed<string>(() => {\n  const daysFromStart = (scrollLeft.value + viewportWidth.value) / pxPerDay.value\n  const date = new Date(new Date(startDate).getTime() + daysFromStart * DAY_MS)\n  return formatDate(date, 'M月D日')\n})\n\nconst visibleScales = computed<TimeScale[]>(() => {\n  const scales: TimeScale[] = []\n  const start = new Date(startDate)\n  const end = new Date(endDate)\n  let current = new Date(start)\n  \n  const format = getScaleFormat()\n  const interval = getScaleInterval()\n  \n  while (current.getTime() <= end.getTime()) {\n    const days = (current.getTime() - start.getTime()) / DAY_MS\n    scales.push({\n      position: days * pxPerDay.value,\n      label: formatDate(current, format),\n      time: new Date(current)\n    })\n    \n    // 根据缩放级别增加间隔\n    switch(currentZoom.value) {\n      case 1: current.setDate(current.getDate() + interval); break\n      case 2: current.setDate(current.getDate() + 7 * interval); break\n      case 3: current.setMonth(current.getMonth() + interval); break\n      case 4: current.setFullYear(current.getFullYear() + interval); break\n    }\n  }\n  \n  return scales\n})\n\nconst visibleEvents = computed<TimelineEvent[]>(() => {\n  return props.events.map((event: TimelineEvent) => {\n    const eventDate = new Date(event.time)\n    const days = (eventDate.getTime() - new Date(startDate).getTime()) / DAY_MS\n    return {\n      ...event,\n      position: days * pxPerDay.value\n    }\n  })\n})\n\nconst currentTimePos = computed<number>(() => {\n  const days = (now.value - new Date(startDate).getTime()) / DAY_MS\n  return days * pxPerDay.value\n})\n\n// 方法\nconst updateViewportWidth = (): void => {\n  uni.getSystemInfo({\n    success: (res) => {\n      viewportWidth.value = res.windowWidth\n    }\n  })\n}\n\nconst updateCurrentTime = (): void => {\n  now.value = Date.now()\n}\n\nconst getScaleFormat = (): string => {\n  switch(currentZoom.value) {\n    case 1: return 'D日'\n    case 2: return 'M月D日'\n    case 3: return 'M月'\n    case 4: return 'YYYY年'\n    default: return 'M月D日'\n  }\n}\n\nconst getScaleInterval = (): number => {\n  switch(currentZoom.value) {\n    case 1: return 1\n    case 2: return 1\n    case 3: return 1\n    case 4: return 1\n    default: return 1\n  }\n}\n\nconst formatDate = (date: Date, format: string): string => {\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n  \n  return format\n    .replace('YYYY', year.toString())\n    .replace('MM', month.toString().padStart(2, '0'))\n    .replace('M', month.toString())\n    .replace('DD', day.toString().padStart(2, '0'))\n    .replace('D', day.toString())\n}\n\nconst formatTime = (time: string | Date): string => {\n  return formatDate(new Date(time), 'YYYY年MM月DD日')\n}\n\nconst getEventStyle = (event: TimelineEvent): Record<string, string> => {\n  return {\n    left: `${event.position}px`,\n    top: `${event.top || 0}px`\n  }\n}\n\nconst zoomIn = (): void => {\n  if (currentZoom.value > 1) {\n    currentZoom.value--\n    adjustZoom()\n  }\n}\n\nconst zoomOut = (): void => {\n  if (currentZoom.value < 4) {\n    currentZoom.value++\n    adjustZoom()\n  }\n}\n\nconst adjustZoom = (): void => {\n  switch(currentZoom.value) {\n    case 1: pxPerDay.value = 60; break\n    case 2: pxPerDay.value = 30; break\n    case 3: pxPerDay.value = 10; break\n    case 4: pxPerDay.value = 2; break\n  }\n  \n  // 保持当前可视区域中心不变\n  const centerDate = new Date(\n    new Date(startDate).getTime() + \n    (scrollLeft.value + viewportWidth.value / 2) / pxPerDay.value * DAY_MS\n  )\n  \n  nextTick(() => {\n    const newDays = (centerDate.getTime() - new Date(startDate).getTime()) / DAY_MS\n    scrollLeft.value = newDays * pxPerDay.value - viewportWidth.value / 2\n  })\n}\n\nconst goToToday = (): void => {\n  const days = (Date.now() - new Date(startDate).getTime()) / DAY_MS\n  scrollLeft.value = days * pxPerDay.value - viewportWidth.value / 2\n}\n\nconst handleScaleScroll = (e: UniApp.ScrollViewOnScrollEvent): void => {\n  scrollLeft.value = e.detail.scrollLeft\n  if (contentContainer.value) {\n    contentContainer.value.scrollLeft = e.detail.scrollLeft\n  }\n}\n\nconst handleContentScroll = (e: UniApp.ScrollViewOnScrollEvent): void => {\n  scrollLeft.value = e.detail.scrollLeft\n  if (scaleContainer.value) {\n    scaleContainer.value.scrollLeft = e.detail.scrollLeft\n  }\n}\n\nconst handleEventClick = (event: TimelineEvent): void => {\n  emit('event-click', event)\n}\n\n// 生命周期\nonMounted(() => {\n  updateViewportWidth()\n  updateCurrentTime()\n  \n  const timer = setInterval(() => {\n    now.value = Date.now()\n  }, 60000)\n  \n  onUnmounted(() => {\n    clearInterval(timer)\n  })\n})\n\n// 监听props变化\nwatch(() => props.zoomLevel, (newVal) => {\n  currentZoom.value = newVal\n  adjustZoom()\n})\n\nwatch(() => props.events, () => {\n  contentHeight.value = Math.max(800, props.events.length * 100)\n}, { deep: true })\n</script>\n\n<style scoped>\n/* 样式部分与之前版本保持一致 */\n.xf-timeline-uts {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n.xf-control-bar {\n  padding: 8px 12px;\n  display: flex;\n  align-items: center;\n  background-color: #f5f5f5;\n  border-bottom: 1px solid #e0e0e0;\n}\n\n.xf-control-btn {\n  margin-right: 8px;\n  padding: 4px 12px;\n  font-size: 14px;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\n.xf-time-range {\n  margin-left: auto;\n  font-size: 14px;\n  color: #666;\n}\n\n.xf-time-scale {\n  height: 40px;\n  border-bottom: 1px solid #e0e0e0;\n  background-color: #f9f9f9;\n  white-space: nowrap;\n}\n\n.xf-scale-container {\n  position: relative;\n  height: 100%;\n}\n\n.xf-scale-mark {\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.xf-scale-label {\n  font-size: 12px;\n  color: #666;\n  margin-bottom: 4px;\n}\n\n.xf-scale-line {\n  width: 1px;\n  height: 8px;\n  background-color: #ccc;\n}\n\n.xf-timeline-content {\n  flex: 1;\n  position: relative;\n}\n\n.xf-timeline-inner {\n  position: relative;\n  height: 100%;\n}\n\n.xf-timeline-event {\n  position: absolute;\n  display: flex;\n  padding: 12px 0;\n  width: 200px;\n}\n\n.xf-event-marker {\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  border: 2px solid #fff;\n  box-shadow: 0 0 0 2px currentColor;\n  margin-right: 12px;\n  flex-shrink: 0;\n  margin-top: 4px;\n}\n\n.xf-event-card {\n  background-color: #fff;\n  padding: 10px 14px;\n  border-radius: 6px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.xf-event-title {\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n  display: block;\n  margin-bottom: 4px;\n}\n\n.xf-event-time {\n  font-size: 12px;\n  color: #666;\n  display: block;\n  margin-bottom: 4px;\n}\n\n.xf-event-desc {\n  font-size: 12px;\n  color: #888;\n  display: block;\n}\n\n.xf-current-line {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 2px;\n  background-color: #f44336;\n  z-index: 10;\n}\n</style>","import Component from '/Users/xyhc/Documents/veepai_uniappx/components/TimeLine.uvue'\nwx.createComponent(Component)"],"names":["ref","computed","uni","nextTick","onMounted","onUnmounted","watch"],"mappings":"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"}