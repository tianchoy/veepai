{"version":3,"file":"utils.js","sources":["uni_modules/lime-checkbox/components/l-checkbox-group/utils.uts"],"sourcesContent":["// @ts-nocheck\r\nimport { ComputedRef } from './type';\r\nimport { CheckboxStatus } from '../l-checkbox/type';\r\n// #ifndef UNI-APP-X\r\nimport { computed } from '@/uni_modules/lime-shared/vue';\r\n// #endif\r\n\r\nfunction intersection<T>(...arrays : T[][]): T[] {\r\n\t// 创建一个空数组来存储相交元素\r\n\tconst result : T[] = [];\r\n\t\r\n\tfor (let i = 0; i < arrays[0].length; i++) {\r\n\t\tconst item = arrays[0][i]\r\n\t\t// 检查该元素是否存在于所有其他数组中\r\n\t\tlet isCommon = true;\r\n\t\tfor (let j = 1; j < arrays.length; j++) {\r\n\t\t\tif (!arrays[j].includes(item)) {\r\n\t\t\t\tisCommon = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 如果该元素存在于所有数组中，并且尚未添加到结果数组中，则将其添加到结果数组中\r\n\t\tif (isCommon && !result.includes(item)) {\r\n\t\t\tresult.push(item);\r\n\t\t}\r\n\t}\r\n\t// 返回包含相交元素的结果数组\r\n\treturn result;\r\n}\r\n\r\n// @ts-ignore\r\nexport function setCheckAllStatus(\r\n\tchildren: LCheckboxComponentPublicInstance[],\r\n\tinnerValue: ComputedRef<any[]>,\r\n\tcheckedSet: ComputedRef<Set<any>>\r\n\t): ComputedRef<CheckboxStatus> {\r\n\t\r\n\tconst intersectionLen = computed(()=>{\r\n\t\tconst values:any[] = []\r\n\t\tchildren.forEach(item => {\r\n\t\t\tconst value = item.value ?? item.name;\r\n\t\t\tif(value == null) return\r\n\t\t\tvalues.push(value)\r\n\t\t})\r\n\t\tif (Array.isArray(innerValue.value)) {\r\n\t\t\treturn intersection(innerValue.value, values).length;\r\n\t\t}\r\n\t\treturn 0\r\n\t})\r\n\tconst isAllChecked = computed((): boolean=>{\r\n\t\tif (checkedSet.value.size != children.length - 1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn intersectionLen.value == children.length - 1;\r\n\t})\r\n\tconst isIndeterminate = computed((): boolean=>{\r\n\t\treturn !isAllChecked.value && intersectionLen.value < children.length && intersectionLen.value > 0;\r\n\t})\r\n\treturn computed(():CheckboxStatus => {\r\n\t\tif (isAllChecked.value) return 'checked';\r\n\t\tif (isIndeterminate.value) return 'indeterminate';\r\n\t\treturn 'uncheck';\r\n\t});\r\n}"],"names":["computed"],"mappings":";;AAOA,SAAS,gBAAmB,QAAc;AAEzC,QAAM,SAAe,CAAA;AAErB,WAAS,IAAI,GAAG,IAAI,OAAO,CAAC,EAAE,QAAQ,KAAK;AAC1C,UAAM,OAAO,OAAO,CAAC,EAAE,CAAC;AAExB,QAAI,WAAW;AACf,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACvC,UAAI,CAAC,OAAO,CAAC,EAAE,SAAS,IAAI,GAAG;AAC9B,mBAAW;AACX;AAAA,MACA;AAAA,IACD;AAED,QAAI,YAAY,CAAC,OAAO,SAAS,IAAI,GAAG;AACvC,aAAO,KAAK,IAAI;AAAA,IAChB;AAAA,EACD;AAED,SAAO;AACR;SAGgB,kBACf,UACA,YACA,YAAiC;AAGjC,QAAM,kBAAkBA,cAAAA,SAAS,MAAA;AAChC,UAAM,SAAe,CAAA;AACrB,aAAS,QAAQ,CAAA,OAAI,SAAA;;AACpB,YAAM,SAAQ,KAAA,KAAK,WAAS,QAAA,OAAA,SAAA,KAAA,KAAK;AACjC,UAAG,SAAS;AAAM,eAAM;AACxB,aAAO,KAAK,KAAK;AAAA,IAClB,CAAC;AACD,QAAI,MAAM,QAAQ,WAAW,KAAK,GAAG;AACpC,aAAO,aAAa,WAAW,OAAO,MAAM,EAAE;AAAA,IAC9C;AACD,WAAO;AAAA,EACR,CAAC;AACD,QAAM,eAAeA,cAAAA,SAAS,MAAA;AAC7B,QAAI,WAAW,MAAM,QAAQ,SAAS,SAAS,GAAG;AACjD,aAAO;AAAA,IACP;AACD,WAAO,gBAAgB,SAAS,SAAS,SAAS;AAAA,EACnD,CAAC;AACD,QAAM,kBAAkBA,cAAAA,SAAS,MAAA;AAChC,WAAO,CAAC,aAAa,SAAS,gBAAgB,QAAQ,SAAS,UAAU,gBAAgB,QAAQ;AAAA,EAClG,CAAC;AACD,SAAOA,cAAQ,SAAC,MAAA;AACf,QAAI,aAAa;AAAO,aAAO;AAC/B,QAAI,gBAAgB;AAAO,aAAO;AAClC,WAAO;AAAA,EACR,CAAC;AACF;;"}