{"version":3,"file":"index.js","sources":["uni_modules/lime-shared/unitConvert/index.ts"],"sourcesContent":["// @ts-nocheck\r\nimport { isString } from '../isString'\r\nimport { isNumeric } from '../isNumeric'\r\n\r\n/**\r\n * 单位转换函数，将字符串数字或带有单位的字符串转换为数字\r\n * @param value 要转换的值，可以是字符串数字或带有单位的字符串\r\n * @returns 转换后的数字，如果无法转换则返回0\r\n */\r\n// #ifndef UNI-APP-X && APP\r\nexport function unitConvert(value : string | number | null | undefined, base: number = 0) : number {\r\n\t// 如果是字符串数字\r\n\tif (isNumeric(value)) {\r\n\t\treturn Number(value);\r\n\t}\r\n\t// 如果有单位\r\n\tif (isString(value)) {\r\n\t\tconst reg = /^-?([0-9]+)?([.]{1}[0-9]+){0,1}(em|rpx|px|%)$/g;\r\n\t\tconst results = reg.exec(value);\r\n\t\tif (!value || !results) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tconst unit = results[3];\r\n\t\tconst _value = parseFloat(value);\r\n\t\tif (unit === 'rpx') {\r\n\t\t\treturn uni.upx2px(_value);\r\n\t\t}\r\n\t\tif (unit === 'px') {\r\n\t\t\treturn _value * 1;\r\n\t\t}\r\n\t\tif(unit == '%') {\r\n\t\t\treturn _value / 100 * base\r\n\t\t}\r\n\t\t// 如果是其他单位，可以继续添加对应的转换逻辑\r\n\t}\r\n\treturn 0;\r\n}\r\n// #endif\r\n\r\n\r\n// #ifdef UNI-APP-X && APP\r\nimport { isNumber } from '../isNumber'\r\nexport function unitConvert(value : any | null, base: number = 0) : number {\r\n\tif (isNumber(value)) {\r\n\t\treturn value as number\r\n\t}\r\n\t// 如果是字符串数字\r\n\tif (isNumeric(value)) {\r\n\t\treturn parseFloat(value as string);\r\n\t}\r\n\t// 如果有单位\r\n\tif (isString(value)) {\r\n\t\tconst reg = /^-?([0-9]+)?([.]{1}[0-9]+){0,1}(em|rpx|px|%)$/g;\r\n\t\tconst results = reg.exec(value as string);\r\n\t\tif (results == null) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tconst unit = results[3];\r\n\t\tconst _value = parseFloat(value);\r\n\t\tif (unit == 'rpx') {\r\n\t\t\t// const { windowWidth } = uni.getWindowInfo()\r\n\t\t\t// return windowWidth / 750 * _value;\r\n\t\t\treturn uni.rpx2px(_value)\r\n\t\t}\r\n\t\tif (unit == 'px') {\r\n\t\t\treturn _value;\r\n\t\t}\r\n\t\tif(unit == '%') {\r\n\t\t\treturn _value / 100 * base\r\n\t\t}\r\n\t\t// 如果是其他单位，可以继续添加对应的转换逻辑\r\n\t}\r\n\treturn 0;\r\n}\r\n// #endif\r\n// 示例\r\n// console.log(unitConvert(\"123\")); // 输出: 123 (字符串数字转换为数字)\r\n// console.log(unitConvert(\"3.14em\")); // 输出: 0 (无法识别的单位)\r\n// console.log(unitConvert(\"20rpx\")); // 输出: 根据具体情况而定 (根据单位进行转换)\r\n// console.log(unitConvert(10)); // 输出: 10 (数字不需要转换)"],"names":["isNumeric","isString","uni"],"mappings":";;;;SAUgB,YAAY,OAA4C,OAAe,GAAC;AAEvF,MAAIA,uCAAAA,UAAU,KAAK,GAAG;AACrB,WAAO,OAAO,KAAK;AAAA,EACnB;AAED,MAAIC,sCAAAA,SAAS,KAAK,GAAG;AACpB,UAAM,MAAM;AACZ,UAAM,UAAU,IAAI,KAAK,KAAK;AAC9B,QAAI,CAAC,SAAS,CAAC,SAAS;AACvB,aAAO;AAAA,IACP;AACD,UAAM,OAAO,QAAQ,CAAC;AACtB,UAAM,SAAS,WAAW,KAAK;AAC/B,QAAI,SAAS,OAAO;AACnB,aAAOC,cAAG,MAAC,OAAO,MAAM;AAAA,IACxB;AACD,QAAI,SAAS,MAAM;AAClB,aAAO,SAAS;AAAA,IAChB;AACD,QAAG,QAAQ,KAAK;AACf,aAAO,SAAS,MAAM;AAAA,IACtB;AAAA,EAED;AACD,SAAO;AACR;;"}