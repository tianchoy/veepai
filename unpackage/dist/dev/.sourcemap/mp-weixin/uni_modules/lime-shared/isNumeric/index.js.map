{"version":3,"file":"index.js","sources":["uni_modules/lime-shared/isNumeric/index.ts"],"sourcesContent":["// @ts-nocheck\r\n\r\n/**\r\n * 检查一个值是否为数字类型或表示数字的字符串\r\n * @param value 要检查的值，可以是 string 类型或 number 类型\r\n * @returns 如果值是数字类型或表示数字的字符串，则返回 true；否则返回 false\r\n */\r\n\r\n// #ifndef UNI-APP-X && APP\r\nexport function isNumeric(value: string | number | undefined | null): boolean {\r\n  return /^(-)?\\d+(\\.\\d+)?$/.test(value);\r\n}\r\n// #endif\r\n\r\n\r\n// #ifdef UNI-APP-X && APP\r\nimport {isNumber} from '../isNumber';\r\nimport {isString} from '../isString';\r\nexport function isNumeric(value : any|null) : boolean {\r\n\tif(value == null) {\r\n\t\treturn false\r\n\t}\r\n\tif(isNumber(value)) {\r\n\t\treturn true\r\n\t} else if(isString(value)) {\r\n\t\t// const regex = \"-?\\\\d+(\\\\.\\\\d+)?\".toRegex()\r\n\t\tconst regex = new RegExp(\"^(-)?\\\\d+(\\\\.\\\\d+)?$\")\r\n\t\treturn  regex.test(value as string) //regex.matches(value as string) \r\n\t}\r\n\treturn false\r\n\t// return /^(-)?\\d+(\\.\\d+)?$/.test(value);\r\n}\r\n// #endif\r\n"],"names":[],"mappings":";AASM,SAAU,UAAU,OAAyC;AACjE,SAAO,oBAAoB,KAAK,KAAK;AACvC;;"}