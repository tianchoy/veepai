{"version":3,"file":"utils.js","sources":["uni_modules/lime-date-strip/components/l-date-strip/utils.uts"],"sourcesContent":["// @ts-nocheck\r\nimport { WeekRange, DateType } from './type';\r\n\r\n\r\n/**\r\n * 获取指定日期所在周的日期范围。\r\n * @param {Date} date - 指定日期。\r\n * @param {number} firstDayOfWeek - 一周的第一天，0 表示周日，1 表示周一，以此类推。\r\n * @returns {WeekRange} 返回一个包含周起始和结束日期的对象。\r\n */\r\n\r\nexport function getWeekRange(date : Date, firstDayOfWeek : number) : WeekRange {\r\n\tconst start = new Date(date.getTime());\r\n\tconst dayOffset = (date.getDay() - firstDayOfWeek + 7) % 7;\r\n\tstart.setDate(start.getDate() - dayOffset);\r\n\r\n\tconst end = new Date(start.getTime());\r\n\tend.setDate(end.getDate() + 6);\r\n\treturn { start, end } as WeekRange\r\n};\r\n\r\n/**\r\n * 向指定日期添加天数。\r\n * @param {Date} date - 基础日期。\r\n * @param {number} days - 要添加的天数，可以是正数或负数。\r\n * @returns {Date} 返回一个新的日期对象，该对象是基础日期加上指定天数后的结果。\r\n */\r\nexport function addDays(date : Date, days : number) : Date {\r\n\tconst result = new Date(date.getTime());\r\n\tresult.setDate(result.getDate() + days);\r\n\treturn result;\r\n};\r\n\r\n\r\nexport function addWeeks(date : Date, weeks : number) : Date {\r\n\tconst result = new Date(date.getTime());\r\n\tresult.setDate(result.getDate() + weeks * 7);\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * 判断两个日期是否表示同一天（忽略时间部分）。\r\n *\r\n * @param date1 - 第一个日期。\r\n * @param date2 - 第二个日期。\r\n * @returns 如果两个日期是同一天，返回 true；否则返回 false。\r\n */\r\nfunction isSameDay(date1 : Date, date2 : Date) : boolean {\r\n\treturn (\r\n\t\tdate1.getFullYear() == date2.getFullYear() &&\r\n\t\tdate1.getMonth() == date2.getMonth() &&\r\n\t\tdate1.getDate() == date2.getDate()\r\n\t);\r\n}\r\nexport function calcType(date : Date, minDate : Date, maxDate : Date, selectedDate : Date | null) : DateType {\r\n\t// 检查日期是否早于 minDate 或晚于 maxDate\r\n\tif (date.getTime() < minDate.getTime() || date.getTime() > maxDate.getTime()) {\r\n\t    return 'disabled';\r\n\t}\r\n\t// 如果 selectedDate 不为 null，检查日期是否等于 selectedDate\r\n\tif (selectedDate != null && isSameDay(date, selectedDate)) {\r\n\t\treturn 'selected';\r\n\t}\r\n\treturn ''\r\n}\r\n\r\n\r\nexport function daysBetween(date1: Date, date2: Date): number {\n  // 将两个日期转换为毫秒\n  const diffInMilliseconds = Math.abs(date2.getTime() - date1.getTime());\n  return Math.floor(diffInMilliseconds / (1000 * 3600 * 24));\n}"],"names":[],"mappings":";AAWgB,SAAA,aAAa,MAAa,gBAAuB;AAChE,QAAM,QAAQ,IAAI,KAAK,KAAK,QAAS,CAAA;AACrC,QAAM,aAAa,KAAK,OAAQ,IAAG,iBAAiB,KAAK;AACzD,QAAM,QAAQ,MAAM,QAAS,IAAG,SAAS;AAEzC,QAAM,MAAM,IAAI,KAAK,MAAM,QAAS,CAAA;AACpC,MAAI,QAAQ,IAAI,QAAS,IAAG,CAAC;AAC7B,SAAO,EAAE,OAAO;AACjB;AAQgB,SAAA,QAAQ,MAAa,MAAa;AACjD,QAAM,SAAS,IAAI,KAAK,KAAK,QAAS,CAAA;AACtC,SAAO,QAAQ,OAAO,QAAS,IAAG,IAAI;AACtC,SAAO;AACR;AAGgB,SAAA,SAAS,MAAa,OAAc;AACnD,QAAM,SAAS,IAAI,KAAK,KAAK,QAAS,CAAA;AACtC,SAAO,QAAQ,OAAO,QAAO,IAAK,QAAQ,CAAC;AAC3C,SAAO;AACR;AASA,SAAS,UAAU,OAAc,OAAY;AAC5C,SACC,MAAM,iBAAiB,MAAM,YAAa,KAC1C,MAAM,SAAQ,KAAM,MAAM,SAAU,KACpC,MAAM,QAAO,KAAM,MAAM,QAAO;AAElC;AACM,SAAU,SAAS,MAAa,SAAgB,SAAgB,eAA0B,MAAA;AAE/F,MAAI,KAAK,YAAY,QAAQ,QAAO,KAAM,KAAK,QAAS,IAAG,QAAQ,WAAW;AAC1E,WAAO;AAAA,EACV;AAED,MAAI,gBAAgB,QAAQ,UAAU,MAAM,YAAY,GAAG;AAC1D,WAAO;AAAA,EACP;AACD,SAAO;AACR;AAGgB,SAAA,YAAY,OAAa,OAAW;AAElD,QAAM,qBAAqB,KAAK,IAAI,MAAM,YAAY,MAAM,QAAO,CAAE;AACrE,SAAO,KAAK,MAAM,sBAAsB,MAAO,OAAO,GAAG;AAC3D;;;;;;"}