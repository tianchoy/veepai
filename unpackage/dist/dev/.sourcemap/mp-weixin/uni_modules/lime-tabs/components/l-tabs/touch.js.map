{"version":3,"file":"touch.js","sources":["uni_modules/lime-tabs/components/l-tabs/touch.ts"],"sourcesContent":["// @ts-nocheck\r\n// #ifndef UNI-APP-X\nimport {type Ref, ref} from '@/uni_modules/lime-shared/vue'\ntype UniTouchEvent = TouchEvent\n// #endif\n\ntype Direction = '' | 'vertical' | 'horizontal';\n\nfunction getDirection(x : number, y : number) : Direction {\n\tif (x > y) {\n\t\treturn 'horizontal';\n\t}\n\tif (y > x) {\n\t\treturn 'vertical';\n\t}\n\treturn '';\n}\n\ntype TouchEventHandler = (event : UniTouchEvent) => void\ntype BooleanFunction = () => boolean;\ntype UseTouchResult = {\n\tstart : TouchEventHandler,\n\tmove : TouchEventHandler,\n\tstartX : Ref<number>,\n\tstartY : Ref<number>,\n\tdeltaX : Ref<number>,\n\tdeltaY : Ref<number>,\n\toffsetX : Ref<number>,\n\toffsetY : Ref<number>,\n\tdirection : Ref<Direction>,\n\tisVertical : BooleanFunction,\n\tisHorizontal : BooleanFunction,\n\tisTap : Ref<Boolean>,\n}\nexport function useTouch() : UseTouchResult {\n\tconst startX = ref<number>(0);\n\tconst startY = ref<number>(0);\n\tconst deltaX = ref<number>(0);\n\tconst deltaY = ref<number>(0);\n\tconst offsetX = ref<number>(0);\n\tconst offsetY = ref<number>(0);\n\tconst direction = ref<Direction>('');\n\tconst isTap = ref(true);\n\n\tconst isVertical = () : boolean => direction.value === 'vertical';\n\tconst isHorizontal = () : boolean => direction.value === 'horizontal';\n\n\tconst reset = () => {\n\t\tdeltaX.value = 0;\n\t\tdeltaY.value = 0;\n\t\toffsetX.value = 0;\n\t\toffsetY.value = 0;\n\t\tdirection.value = '';\n\t\tisTap.value = true;\n\t};\n\n\tconst start = (event : UniTouchEvent) => {\n\t\treset();\n\t\tstartX.value = event.touches[0].clientX;\n\t\tstartY.value = event.touches[0].clientY;\n\t}\n\tconst move = (event : UniTouchEvent) => {\n\t\tconst touch = event.touches[0];\n\t\t// safari back will set clientX to negative number\n\t\tdeltaX.value = (touch.clientX < 0 ? 0 : touch.clientX) - startX.value;\n\t\tdeltaY.value = touch.clientY - startY.value;\n\t\toffsetX.value = Math.abs(deltaX.value);\n\t\toffsetY.value = Math.abs(deltaY.value);\n\n\t\t// lock direction when distance is greater than a certain value\n\t\tconst LOCK_DIRECTION_DISTANCE = 10;\n\t\tconst TAP_OFFSET = 5;\n\t\tif (\n\t\t\tdirection.value == '' ||\n\t\t\t(offsetX.value < LOCK_DIRECTION_DISTANCE &&\n\t\t\t\toffsetY.value < LOCK_DIRECTION_DISTANCE)\n\t\t) {\n\t\t\tdirection.value = getDirection(offsetX.value, offsetY.value);\n\t\t}\n\n\t\tif (\n\t\t\tisTap.value &&\n\t\t\t(offsetX.value > TAP_OFFSET || offsetY.value > TAP_OFFSET)\n\t\t) {\n\t\t\tisTap.value = false;\n\t\t}\n\t}\n\treturn {\n\t\tstart,\n\t\tmove,\n\t\tstartX,\n\t\tstartY,\n\t\tdeltaX,\n\t\tdeltaY,\n\t\toffsetX,\n\t\toffsetY,\n\t\tdirection,\n\t\tisVertical,\n\t\tisHorizontal,\n\t\tisTap,\n\t} as UseTouchResult\n}"],"names":["ref"],"mappings":";;AAQA,SAAS,aAAa,GAAY,GAAU;AAC3C,MAAI,IAAI,GAAG;AACV,WAAO;AAAA,EACP;AACD,MAAI,IAAI,GAAG;AACV,WAAO;AAAA,EACP;AACD,SAAO;AACR;SAkBgB,WAAQ;AACvB,QAAM,SAASA,kBAAY,CAAC;AAC5B,QAAM,SAASA,kBAAY,CAAC;AAC5B,QAAM,SAASA,kBAAY,CAAC;AAC5B,QAAM,SAASA,kBAAY,CAAC;AAC5B,QAAM,UAAUA,kBAAY,CAAC;AAC7B,QAAM,UAAUA,kBAAY,CAAC;AAC7B,QAAM,YAAYA,kBAAe,EAAE;AACnC,QAAM,QAAQA,kBAAI,IAAI;AAEtB,QAAM,aAAa,MAAA;AAAgB,WAAA,UAAU,UAAU;AAAA;AACvD,QAAM,eAAe,MAAA;AAAgB,WAAA,UAAU,UAAU;AAAA;AAEzD,QAAM,QAAQ,MAAA;AACb,WAAO,QAAQ;AACf,WAAO,QAAQ;AACf,YAAQ,QAAQ;AAChB,YAAQ,QAAQ;AAChB,cAAU,QAAQ;AAClB,UAAM,QAAQ;AAAA,EACf;AAEA,QAAM,QAAQ,CAAC,UAAqB;AACnC;AACA,WAAO,QAAQ,MAAM,QAAQ,CAAC,EAAE;AAChC,WAAO,QAAQ,MAAM,QAAQ,CAAC,EAAE;AAAA,EACjC;AACA,QAAM,OAAO,CAAC,UAAqB;AAClC,UAAM,QAAQ,MAAM,QAAQ,CAAC;AAE7B,WAAO,SAAS,MAAM,UAAU,IAAI,IAAI,MAAM,WAAW,OAAO;AAChE,WAAO,QAAQ,MAAM,UAAU,OAAO;AACtC,YAAQ,QAAQ,KAAK,IAAI,OAAO,KAAK;AACrC,YAAQ,QAAQ,KAAK,IAAI,OAAO,KAAK;AAGrC,UAAM,0BAA0B;AAChC,UAAM,aAAa;AACnB,QACC,UAAU,SAAS,MAClB,QAAQ,QAAQ,2BAChB,QAAQ,QAAQ,yBAChB;AACD,gBAAU,QAAQ,aAAa,QAAQ,OAAO,QAAQ,KAAK;AAAA,IAC3D;AAED,QACC,MAAM,UACL,QAAQ,QAAQ,cAAc,QAAQ,QAAQ,aAC9C;AACD,YAAM,QAAQ;AAAA,IACd;AAAA,EACF;AACA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEF;;"}