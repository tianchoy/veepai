{"version":3,"file":"utils.js","sources":["uni_modules/lime-tabs/components/l-tabs/utils.ts"],"sourcesContent":["// @ts-nocheck\r\n/**\r\n * 计算偏移\r\n * @param {number} containerWidth 容器宽度\r\n * @param {number} targetLeft 当前元素left值\r\n * @param {number} targetWidth 当前元素宽度\r\n * @param {number} offset 上一次 scroll-view left值\r\n * @return \r\n */\r\nexport function calcScrollOffset(containerWidth : number, targetLeft : number, targetWidth : number, offset : number) : number {\r\n\treturn offset + targetLeft - (1 / 2) * containerWidth + targetWidth / 2;\r\n}\r\n\r\n/**\n * 根据提供的移动距离和基数进行缓动处理。\n * 如果移动距离的绝对值超过最大阈值，则应用缓动效果。\n *\n * @param {number} moveX - 水平移动的距离。\n * @param {number} base - 应用于缓动效果的基数。\n * @returns {number} 缓动处理后的移动距离。\n */\r\nexport function ease(moveX : number, base : number) : number{\r\n\tconst absDistance = Math.abs(moveX);\r\n\tconst max = 50\r\n\tif (absDistance > max) {\r\n\t\treturn (max + (absDistance - max) * 0.2) * base;\r\n\t}\r\n\treturn moveX;\r\n};"],"names":[],"mappings":";AASM,SAAU,iBAAiB,gBAAyB,YAAqB,aAAsB,QAAe;AACnH,SAAO,SAAS,aAAc,IAAI,IAAK,iBAAiB,cAAc;AACvE;AAUgB,SAAA,KAAK,OAAgB,MAAa;AACjD,QAAM,cAAc,KAAK,IAAI,KAAK;AAClC,QAAM,MAAM;AACZ,MAAI,cAAc,KAAK;AACtB,YAAQ,OAAO,cAAc,OAAO,OAAO;AAAA,EAC3C;AACD,SAAO;AACR;;;"}