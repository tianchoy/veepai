{"version":3,"file":"utils.js","sources":["uni_modules/lime-dayuts/common/utils.ts"],"sourcesContent":["// @ts-nocheck\r\nimport { Dayuts } from './index'\r\nimport { M, Y, W, D, DATE, H, MIN, S, MS, Q } from './constant'\r\nimport {DayutsUnit} from '../utssdk/interface'\r\n/**\r\n * 用指定字符串填充目标字符串的开头，以达到指定的总长度。\r\n *\r\n * @param {string} string - 需要填充的目标字符串。\r\n * @param {number} length - 填充后的总长度。\r\n * @param {string} pad - 用于填充的字符串。\r\n * @returns {string} 填充后的字符串。\r\n */\r\nfunction padStart(string : string, length : number, pad : string) : string {\r\n\tconst str = string//`${string}`\r\n\tif (str.length >= length) return str\r\n\treturn str.padStart(length, pad) //`${Array((length + 1) - string.length).join(pad)}${string}`\r\n}\r\nexport {\r\n\tpadStart\r\n}\r\nfunction padZoneStr(instance : Dayuts) : string {\r\n\tconst negMinutes = -instance.utcOffset()\r\n\tconst minutes = Math.abs(negMinutes)\r\n\tconst hourOffset = Math.floor(minutes / 60)\r\n\tconst minuteOffset = minutes % 60\r\n\treturn `${negMinutes <= 0 ? '+' : '-'}${padStart(hourOffset.toString(), 2, '0')}:${padStart(minuteOffset.toString(), 2, '0')}`\r\n}\r\nexport {\r\n\tpadZoneStr\r\n}\r\n\r\n// export function isNull(s): boolean{\r\n// \treturn s == null\r\n// }\r\n\r\nexport function isNumber(value : any | null) : boolean {\r\n\t// #ifdef APP-ANDROID\r\n\treturn ['Byte', 'UByte', 'Short', 'UShort', 'Int', 'UInt', 'Long', 'ULong', 'Float', 'Double', 'number'].includes(typeof value)\r\n\t// #endif\r\n\t// #ifdef APP-IOS\r\n\treturn ['Int8', 'UInt8', 'Int16', 'UInt16', 'Int32', 'UInt32', 'Int64', 'UInt64', 'Int', 'UInt', 'Float', 'Float16', 'Float32', 'Float64', 'Double', 'number'].includes(typeof value)\r\n\t// #endif\r\n\t// #ifndef APP-ANDROID || APP-IOS\r\n\treturn typeof value === 'number' && !isNaN(value);\r\n\t// #endif\r\n}\r\n\r\n\r\n\r\n/**\r\n * 将给定的时间单位转换为标准格式。\r\n *\r\n * @param {string} u - 要转换的时间单位。\r\n * @returns {string} 返回转换后的时间单位。\r\n */\r\nexport function prettyUnit(u : string) : DayutsUnit {\r\n\tconst special = new Map<string, string>([\r\n\t\t['M', M],\r\n\t\t['y', Y],\r\n\t\t['w', W],\r\n\t\t['d', D],\r\n\t\t['D', DATE],\r\n\t\t['h', H],\r\n\t\t['m', MIN],\r\n\t\t['s', S],\r\n\t\t['ms', MS],\r\n\t\t['Q', Q]\r\n\t])\r\n\treturn (special.get(u) ?? `${u}`.toLowerCase().replace(/s$/, '')) as DayutsUnit\r\n}\r\n\r\n\r\n/**\r\n * 计算两个日期之间的月份差值\r\n * @param {Dayjs} a - 第一个日期\r\n * @param {Dayjs} b - 第二个日期\r\n * @returns {number} 返回两个日期之间的月份差值\r\n */\r\nexport function monthDiff(a : Dayuts, b : Dayuts) : number {\r\n\t// 该函数来自 moment.js，以保持相同的结果\r\n\tif (a.date() < b.date()) return -monthDiff(b, a)\r\n\tconst wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month())\r\n\tconst anchor = a.clone().add(wholeMonthDiff, M).valueOf()\r\n\tconst c = b.valueOf() - anchor < 0\r\n\tconst anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), M).valueOf()\r\n\t// return +(-(wholeMonthDiff + ((b.valueOf() - anchor) / (c ? (anchor - anchor2) :\r\n\t// \t(anchor2 - anchor)))) || 0)\r\n\t\r\n\tconst decimalMonthDiff = (b.valueOf() - anchor) / (c ? (anchor - anchor2) : (anchor2 - anchor));\r\n\tconst result = wholeMonthDiff + decimalMonthDiff;\r\n\tconst negatedResult = -result;\r\n\tconst absResult = +negatedResult;\r\n\tconst finalResult = !isNaN(absResult) ? absResult : 0;\r\n\treturn finalResult;\r\n}\r\n\r\n\r\n/**\r\n * 返回向下取整的绝对值\r\n * @param {number} n - 输入的数字\r\n * @returns {number} 返回向下取整的绝对值\r\n */\r\nexport function absFloor(n : number):number {\r\n\t// return (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\r\n\treturn (n < 0 ? Math.max(Math.ceil(n), 0) : Math.floor(n))\r\n}"],"names":["M","Y","W","D","DATE","H","MIN","S","MS","Q"],"mappings":";;;;AAYA,SAAS,SAAS,QAAiB,QAAiB,KAAY;AAC/D,QAAM,MAAM;AACZ,MAAI,IAAI,UAAU;AAAQ,WAAO;AACjC,SAAO,IAAI,SAAS,QAAQ,GAAG;AAChC;AAIA,SAAS,WAAW,UAAiB;AACpC,QAAM,aAAa,CAAC,SAAS;AAC7B,QAAM,UAAU,KAAK,IAAI,UAAU;AACnC,QAAM,aAAa,KAAK,MAAM,UAAU,EAAE;AAC1C,QAAM,eAAe,UAAU;AAC/B,SAAO,GAAG,cAAc,IAAI,MAAM,GAAG,GAAG,SAAS,WAAW,SAAU,GAAE,GAAG,GAAG,CAAC,IAAI,SAAS,aAAa,SAAQ,GAAI,GAAG,GAAG,CAAC;AAC7H;AASM,SAAU,SAAS,OAAkB;AAQ1C,SAAO,OAAO,UAAU,YAAY,CAAC,MAAM,KAAK;AAEjD;AAUM,SAAU,WAAW,GAAU;;AACpC,QAAM,UAAU,oBAAI,IAAoB;AAAA,IACvC,CAAC,KAAKA,uCAAAA,CAAC;AAAA,IACP,CAAC,KAAKC,uCAAAA,CAAC;AAAA,IACP,CAAC,KAAKC,uCAAAA,CAAC;AAAA,IACP,CAAC,KAAKC,uCAAAA,CAAC;AAAA,IACP,CAAC,KAAKC,uCAAAA,IAAI;AAAA,IACV,CAAC,KAAKC,uCAAAA,CAAC;AAAA,IACP,CAAC,KAAKC,uCAAAA,GAAG;AAAA,IACT,CAAC,KAAKC,uCAAAA,CAAC;AAAA,IACP,CAAC,MAAMC,uCAAAA,EAAE;AAAA,IACT,CAAC,KAAKC,uCAAAA,CAAC;AAAA,EACP,CAAA;AACD,eAAQ,QAAQ,IAAI,CAAC,OAAC,QAAA,OAAA,SAAA,KAAI,GAAG,CAAC,GAAG,YAAa,EAAC,QAAQ,MAAM,EAAE;AAChE;AASgB,SAAA,UAAU,GAAY,GAAU;AAE/C,MAAI,EAAE,SAAS,EAAE,KAAM;AAAE,WAAO,CAAC,UAAU,GAAG,CAAC;AAC/C,QAAM,kBAAmB,EAAE,KAAI,IAAK,EAAE,KAAM,KAAI,MAAO,EAAE,MAAK,IAAK,EAAE,MAAO;AAC5E,QAAM,SAAS,EAAE,MAAO,EAAC,IAAI,gBAAgBT,uCAAAA,CAAC,EAAE;AAChD,QAAM,IAAI,EAAE,QAAO,IAAK,SAAS;AACjC,QAAM,UAAU,EAAE,MAAO,EAAC,IAAI,kBAAkB,IAAI,KAAK,IAAIA,uCAAAA,CAAC,EAAE,QAAO;AAIvE,QAAM,oBAAoB,EAAE,QAAS,IAAG,WAAW,IAAK,SAAS,UAAY,UAAU;AACvF,QAAM,SAAS,iBAAiB;AAChC,QAAM,gBAAgB,CAAC;AACvB,QAAM,YAAY,CAAC;AACnB,QAAM,cAAc,CAAC,MAAM,SAAS,IAAI,YAAY;AACpD,SAAO;AACR;AAQM,SAAU,SAAS,GAAU;AAElC,SAAQ,IAAI,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC;AACzD;;;;;;;"}