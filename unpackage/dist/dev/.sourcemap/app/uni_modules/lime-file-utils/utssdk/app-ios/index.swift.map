{"version":3,"sources":["uni_modules/lime-file-utils/utssdk/app-ios/index.uts","uni_modules/lime-file-utils/utssdk/interface.uts"],"sourcesContent":["import { UTSiOS } from \"DCloudUTSFoundation\"\nimport { URL, FileManager, NSData, Data } from 'Foundation';\nimport { UTTypeCreatePreferredIdentifierForTag, kUTTagClassFilenameExtension, UTTypeCopyPreferredTagWithClass, kUTTagClassMIMEType } from \"MobileCoreServices\"\nimport { ProcessFileOptions, NullableString } from '../interface'\nimport { Bool } from 'Swift';\n\n\nexport function getResourcePath(filePath : string) : string {\n\tlet path = filePath;\n\tif (path.startsWith(\"http\") || path.startsWith(\"<svg\") || path.startsWith(\"data:image/\")) {\n\t\treturn path\n\t}\n\tif (path.startsWith(\"file://\")) {\n\t\tpath = path.substring(7) //path.replace(\"file://\", \"\")\n\t} else if (path.startsWith(\"unifile://\")) {\n\t\tpath = UTSiOS.convert2AbsFullPath(filePath);\n\t} else if (!path.startsWith(\"/var/\")) {\n\t\tpath = UTSiOS.getResourcePath(filePath);\n\t}\n\treturn path\n}\n\n/**\n * \n */\nexport function checkExistence(filePath : string):boolean[] {\n\tlet path = getResourcePath(filePath)\n\tlet isDirectory:ObjCBool = false\n\tconst exists = FileManager.default.fileExists(atPath = path, isDirectory = UTSiOS.getPointer(isDirectory))\n\treturn [exists,isDirectory.boolValue]\n}\n\nexport function isFile(filePath : string):boolean {\n\tconst result = checkExistence(filePath);\n\treturn result[0] && !result[1]\n}\n\nexport function isExists(filePath : string):boolean {\n\tconst result = checkExistence(filePath);\n\treturn result[0]\n}\n\nexport function isDirectory(filePath : string):boolean {\n\tconst result = checkExistence(filePath);\n\treturn result[0] && result[1]\n}\n\n\nfunction getMimeType(filePath : string) : NullableString {\n\tlet path = getResourcePath(filePath)\n\tif(!FileManager.default.fileExists(atPath = path)) return null\n\tconst pathExtension = new URL(fileURLWithPath = path).pathExtension;\n\tconst mimeType = UTTypeCreatePreferredIdentifierForTag(kUTTagClassFilenameExtension, pathExtension as CFString, null)?.takeRetainedValue()\n\tif(mimeType == null) return null\n\tconst mimeTypeString = UTTypeCopyPreferredTagWithClass(mimeType!, kUTTagClassMIMEType)?.takeRetainedValue();\n\tif(mimeTypeString == null) return null\n\treturn mimeTypeString as string\n}\n\nexport function fileToBase64(filePath : string) : NullableString {\n\tlet path = getResourcePath(filePath)\n\tif(!FileManager.default.fileExists(atPath = path)) return null;\n\tconst fileData = FileManager.default.contents(atPath = path);\n\tif(fileData == null) return null;\n\treturn fileData!.base64EncodedString(options = NSData.Base64EncodingOptions.lineLength64Characters)//.replace(/\\s+/g,'')\n}\n\nexport function fileToDataURL(filePath : string) : NullableString {\n\tconst base64 = fileToBase64(filePath)\n\tconst mimeType = getMimeType(filePath)\n\tif(base64 == null || mimeType == null) return null\n\treturn (\"data:\" + mimeType! + \";base64,\" + base64!)//.replace(/\\s+/g,'');\n}\n\nfunction getFileExtensionFromDataURL(dataURL : string) : string {\n\tconst commaIndex = dataURL.indexOf(\",\");\n\tconst mimeType = dataURL.substring(0, commaIndex).replace(\"data:\", \"\").replace(\";base64\", \"\");\n\tconst mimeTypeParts = mimeType.split(\"/\");\n\treturn mimeTypeParts[1];\n}\n\n\nexport function dataURLToFile(dataURL : string, filename : NullableString = null) : NullableString {\n\n\tconst commaIndex = dataURL.indexOf(\",\");\n\tconst base64 = dataURL.substring(commaIndex + 1);\n\tconst data = new Data(base64Encoded = base64);\n\n\tconst dataPath = UTSiOS.getDataPath();\n\n\n\n\n\tconst name = filename ?? `${Date.now()}.${getFileExtensionFromDataURL(dataURL)}`;\n\tif(data == null) return null\n\t\n\tlet temporaryDirectoryURL = new URL(fileURLWithPath = dataPath);\n\tlet fileURL = temporaryDirectoryURL.appendingPathComponent(name);\n\ttry{\n\t\tUTSiOS.try(data!.write(to = fileURL))\n\t\treturn `${dataPath}/${name}`\n\t}catch(e){\n\t\treturn null\n\t}\n}\n\n\n\nexport function processFile(options: ProcessFileOptions){\n\tif(options.type == 'toBase64'){\n\t\tconst res = fileToBase64(options.path)\n\t\tconst err = 'fileToBase64: 解析失败'\n\t\tif(res != null){\n\t\t\toptions.success?.(res!)\n\t\t\toptions.complete?.(res!)\n\t\t} else {\n\t\t\toptions.complete?.(err)\n\t\t\toptions.fail?.(err)\n\t\t}\n\t} else if(options.type == 'toDataURL'){\n\t\tconst res = fileToDataURL(options.path)\n\t\tconst err = 'fileToDataURL: 解析失败'\n\t\tif(res != null){\n\t\t\toptions.success?.(res!)\n\t\t\toptions.complete?.(res!)\n\t\t} else {\n\t\t\toptions.complete?.(err)\n\t\t\toptions.fail?.(err)\n\t\t}\n\t} else if(options.type == 'toFile'){\n\t\tconst res = dataURLToFile(options.path, options.filename)\n\t\tconst err = 'dataURLToFile: 解析失败'\n\t\tif(res != null){\n\t\t\toptions.success?.(res!)\n\t\t\toptions.complete?.(res!)\n\t\t} else {\n\t\t\toptions.complete?.(err)\n\t\t\toptions.fail?.(err)\n\t\t}\n\t}\n}","// @ts-nocheck\nexport type NullableString = string | null\nexport type ConversionType = 'toBase64' | 'toDataURL' | 'toFile'\nexport type ProcessFileOptions = {\n  type : ConversionType\n  path: string\n  filename?: string\n  success ?: (res : string) => void\n  fail ?: (res : any) => void\n  complete ?: (res : any) => void\n}\n\n\n\n/**\n * 错误码\n * 根据uni错误码规范要求，建议错误码以90开头，以下是错误码示例：\n * - 9010001 错误信息1\n * - 9010002 错误信息2\n */\nexport type ProcessFileErrorCode = 9010001 | 9010002;\n/**\n * myApi 的错误回调参数\n */\nexport interface ProcessFileFail extends IUniError {\n  errCode : ProcessFileErrorCode\n};\n"],"names":[],"mappings":"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"}