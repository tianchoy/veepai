{"version":3,"sources":["uni_modules/lime-file-utils/utssdk/app-android/index.uts","uni_modules/lime-file-utils/utssdk/interface.uts"],"sourcesContent":["import Base64 from \"android.util.Base64\";\nimport MimeTypeMap from \"android.webkit.MimeTypeMap\";\nimport ByteArrayOutputStream from 'java.io.ByteArrayOutputStream';\n\nimport File from \"java.io.File\";\nimport FileInputStream from \"java.io.FileInputStream\";\nimport FileOutputStream from \"java.io.FileOutputStream\";\nimport InputStream from 'java.io.InputStream';\n\n// import IOException from \"java.io.IOException\";\nimport { ProcessFileOptions, NullableString } from '../interface'\ntype NullByteArray = ByteArray | null\n\nfunction inputStreamToArray(inputStream : InputStream) : NullByteArray {\n\ttry {\n\t\tlet bos : ByteArrayOutputStream = new ByteArrayOutputStream()\n\t\tlet bytes : ByteArray = new ByteArray(1024)\n\n\t\tdo {\n\t\t\tlet length = inputStream.read(bytes)\n\t\t\tif (length != -1) {\n\t\t\t\tbos.write(bytes, 0, length)\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t} while (true)\n\t\tbos.close()\n\t\treturn bos.toByteArray()\n\t} catch (e : Throwable) {\n\t\treturn null;\n\t}\n}\n\nfunction getMimeType(filePath : string) : NullableString {\n\tconst extension = MimeTypeMap.getFileExtensionFromUrl(filePath);\n\tif (extension == null) return null\n\treturn MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);\n}\n\nexport function getResourcePath(path : string) : string | null {\n\tlet uri = path\n\tif (uri.startsWith(\"http\") || uri.startsWith(\"<svg\") || uri.startsWith(\"data:image/\")) {\n\t\treturn uri\n\t}\n\tif (uri.startsWith(\"file://\")) {\n\t\turi = uri.substring(\"file://\".length)\n\t} else if (uri.startsWith(\"unifile://\")) {\n\t\turi = UTSAndroid.convert2AbsFullPath(uri)\n\t} else {\n\t\turi = UTSAndroid.convert2AbsFullPath(uri)\n\t\tif (uri.startsWith(\"/android_asset/\")) {\n\t\t\ttry {\n\t\t\t\tconst context = UTSAndroid.getUniActivity()!;\n\t\t\t\tconst inputStream = context.getResources()!.getAssets().open(path.replace('/android_asset/', ''))\n\t\t\t\tinputStream.close();\n\t\t\t\treturn uri\n\t\t\t} catch (e) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\tconst file = new File(uri)\n\tif (file.exists()) {\n\t\treturn uri\n\t}\n\treturn null\n}\n\n\n/**\n * 检查路径存在性及类型 (Android 实现)\n * @param path 要检查的完整路径（支持内部存储和外部存储路径）\n * @return Pair<是否存在, 是否是目录>\n */\nexport function checkExistence(filePath : string):boolean[] {\n\tconst path = getResourcePath(filePath)\n\tif(path == null) return [false, false]\n\tconst file = new File(path)\n\tconst exists = file.exists()\n\t\n\tif(exists) {\n\t\treturn [true, file.isDirectory]\n\t} else {\n\t\treturn [false, false]\n\t}\n}\n\n/**\n * 检查路径是否存在\n * @param path 要检查的完整路径\n */\nexport function isExists(filePath : string):boolean {\n\tconst result = checkExistence(filePath);\n\treturn result[0]\n}\n\n/**\n * 检查路径是否是存在的目录\n * @param path 要检查的完整路径\n */\nexport function isDirectory(filePath : string):boolean {\n\tconst result = checkExistence(filePath);\n\treturn result[0] && result[1]\n}\n\n/**\n * 检查指定路径是否为存在的文件\n * @param path 要检查的完整路径\n * @return 当且仅当路径存在且是普通文件时返回 true\n */\nexport function isFile(filePath : string):boolean {\n\tconst result = checkExistence(filePath);\n\treturn result[0] && !result[1]\n}\n\n\n\nexport function fileToBase64(filePath : string) : NullableString {\n\ttry {\n\t\tconst context = UTSAndroid.getUniActivity()!;\n\t\tlet path = filePath;\n\t\tlet imageBytes : NullByteArray = null\n\n\t\tif (path.startsWith(\"file://\")) {\n\t\t\tpath = path.replace(\"file://\", \"\")\n\t\t} else {\n\t\t\t// if(!path.startsWith(\"/storage\") && !path.startsWith(\"/android_asset/\"))\n\t\t\t// path = UTSAndroid.getResourcePath(path)\n\t\t\tpath = UTSAndroid.convert2AbsFullPath(path)\n\t\t}\n\n\t\tif (path.startsWith(\"/android_asset/\")) {\n\t\t\timageBytes = inputStreamToArray(context.getResources()!.getAssets().open(path.replace('/android_asset/', '')))\n\t\t} else {\n\t\t\tconst file = new File(path)\n\t\t\tif (file.exists()) {\n\t\t\t\tlet fis : FileInputStream = new FileInputStream(file);\n\t\t\t\timageBytes = inputStreamToArray(fis);\n\t\t\t\tfis.close();\n\t\t\t}\n\t\t}\n\t\tif (imageBytes == null) return null\n\t\treturn Base64.encodeToString(imageBytes, Base64.DEFAULT)\n\t} catch (e) {\n\t\treturn null\n\t}\n}\nexport function fileToDataURL(filePath : string) : NullableString {\n\tconst base64 = fileToBase64(filePath)\n\tconst mimeType = getMimeType(filePath);\n\tif (base64 == null || mimeType == null) return null;\n\treturn \"data:\" + mimeType + \";base64,\" + base64;\n}\n\n\nfunction getFileExtensionFromDataURL(dataURL : string) : string {\n\tconst commaIndex = dataURL.indexOf(\",\");\n\tconst mimeType = dataURL.substring(0, commaIndex).replace(\"data:\", \"\").replace(\";base64\", \"\");\n\tconst mimeTypeParts = mimeType.split(\"/\");\n\treturn mimeTypeParts[1];\n}\nfunction dataURLToBytes(dataURL : string) : ByteArray {\n\tconst commaIndex = dataURL.indexOf(\",\");\n\tconst base64 = dataURL.substring(commaIndex + 1);\n\treturn Base64.decode(base64, Base64.DEFAULT);\n}\n\nexport function dataURLToFile(dataURL : string, filename : NullableString = null) : NullableString {\n\ttry {\n\t\tconst bytes = dataURLToBytes(dataURL);\n\t\tconst name = filename ?? `${Date.now()}.${getFileExtensionFromDataURL(dataURL)}`;\n\t\tconst cacheDir = UTSAndroid.getAppCachePath()!;\n\t\tconst destFile = new File(cacheDir, name);\n\t\tconst path = new File(cacheDir); \n\t\tif(!path.exists()){\n\t\t\tpath.mkdir(); \n\t\t}\n\t\tconst fos = new FileOutputStream(destFile)\n\t\tfos.write(bytes);\n\t\tfos.close();\n\t\treturn `${cacheDir}${name}`\n\t} catch (e) {\n\t\t__f__('error','at uni_modules/lime-file-utils/utssdk/app-android/index.uts:183','dataURLToFile::', e)\n\t\treturn null\n\t}\n}\n\n\n// function requestSystemPermission(fun:()=> void) {\n// \tlet permissionNeed = [\"android.permission.WRITE_EXTERNAL_STORAGE\"]\n// \tUTSAndroid.requestSystemPermission(UTSAndroid.getUniActivity()!, permissionNeed, function (allRight : boolean, _ : string[]) {\n// \t\tif (allRight) {\n// \t\t\t// 权限请求成功\n// \t\t\t__f__('log','at uni_modules/lime-file-utils/utssdk/app-android/index.uts:194',`allRight`, allRight)\n// \t\t\tfun()\n// \t\t} else {\n// \t\t\t//用户拒绝了部分权限\n// \t\t}\n// \t}, function (_ : boolean, _ : string[]) {\n// \t\t//用户拒绝了部分权限\n// \t})\n// }\n\n\nexport function processFile(options : ProcessFileOptions) {\n\n\tif (options.type == 'toBase64') {\n\t\tconst res = fileToBase64(options.path)\n\t\tconst err = 'fileToBase64: 解析失败'\n\t\tif (res != null) {\n\t\t\toptions.success?.(res)\n\t\t\toptions.complete?.(res)\n\t\t} else {\n\t\t\toptions.complete?.(err)\n\t\t\toptions.fail?.(err)\n\t\t}\n\t} else if (options.type == 'toDataURL') {\n\t\tconst res = fileToDataURL(options.path)\n\t\tconst err = 'fileToDataURL: 解析失败'\n\t\tif (res != null) {\n\t\t\toptions.success?.(res)\n\t\t\toptions.complete?.(res)\n\t\t} else {\n\t\t\toptions.complete?.(err)\n\t\t\toptions.fail?.(err)\n\t\t}\n\t} else if (options.type == 'toFile') {\n\t\tconst res = dataURLToFile(options.path, options.filename)\n\t\tconst err = 'dataURLToFile: 解析失败'\n\t\tif (res != null) {\n\t\t\toptions.success?.(res)\n\t\t\toptions.complete?.(res)\n\t\t} else {\n\t\t\toptions.complete?.(err)\n\t\t\toptions.fail?.(err)\n\t\t}\n\t}\n}","// @ts-nocheck\nexport type NullableString = string | null\nexport type ConversionType = 'toBase64' | 'toDataURL' | 'toFile'\nexport type ProcessFileOptions = {\n  type : ConversionType\n  path: string\n  filename?: string\n  success ?: (res : string) => void\n  fail ?: (res : any) => void\n  complete ?: (res : any) => void\n}\n\n\n\n/**\n * 错误码\n * 根据uni错误码规范要求，建议错误码以90开头，以下是错误码示例：\n * - 9010001 错误信息1\n * - 9010002 错误信息2\n */\nexport type ProcessFileErrorCode = 9010001 | 9010002;\n/**\n * myApi 的错误回调参数\n */\nexport interface ProcessFileFail extends IUniError {\n  errCode : ProcessFileErrorCode\n};\n"],"names":[],"mappings":"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"}