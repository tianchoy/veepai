<template>
	<view class="custom-nav">
		<view class="nav-back" @click="goBack">
			<fui-icon v-if="props.showBack" name="arrowleft" size="50" />
		</view>
		<view class="nav-item">
			<text class="nav-title" >
				{{ props.title }}
			</text>
		</view>
		<view class="nav-actions"  @click="rightIcon">
			<text v-if="isText">
				{{ rightText }}
			</text>
			<fui-icon v-else :name="rightText" size="45" />
		</view>
	</view>
</template>

<script setup lang="uts">

	const props = defineProps({
		title: {
			type: String,
			default:'首页'
		},
		showBack: {
			type: Boolean,
			default: false
		},
		messageCount: {
			type: Number,
			default: 0
		},
		rightText:{
			type:String,
			default:''
		},
		isText:{
			type:Boolean,
			default:false
		}
	})

	// 定义触发给父组件的事件 
	const emits = defineEmits(['back', 'message', 'rightEvent'])

	// 导航事件处理
	const goBack = () => emits('back')
	const onMessage = () => emits('message')
	const rightIcon = () => emits('rightEvent')
	
</script>

<style scoped lang="scss">
	.custom-nav {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 100rpx 20rpx 30rpx 20rpx;
		width:100%;
		// #ifdef MP-WEIXIN
		padding: 110rpx 20rpx 30rpx 20rpx;
    	width: 80%;
		// #endif
	}

	.nav-back {
		width: 45rpx;
		height: 45rpx;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	.nav-item {
		display: flex;
		flex-direction: row;
		align-items: flex-end;
		justify-content: space-around;
	}

	.nav-title {
		color: #333;
		margin: 0 20rpx;
		max-width: 400rpx;
		text-align: center;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	.nav-actions {
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	.nav-icon {
		width: 45rpx;
		height: 45rpx;
		display: flex;
		align-items: center;
		justify-content: center;
		position: relative;
		margin-left: 16rpx;
	}
</style>