<template>
	<view class="demo-block">
		<text class="demo-block__title-text ultra">Tabs 选项卡</text>
		<text class="demo-block__desc-text">用于在不同的内容区域之间进行切换</text>
		<view class="demo-block__body">
			<view class="demo-block">
				<text class="demo-block__title-text">基础用法1</text>
				<view class="demo-block__body">
					<!-- <l-tabs v-model="typeIndex" 
						v-if="alltypeList.length > 0"
						color="#606266" activeColor="#C4302C" lineColor="#C4302C">
						<l-tab-panel :value="-1" label="推荐">
						</l-tab-panel>
						<l-tab-panel :value="index" :label="item['name']"  v-for="(item, index) in alltypeList" :key="index">
						</l-tab-panel>
					</l-tabs> -->
					
					<l-tabs v-model="value" :list="list"></l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">子组件</text>
				<view class="demo-block__body ">
					<l-tabs>
					    <l-tab-panel :value="0" label="选项" />
					    <l-tab-panel :value="1" label="选项" disabled />
					    <l-tab-panel :value="2" label="选项" />
					</l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">标签栏滚动</text>
				<view class="demo-block__body ">
					<l-tabs :space-evenly="false">
					    <l-tab-panel :value="0" label="选项" />
					    <l-tab-panel :value="1" label="选项" />
					    <l-tab-panel :value="2" label="选项" />
					    <l-tab-panel :value="3" label="选项" />
					    <l-tab-panel :value="4" label="选项" />
					    <l-tab-panel :value="5" label="选项" />
					    <l-tab-panel :value="6" label="选项" />
					</l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">徽标</text>
				<view class="demo-block__body ">
					<l-tabs :space-evenly="false">
					    <l-tab-panel :value="0" label="选项" />
					    <l-tab-panel :value="1" label="选项" :dot="true" />
					    <l-tab-panel :value="2" label="选项" />
					    <l-tab-panel :value="3" label="选项" badge="8" :offset="[2,-5]"/>
					    <l-tab-panel :value="4" label="选项" />
					    <l-tab-panel :value="5" label="选项" />
					    <l-tab-panel :value="6" label="选项" />
					</l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">切换动画</text>
				<view class="demo-block__body ">
					<l-tabs v-model="value" :space-evenly="false" animated>
					    <l-tab-panel :value="0" label="选项">
							<text style="padding: 15px;">选项卡内容1</text>
						</l-tab-panel>
					    <l-tab-panel :value="1" label="选项">
							<text style="padding: 15px;">选项卡内容2</text>
						</l-tab-panel>
					    <l-tab-panel :value="2" label="选项">
							<text style="padding: 15px;">选项卡内容3</text>
						</l-tab-panel>
					    <l-tab-panel :value="3" label="选项">
							<text style="padding: 15px;">选项卡内容4</text>
						</l-tab-panel>
					    <l-tab-panel :value="4" label="选项">
							<text style="padding: 15px;">选项卡内容5</text>
						</l-tab-panel>
					    <l-tab-panel :value="5" label="选项">
							<text style="padding: 15px;">选项卡内容6</text>
						</l-tab-panel>
					    <l-tab-panel :value="6" label="选项">
							<text style="padding: 15px;">选项卡内容7</text>
						</l-tab-panel>
					</l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">滑动切换</text>
				<view class="demo-block__body ">
					<l-tabs v-model="value" :space-evenly="false" animated swipeable>
					    <l-tab-panel :value="0" label="选项">
							<text style="padding: 15px;">选项卡内容1</text>
						</l-tab-panel>
					    <l-tab-panel :value="1" label="选项">
							<text style="padding: 15px;">选项卡内容2</text>
						</l-tab-panel>
					    <l-tab-panel :value="2" label="选项">
							<text style="padding: 15px;">选项卡内容3</text>
						</l-tab-panel>
					    <l-tab-panel :value="3" label="选项">
							<text style="padding: 15px;">选项卡内容4</text>
						</l-tab-panel>
					    <l-tab-panel :value="4" label="选项">
							<text style="padding: 15px;">选项卡内容5</text>
						</l-tab-panel>
					    <l-tab-panel :value="5" label="选项">
							<text style="padding: 15px;">选项卡内容6</text>
						</l-tab-panel>
					    <l-tab-panel :value="6" label="选项">
							<text style="padding: 15px;">选项卡内容7</text>
						</l-tab-panel>
					</l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">受控</text>
				<view class="demo-block__body ">
					<l-tabs :value="value" :space-evenly="false" animated swipeable @click="onClick">
					    <l-tab-panel :value="0" label="选项">
							<text style="padding: 15px;">选项卡内容1</text>
						</l-tab-panel>
					    <l-tab-panel :value="1" label="选项">
							<text style="padding: 15px;">选项卡内容2</text>
						</l-tab-panel>
					    <l-tab-panel :value="2" label="选项">
							<text style="padding: 15px;">选项卡内容3</text>
						</l-tab-panel>
					    <l-tab-panel :value="3" label="选项">
							<text style="padding: 15px;">选项卡内容4</text>
						</l-tab-panel>
					    <l-tab-panel :value="4" label="选项">
							<text style="padding: 15px;">选项卡内容5</text>
						</l-tab-panel>
					    <l-tab-panel :value="5" label="选项">
							<text style="padding: 15px;">选项卡内容6</text>
						</l-tab-panel>
					    <l-tab-panel :value="6" label="选项">
							<text style="padding: 15px;">选项卡内容7</text>
						</l-tab-panel>
					</l-tabs>
				</view>
			</view>
			<view class="demo-block">
				<text class="demo-block__title-text">插槽</text>
				<view class="demo-block__body ">
					<l-tabs :value="value" :space-evenly="false" animated swipeable @click="onClick">
						<template #label="{item}">
							<text>{{item['label']}}</text>
						</template>
						<template #left>
							<text>left</text>
						</template>
						<template #right>
							<text>right</text>
						</template>
					    <l-tab-panel :value="0" label="选项">
							<text style="padding: 15px;">选项卡内容1</text>
						</l-tab-panel>
					    <l-tab-panel :value="1" label="选项">
							<text style="padding: 15px;">选项卡内容2</text>
						</l-tab-panel>
					    <l-tab-panel :value="2" label="选项">
							<text style="padding: 15px;">选项卡内容3</text>
						</l-tab-panel>
					    <l-tab-panel :value="3" label="选项">
							<text style="padding: 15px;">选项卡内容4</text>
						</l-tab-panel>
					    <l-tab-panel :value="4" label="选项">
							<text style="padding: 15px;">选项卡内容5</text>
						</l-tab-panel>
					    <l-tab-panel :value="5" label="选项">
							<text style="padding: 15px;">选项卡内容6</text>
						</l-tab-panel>
					    <l-tab-panel :value="6" label="选项">
							<text style="padding: 15px;">选项卡内容7</text>
						</l-tab-panel>
					</l-tabs>
				</view>
			</view>
			
			<view class="demo-block">
				<text class="demo-block__title-text">与swiper联动</text>
				<view class="demo-block__body">
					<l-tabs v-model="activeIndex" :swiper-progress="swiperProgress" syncSwiper>
						<l-tab-panel label="1"></l-tab-panel>
						<l-tab-panel label="2"></l-tab-panel>
						<l-tab-panel label="3"></l-tab-panel>
					</l-tabs>
			
					<swiper :current="activeIndex" @transition="onSwiperTransition" @animationfinish="onSwiperChange">
						<swiper-item>
							<text style="height:200px; background: red">1</text>
						</swiper-item>
						<swiper-item>
							<text style="height:200px; background: yellow">2</text>
						</swiper-item>
						<swiper-item>
							<text style="height:200px; background: green">3</text>
						</swiper-item>
					</swiper>
			
				</view>
			</view>
		</view>
	</view>
</template>

<script setup>
	const typeIndex = ref(1);
	const value = ref(1);
	const list = [
		{
			value: 1,
			label: '选项',
		},
		{
			value: 2,
			label: '选项',
		},
		{
			value: 3,
			label: '选项',
		},
		{
			value: 4,
			label: '选项',
		}
	]
	const alltypeList = ref<UTSJSONObject[]>([
		// {
		// 	value: 1,
		// 	name: '选项1',
		// }
	]) 
	
	
	setTimeout(()=>{
		alltypeList.value.push(...[
			{
				value: 2,
				name: '选项',
			},
			{
				value: 3,
				name: '选项',
			},
			{
				value: 4,
				name: '选项',
			},
			{
				value: 5,
				name: '选项',
			}
		])
	}, 12000)
	
	const list2 = ref<UTSJSONObject[]>([])

    const list3 = [
			{
				value: 1,
				label: '选项1',
			},
			{
				value: 2,
				label: '选项2',
				badge: 5,
			},
			{
				value: 3,
				label: '选项3',
			},
			{
				value: 4,
				label: '选项4',
				badge: 'new',
				offset: [-8,3]
			},
			{
				value: 5,
				label: '选项5',
				disabled: true,
			},
			{
				value: 6,
				label: '选项6',
			},

			{
				value: 7,
				label: '选项7',
			},
			{
				value: 8,
				label: '选项8',
			},
			{
				value: 9,
				label: '选项9',
			},
		]
	setTimeout(() => {
		// value.value = 5
		list2.value = [
			{
				value: 1,
				label: '选项1',
			},
			{
				value: 2,
				label: '选项2',
				badge: 5,
			},
			{
				value: 3,
				label: '选项3',
			},
			{
				value: 4,
				label: '选项4',
				badge: 'new',
			},
			{
				value: 5,
				label: '选项5',
				disabled: true,
			},
			{
				value: 6,
				label: '选项6',
			},

			{
				value: 7,
				label: '选项7',
			},
			{
				value: 8,
				label: '选项8',
			},
			{
				value: 9,
				label: '选项9',
			},
		]
	}, 1000)
	
	
	const onClick = (index: number) => {
		uni.showLoading({title:'校验中'})
		
		setTimeout(()=>{
			uni.hideLoading()
			value.value = index
		},1000)
		
	}
	
	
	const activeIndex = ref(0)
	const swiperProgress = ref(0) // 滚动进度 (0~1)
	
	// Swiper 滚动时触发
	const onSwiperTransition = (e : UniSwiperTransitionEvent) => {
		swiperProgress.value = e.detail.dx / (e.currentTarget?.getBoundingClientRect().width ?? 0)
		// console.log('swiperProgress.value', swiperProgress.value)
	}
	
	// Swiper 切换完成时触发
	const onSwiperChange = (e : UniSwiperAnimationFinishEvent) => {
		activeIndex.value = e.detail.current
		swiperProgress.value = 0 // 重置进度
	}
	
	
</script>

<style lang="scss">
	.btn {
		margin-bottom: 20rpx;
		margin-right: 20rpx;
		align-self: center;
	}

	.demo-block {
		margin: 32px 0 0;

		// overflow: visible;
		&.card {
			background-color: white;
			padding: 30rpx;
			margin-left: 10px !important;
			margin-right: 10px !important;
			margin-bottom: 20rpx !important;
		}

		&__title {
			margin: 0;
			margin-top: 8px;

			&-text {
				color: rgba(0, 0, 0, 0.6);
				font-weight: 400;
				font-size: 14px;
				line-height: 16px;
				display: flex;
				margin-left: 20px;

				&.large {
					color: rgba(0, 0, 0, 0.9);
					font-size: 18px;
					font-weight: 700;
					line-height: 26px;
					margin-left: 20px;
				}

				&.ultra {
					color: rgba(0, 0, 0, 0.9);
					font-size: 24px;
					font-weight: 700;
					line-height: 32px;
				}
			}
		}

		&__desc-text {
			color: rgba(0, 0, 0, 0.6);
			margin: 8px 16px 0 0;
			font-size: 14px;
			line-height: 22px;
			margin-left: 20px;
		}

		&__body {
			margin: 16px 0;
			overflow: visible;

			.demo-block {
				// margin-top: 0px;
				margin: 0;
			}
		}
	}
</style>